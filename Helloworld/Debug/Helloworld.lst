
Helloworld.elf:     file format elf32-littleriscv
Helloworld.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x80000000

Program Header:
    LOAD off    0x00001000 vaddr 0x80000000 paddr 0x80000000 align 2**12
         filesz 0x000025d8 memsz 0x000025d8 flags r-x
    LOAD off    0x00004000 vaddr 0x90000000 paddr 0x800025d8 align 2**12
         filesz 0x00000074 memsz 0x00000074 flags rw-
    LOAD off    0x00000074 vaddr 0x90000074 paddr 0x90000074 align 2**12
         filesz 0x00000000 memsz 0x000001e4 flags rw-
    LOAD off    0x00000800 vaddr 0x9000f800 paddr 0x90000258 align 2**12
         filesz 0x00000000 memsz 0x00000800 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000000c0  80000000  80000000  00001000  2**0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ilalign          00000000  800000c0  800000c0  00004074  2**0  CONTENTS
  2 .text             00002162  800000c0  800000c0  000010c0  2**6  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           000003b4  80002224  80002224  00003224  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .lalign           00000000  800025d8  800025d8  00004074  2**0  CONTENTS
  5 .dalign           00000000  90000000  90000000  00004074  2**0  CONTENTS
  6 .data             00000074  90000000  800025d8  00004000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss              000001e4  90000074  90000074  00004074  2**2  ALLOC
  8 .stack            00000800  9000f800  90000258  00004800  2**0  ALLOC
  9 .debug_info       0000394d  00000000  00000000  00004074  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00001306  00000000  00000000  000079c1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc        000022bc  00000000  00000000  00008cc7  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges    00000388  00000000  00000000  0000af88  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges     00000470  00000000  00000000  0000b310  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line       0000459d  00000000  00000000  0000b780  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str        0000161d  00000000  00000000  0000fd1d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment          00000012  00000000  00000000  0001133a  2**0  CONTENTS, READONLY
 17 .riscv.attributes 0000002f  00000000  00000000  0001134c  2**0  CONTENTS, READONLY
 18 .debug_frame      00000518  00000000  00000000  0001137c  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
80000000 l    d  .init	00000000 .init
800000c0 l    d  .ilalign	00000000 .ilalign
800000c0 l    d  .text	00000000 .text
80002224 l    d  .rodata	00000000 .rodata
800025d8 l    d  .lalign	00000000 .lalign
90000000 l    d  .dalign	00000000 .dalign
90000000 l    d  .data	00000000 .data
90000074 l    d  .bss	00000000 .bss
9000f800 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 main.c
900001ac l     O .bss	0000001e misa_chars.0
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 getpid.c
00000000 l    df *ABS*	00000000 isatty.c
00000000 l    df *ABS*	00000000 kill.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 read.c
00000000 l    df *ABS*	00000000 sbrk.c
90000060 l     O .data	00000004 curbrk.0
00000000 l    df *ABS*	00000000 write.c
00000000 l    df *ABS*	00000000 hbird_gpio.c
00000000 l    df *ABS*	00000000 hbird_uart.c
00000000 l    df *ABS*	00000000 hbird_common.c
00000000 l    df *ABS*	00000000 system_hbird.c
8000049c l     F .text	00000044 system_default_exception_handler
800004e0 l     F .text	00000048 system_default_interrupt_handler
90000084 l     O .bss	00000028 SystemCoreInterruptHandlers
900000ac l     O .bss	0000002c SystemExceptionHandlers
900000d8 l     O .bss	000000d4 SystemExtInterruptHandlers
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sysisatty.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __atexit.c
900001cc l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
80001350 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
800018c0 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 impure.c
90000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 
800025d8 l       .rodata	00000000 __fini_array_end
800025d8 l       .rodata	00000000 __fini_array_start
800025d8 l       .rodata	00000000 __init_array_end
800025d8 l       .rodata	00000000 __preinit_array_end
800025d8 l       .rodata	00000000 __init_array_start
800025d8 l       .rodata	00000000 __preinit_array_start
800020cc g     F .text	00000030 _isatty_r
800001aa  w    F .text	00000004 _getpid
80000d38 g     F .text	000000da _puts_r
800020fc g     F .text	00000034 _lseek_r
800021ec g     F .text	00000032 _kill_r
80000cfe g     F .text	0000003a printf
90000860 g       .data	00000000 __global_pointer$
80001fec g     F .text	00000036 __sseek
80001406 g     F .text	00000066 __sinit
80000f30 g     F .text	000000c0 __swbuf_r
800013c2 g     F .text	00000044 __sfmoreglue
8000214c g     F .text	00000002 __malloc_unlock
8000209a g     F .text	00000032 _fstat_r
90000074 g     O .bss	00000004 errno
00000800 g       *ABS*	00000000 __stack_size
800003ae g     F .text	00000012 uart_write
800025d8 g       .rodata	00000000 __rt_init_start
800025d8 g       .rodata	00000000 __fsymtab_end
800000c0 g       .ilalign	00000000 _ilm_lma
800013b8 g     F .text	0000000a _cleanup_r
80000362 g     F .text	00000020 gpio_write
80000e12 g     F .text	00000008 puts
800025d8 g       .rodata	00000000 __rt_init_end
90000064 g     O .data	00000004 SystemCoreClock
8000168c g     F .text	00000008 malloc
80000f2c g     F .text	00000004 isatty
80002182 g     F .text	00000062 _raise_r
8000018c  w    F .text	0000001e _fstat
8000116e g     F .text	00000038 __assert_func
8000043c g     F .text	00000012 get_cpu_freq
8000221e g     F .text	00000004 _getpid_r
80001f3e g     F .text	00000030 _sbrk_r
8000214e g     F .text	00000034 _read_r
800025d8 g       .rodata	00000000 _eilm
9000f800 g       .stack	00000000 _heap_end
800001ae  w    F .text	00000004 _isatty
90000070 g     O .data	00000004 _global_impure_ptr
80000ca0 g     F .text	0000005e __libc_init_array
80000900 g     F .text	00000360 .hidden __udivdi3
8000205c g     F .text	0000000e abort
800001e6  w    F .text	0000002c _sbrk
800006c4 g     F .text	00000002 _init
80000c6a g     F .text	00000036 __libc_fini_array
800000c0 g       .ilalign	00000000 _ilm
800005cc g     F .text	000000f6 _premain_init
80001504 g     F .text	00000024 fprintf
8000044e g     F .text	0000004e delay_1ms
800024e4 g     O .rodata	00000020 __sf_fake_stderr
80000536 g     F .text	00000096 core_trap_handler
800018ea g     F .text	00000042 __sfputs_r
80000382 g     F .text	0000002c uart_init
80002130 g     F .text	0000001a memchr
8000173c g     F .text	000000a6 _free_r
90000078 g     O .bss	00000004 _global_atexit
90010000 g       .stack	00000000 _sp
80000000 g     F .init	00000000 _start
80000e8c g     F .text	000000a0 rand
800001c0  w    F .text	00000004 _lseek
800010f6 g     F .text	00000078 __register_exitproc
8000206a g     F .text	00000030 _close_r
80000ff0 g     F .text	00000106 __swsetup_r
8000146c g     F .text	00000098 __sfp
80001f6e g     F .text	00000030 __sread
8000214a g     F .text	00000002 __malloc_lock
800012ec g     F .text	00000064 _fflush_r
80002504 g     O .rodata	00000020 __sf_fake_stdin
90000074 g       .bss	00000000 __bss_start
80001694 g     F .text	000000a8 memset
800000c0 g     F .text	000000b8 main
80000280  w      .text	00000000 trap_entry
80000e1a g     F .text	00000072 srand
80002022 g     F .text	00000006 __sclose
800017e2 g     F .text	000000de _malloc_r
800025d8 g       .rodata	00000000 __vsymtab_start
80000528 g     F .text	0000000e SystemInit
800006c6 g     F .text	00000002 _fini
80000cfe g     F .text	0000003a iprintf
80002338 g     O .rodata	00000100 .hidden __clz_tab
80000346 g     F .text	0000001c gpio_enable_output
80000c60 g     F .text	0000000a atexit
80002028 g     F .text	00000034 _write_r
80001bc2 g     F .text	0000010c _printf_common
90000068 g     O .data	00000004 _impure_ptr
800011a6 g     F .text	00000146 __sflush_r
90000000 g       .dalign	00000000 _data
800025d8 g       .rodata	00000000 __vsymtab_end
800003d4 g     F .text	00000068 measure_cpu_freq
80001592 g     F .text	0000005c __swhatbuf_r
80000212  w    F .text	00000062 _write
90000074 g       .bss	00000000 _edata
800006c2 g     F .text	00000002 _postmain_fini
90000258 g       .bss	00000000 _end
800025d8 g       .lalign	00000000 _data_lma
800003c0 g     F .text	00000014 uart_read
80001f9e g     F .text	0000004e __swrite
80001504 g     F .text	00000024 fiprintf
8000192c g     F .text	00000296 _vfiprintf_r
80001528 g     F .text	0000006a _fwalk_reent
800001b2  w    F .text	0000000e _kill
80002524 g     O .rodata	00000020 __sf_fake_stdout
800006c8 g     F .text	00000238 print_misa
800001c4  w    F .text	00000022 _read
80000186  w    F .text	00000006 _exit
800015ee g     F .text	0000009e __smakebuf_r
80001cce g     F .text	00000270 _printf_i
90000080 g     O .bss	00000004 __malloc_sbrk_start
9000007c g     O .bss	00000004 __malloc_free_list
800025d8 g       .rodata	00000000 __fsymtab_start
8000192c g     F .text	00000296 _vfprintf_r
800002fc g     F .text	0000004a gpio_iof_config
800021e4 g     F .text	00000008 raise
80000178  w    F .text	0000000e _close



Disassembly of section .init:

80000000 <_start>:
_start():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:40
 * Reset Handler called on controller reset
 */
_start:
    /* ===== Startup Stage 1 ===== */
    /* Disable Global Interrupt */
    csrc CSR_MSTATUS, MSTATUS_MIE
80000000:	30047073          	csrci	mstatus,8
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:42
    /* Disable all interrupts controlled by CSR MIE */
    csrw CSR_MIE, 0x0
80000004:	30405073          	csrwi	mie,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:47

    /* Initialize GP and Stack Pointer SP */
    .option push
    .option norelax
    la gp, __global_pointer$
80000008:	10001197          	auipc	gp,0x10001
8000000c:	85818193          	addi	gp,gp,-1960 # 90000860 <__global_pointer$>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:49
    .option pop
    la sp, _sp
80000010:	10010117          	auipc	sp,0x10010
80000014:	ff010113          	addi	sp,sp,-16 # 90010000 <_sp>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:54

    /*
     * Set Trap Entry MTVEC to trap_entry
     */
    la t0, trap_entry
80000018:	00000297          	auipc	t0,0x0
8000001c:	26828293          	addi	t0,t0,616 # 80000280 <trap_entry>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:55
    csrw CSR_MTVEC, t0
80000020:	30529073          	csrw	mtvec,t0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:58

    /* Direct Mode: All exceptions set pc to BASE. */
    csrc CSR_MTVEC, 0x7
80000024:	3053f073          	csrci	mtvec,7
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:70
    csrs mstatus, t0
    csrw fcsr, x0
#endif

    /* Enable mcycle and minstret counter */
    csrci CSR_MCOUNTINHIBIT, 0x5
80000028:	3202f073          	csrci	mcountinhibit,5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:77
    /* ===== Startup Stage 3 ===== */
    /*
     * Load code section frm FLASH to ILM
     * when code LMA is different with VMA
     */
    la a0, _ilm_lma
8000002c:	00000517          	auipc	a0,0x0
80000030:	09450513          	addi	a0,a0,148 # 800000c0 <main>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:78
    la a1, _ilm
80000034:	00000597          	auipc	a1,0x0
80000038:	08c58593          	addi	a1,a1,140 # 800000c0 <main>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:80
    /* If the ILM phy-address same as the logic-address, then quit */
    beq a0, a1, 2f
8000003c:	02b50063          	beq	a0,a1,8000005c <_start+0x5c>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:81
    la a2, _eilm
80000040:	00002617          	auipc	a2,0x2
80000044:	59860613          	addi	a2,a2,1432 # 800025d8 <__fsymtab_end>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:82
    bgeu a1, a2, 2f
80000048:	00c5fa63          	bgeu	a1,a2,8000005c <_start+0x5c>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:86

1:
    /* Load code section if necessary */
    lw t0, (a0)
8000004c:	00052283          	lw	t0,0(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:87
    sw t0, (a1)
80000050:	0055a023          	sw	t0,0(a1)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:88
    addi a0, a0, 4
80000054:	0511                	addi	a0,a0,4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:89
    addi a1, a1, 4
80000056:	0591                	addi	a1,a1,4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:90
    bltu a1, a2, 1b
80000058:	fec5eae3          	bltu	a1,a2,8000004c <_start+0x4c>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:93
2:
    /* Load data section */
    la a0, _data_lma
8000005c:	00002517          	auipc	a0,0x2
80000060:	57c50513          	addi	a0,a0,1404 # 800025d8 <__fsymtab_end>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:94
    la a1, _data
80000064:	10000597          	auipc	a1,0x10000
80000068:	f9c58593          	addi	a1,a1,-100 # 90000000 <impure_data>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:95
    la a2, _edata
8000006c:	10000617          	auipc	a2,0x10000
80000070:	00860613          	addi	a2,a2,8 # 90000074 <errno>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:96
    bgeu a1, a2, 2f
80000074:	00c5fa63          	bgeu	a1,a2,80000088 <_start+0x88>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:98
1:
    lw t0, (a0)
80000078:	00052283          	lw	t0,0(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:99
    sw t0, (a1)
8000007c:	0055a023          	sw	t0,0(a1)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:100
    addi a0, a0, 4
80000080:	0511                	addi	a0,a0,4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:101
    addi a1, a1, 4
80000082:	0591                	addi	a1,a1,4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:102
    bltu a1, a2, 1b
80000084:	fec5eae3          	bltu	a1,a2,80000078 <_start+0x78>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:105
2:
    /* Clear bss section */
    la a0, __bss_start
80000088:	10000517          	auipc	a0,0x10000
8000008c:	fec50513          	addi	a0,a0,-20 # 90000074 <errno>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:106
    la a1, _end
80000090:	9f818593          	addi	a1,gp,-1544 # 90000258 <_end>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:107
    bgeu a0, a1, 2f
80000094:	00b57763          	bgeu	a0,a1,800000a2 <_start+0xa2>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:109
1:
    sw zero, (a0)
80000098:	00052023          	sw	zero,0(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:110
    addi a0, a0, 4
8000009c:	0511                	addi	a0,a0,4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:111
    bltu a0, a1, 1b
8000009e:	feb56de3          	bltu	a0,a1,80000098 <_start+0x98>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:118

    /*
     * Call vendor defined SystemInit to
     * initialize the micro-controller system
     */
    call SystemInit
800000a2:	2159                	jal	80000528 <SystemInit>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:121

    /* Call global constructors */
    la a0, __libc_fini_array
800000a4:	00001517          	auipc	a0,0x1
800000a8:	bc650513          	addi	a0,a0,-1082 # 80000c6a <__libc_fini_array>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:122
    call atexit
800000ac:	3b5000ef          	jal	ra,80000c60 <atexit>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:124
    /* Call C/C++ constructor start up code */
    call __libc_init_array
800000b0:	3f1000ef          	jal	ra,80000ca0 <__libc_init_array>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:127

    /* do pre-init steps before main */
    call _premain_init
800000b4:	2b21                	jal	800005cc <_premain_init>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:130
    /* ===== Call Main Function  ===== */
    /* argc = argv = 0 */
    li a0, 0
800000b6:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:131
    li a1, 0
800000b8:	4581                	li	a1,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:137

#ifdef RTOS_RTTHREAD
    // Call entry function when using RT-Thread
    call entry
#else
    call main
800000ba:	2019                	jal	800000c0 <main>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:140
#endif
    /* do post-main steps after main */
    call _postmain_fini
800000bc:	2519                	jal	800006c2 <_postmain_fini>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/startup_hbird.S:143

1:
    j 1b
800000be:	a001                	j	800000be <_start+0xbe>

Disassembly of section .text:

800000c0 <main>:
main():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:86

    printf("MISA: RV%s\r\n", misa_chars);
}

int main(void)
{
800000c0:	7179                	addi	sp,sp,-48
800000c2:	d606                	sw	ra,44(sp)
800000c4:	d422                	sw	s0,40(sp)
800000c6:	d226                	sw	s1,36(sp)
800000c8:	d04a                	sw	s2,32(sp)
__get_rv_cycle():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:492
{
#if __RISCV_XLEN == 32
    volatile uint32_t high0, low, high;
    uint64_t full;

    high0 = __RV_CSR_READ(CSR_MCYCLEH);
800000ca:	b80027f3          	csrr	a5,mcycleh
800000ce:	ca3e                	sw	a5,20(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:493
    low = __RV_CSR_READ(CSR_MCYCLE);
800000d0:	b00027f3          	csrr	a5,mcycle
800000d4:	cc3e                	sw	a5,24(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:494
    high = __RV_CSR_READ(CSR_MCYCLEH);
800000d6:	b80027f3          	csrr	a5,mcycleh
800000da:	ce3e                	sw	a5,28(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:495
    if (high0 != high) {
800000dc:	4752                	lw	a4,20(sp)
800000de:	47f2                	lw	a5,28(sp)
800000e0:	00f70563          	beq	a4,a5,800000ea <main+0x2a>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:496
        low = __RV_CSR_READ(CSR_MCYCLE);
800000e4:	b00027f3          	csrr	a5,mcycle
800000e8:	cc3e                	sw	a5,24(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:498
    }
    full = (((uint64_t)high) << 32) | low;
800000ea:	47f2                	lw	a5,28(sp)
800000ec:	47e2                	lw	a5,24(sp)
__get_rv_instret():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:519
{
#if __RISCV_XLEN == 32
    volatile uint32_t high0, low, high;
    uint64_t full;

    high0 = __RV_CSR_READ(CSR_MINSTRETH);
800000ee:	b8202773          	csrr	a4,minstreth
800000f2:	c43a                	sw	a4,8(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:520
    low = __RV_CSR_READ(CSR_MINSTRET);
800000f4:	b0202773          	csrr	a4,minstret
800000f8:	c63a                	sw	a4,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:521
    high = __RV_CSR_READ(CSR_MINSTRETH);
800000fa:	b8202773          	csrr	a4,minstreth
800000fe:	c83a                	sw	a4,16(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:522
    if (high0 != high) {
80000100:	46a2                	lw	a3,8(sp)
80000102:	4742                	lw	a4,16(sp)
80000104:	00e68563          	beq	a3,a4,8000010e <main+0x4e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:523
        low = __RV_CSR_READ(CSR_MINSTRET);
80000108:	b0202773          	csrr	a4,minstret
8000010c:	c63a                	sw	a4,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:525
    }
    full = (((uint64_t)high) << 32) | low;
8000010e:	4742                	lw	a4,16(sp)
80000110:	4732                	lw	a4,12(sp)
main():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:87
    srand(__get_rv_cycle()  | __get_rv_instret() | __RV_CSR_READ(CSR_MCYCLE));
80000112:	b0002573          	csrr	a0,mcycle
80000116:	8fd9                	or	a5,a5,a4
80000118:	8d5d                	or	a0,a0,a5
8000011a:	501000ef          	jal	ra,80000e1a <srand>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:88
    uint32_t rval = rand();
8000011e:	56f000ef          	jal	ra,80000e8c <rand>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:89
    rv_csr_t misa = __RV_CSR_READ(CSR_MISA);
80000122:	301025f3          	csrr	a1,misa
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:91

    printf("MISA: 0x%lx\r\n", misa);
80000126:	00002517          	auipc	a0,0x2
8000012a:	1d650513          	addi	a0,a0,470 # 800022fc <_getpid_r+0xde>
8000012e:	3d1000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:92
    print_misa();
80000132:	2b59                	jal	800006c8 <print_misa>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:94

    for (int i = 0; i < 20; i ++) {
80000134:	4401                	li	s0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:95
        printf("%d: Hello World From RISC-V Processor!\r\n", i);
80000136:	00002917          	auipc	s2,0x2
8000013a:	1d690913          	addi	s2,s2,470 # 8000230c <_getpid_r+0xee>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:94
    for (int i = 0; i < 20; i ++) {
8000013e:	44d1                	li	s1,20
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:95 (discriminator 3)
        printf("%d: Hello World From RISC-V Processor!\r\n", i);
80000140:	85a2                	mv	a1,s0
80000142:	854a                	mv	a0,s2
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:94 (discriminator 3)
    for (int i = 0; i < 20; i ++) {
80000144:	0405                	addi	s0,s0,1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:95 (discriminator 3)
        printf("%d: Hello World From RISC-V Processor!\r\n", i);
80000146:	3b9000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:94 (discriminator 3)
    for (int i = 0; i < 20; i ++) {
8000014a:	fe941be3          	bne	s0,s1,80000140 <main+0x80>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:98
    }

    gpio_enable_output(GPIO, SOC_LED_3_GPIO_MASK);
8000014e:	6591                	lui	a1,0x4
80000150:	10012537          	lui	a0,0x10012
80000154:	2acd                	jal	80000346 <gpio_enable_output>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:101 (discriminator 1)

    while(1){
    	gpio_write(GPIO, SOC_LED_3_GPIO_MASK, 1);
80000156:	4605                	li	a2,1
80000158:	6591                	lui	a1,0x4
8000015a:	10012537          	lui	a0,0x10012
8000015e:	2411                	jal	80000362 <gpio_write>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:102 (discriminator 1)
    	delay_1ms(300);
80000160:	12c00513          	li	a0,300
80000164:	24ed                	jal	8000044e <delay_1ms>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:103 (discriminator 1)
    	gpio_write(GPIO, SOC_LED_3_GPIO_MASK, 0);
80000166:	4601                	li	a2,0
80000168:	6591                	lui	a1,0x4
8000016a:	10012537          	lui	a0,0x10012
8000016e:	2ad5                	jal	80000362 <gpio_write>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:104 (discriminator 1)
    	delay_1ms(300);
80000170:	12c00513          	li	a0,300
80000174:	2ce9                	jal	8000044e <delay_1ms>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:100 (discriminator 1)
    while(1){
80000176:	b7c5                	j	80000156 <main+0x96>

80000178 <_close>:
_close():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/close.c:10
#undef errno
extern int errno;

__WEAK int _close(int fd)
{
    errno = EBADF;
80000178:	47a5                	li	a5,9
8000017a:	10000717          	auipc	a4,0x10000
8000017e:	eef72d23          	sw	a5,-262(a4) # 90000074 <errno>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/close.c:12
    return -1;
}
80000182:	557d                	li	a0,-1
80000184:	8082                	ret

80000186 <_exit>:
__WFI():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_base.h:598 (discriminator 1)
 * the hardware platform that suitable interrupts should
 * preferentially be routed to this hart.
 */
__STATIC_FORCEINLINE void __WFI(void)
{
    __ASM volatile("wfi");
80000186:	10500073          	wfi
8000018a:	bff5                	j	80000186 <_exit>

8000018c <_fstat>:
_fstat():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/fstat.c:12
#undef errno
extern int errno;

__WEAK int _fstat(int file, struct stat *st)
{
    if ((STDOUT_FILENO == file) || (STDERR_FILENO == file)) {
8000018c:	157d                	addi	a0,a0,-1
8000018e:	4785                	li	a5,1
80000190:	00a7e663          	bltu	a5,a0,8000019c <_fstat+0x10>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/fstat.c:13
        st->st_mode = S_IFCHR;
80000194:	6789                	lui	a5,0x2
80000196:	c1dc                	sw	a5,4(a1)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/fstat.c:14
        return 0;
80000198:	4501                	li	a0,0
8000019a:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/fstat.c:16
    } else {
        errno = EBADF;
8000019c:	47a5                	li	a5,9
8000019e:	10000717          	auipc	a4,0x10000
800001a2:	ecf72b23          	sw	a5,-298(a4) # 90000074 <errno>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/fstat.c:17
        return -1;
800001a6:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/fstat.c:19
    }
}
800001a8:	8082                	ret

800001aa <_getpid>:
_getpid():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/getpid.c:8
#include <errno.h>

__WEAK int _getpid(void)
{
    return 1;
}
800001aa:	4505                	li	a0,1
800001ac:	8082                	ret

800001ae <_isatty>:
_isatty():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/isatty.c:8
#include <unistd.h>

__WEAK int _isatty(int fd)
{
    return 1;
}
800001ae:	4505                	li	a0,1
800001b0:	8082                	ret

800001b2 <_kill>:
_kill():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/kill.c:9
#undef errno
extern int errno;

__WEAK int _kill(int pid, int sig)
{
    errno = EINVAL;
800001b2:	47d9                	li	a5,22
800001b4:	10000717          	auipc	a4,0x10000
800001b8:	ecf72023          	sw	a5,-320(a4) # 90000074 <errno>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/kill.c:11
    return -1;
}
800001bc:	557d                	li	a0,-1
800001be:	8082                	ret

800001c0 <_lseek>:
_lseek():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/lseek.c:11
extern int errno;

__WEAK int _lseek(int file, int offset, int whence)
{
    return 0;
}
800001c0:	4501                	li	a0,0
800001c2:	8082                	ret

800001c4 <_read>:
_read():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:12

// #define UART_AUTO_ECHO

__WEAK ssize_t _read(int fd, void* ptr, size_t len)
{
    if (fd != STDIN_FILENO) {
800001c4:	c119                	beqz	a0,800001ca <_read+0x6>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:13
        return -1;
800001c6:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:22
    readbuf[0] = uart_read(SOC_DEBUG_UART);
#ifdef UART_AUTO_ECHO
    uart_write(SOC_DEBUG_UART, readbuf[0]);
#endif
    return 1;
}
800001c8:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:11
{
800001ca:	1141                	addi	sp,sp,-16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:17
    readbuf[0] = uart_read(SOC_DEBUG_UART);
800001cc:	10013537          	lui	a0,0x10013
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:11
{
800001d0:	c422                	sw	s0,8(sp)
800001d2:	c606                	sw	ra,12(sp)
800001d4:	842e                	mv	s0,a1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:17
    readbuf[0] = uart_read(SOC_DEBUG_UART);
800001d6:	22ed                	jal	800003c0 <uart_read>
800001d8:	00a40023          	sb	a0,0(s0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:22
}
800001dc:	40b2                	lw	ra,12(sp)
800001de:	4422                	lw	s0,8(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:21
    return 1;
800001e0:	4505                	li	a0,1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/read.c:22
}
800001e2:	0141                	addi	sp,sp,16
800001e4:	8082                	ret

800001e6 <_sbrk>:
_sbrk():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/sbrk.c:13
{
    extern char _end[];
    extern char _heap_end[];
    static char *curbrk = _end;

    if ((curbrk + incr < _end) || (curbrk + incr > _heap_end)) {
800001e6:	10000717          	auipc	a4,0x10000
800001ea:	e7a70713          	addi	a4,a4,-390 # 90000060 <curbrk.0>
800001ee:	431c                	lw	a5,0(a4)
800001f0:	9f818693          	addi	a3,gp,-1544 # 90000258 <_end>
800001f4:	953e                	add	a0,a0,a5
800001f6:	00d56b63          	bltu	a0,a3,8000020c <_sbrk+0x26>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/sbrk.c:13 (discriminator 1)
800001fa:	1000f697          	auipc	a3,0x1000f
800001fe:	60668693          	addi	a3,a3,1542 # 9000f800 <_heap_end>
80000202:	00a6e563          	bltu	a3,a0,8000020c <_sbrk+0x26>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/sbrk.c:17
        return (void *)(-1);
    }

    curbrk += incr;
80000206:	c308                	sw	a0,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/sbrk.c:19
    return (void *)(curbrk - incr);
}
80000208:	853e                	mv	a0,a5
8000020a:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/sbrk.c:14
        return (void *)(-1);
8000020c:	57fd                	li	a5,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/sbrk.c:19
}
8000020e:	853e                	mv	a0,a5
80000210:	8082                	ret

80000212 <_write>:
_write():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:9
#include <unistd.h>
#include <sys/types.h>
#include <hbird_sdk_hal.h>

__WEAK ssize_t _write(int fd, const void* ptr, size_t len)
{
80000212:	1101                	addi	sp,sp,-32
80000214:	cc22                	sw	s0,24(sp)
80000216:	c64e                	sw	s3,12(sp)
80000218:	ce06                	sw	ra,28(sp)
8000021a:	ca26                	sw	s1,20(sp)
8000021c:	c84a                	sw	s2,16(sp)
8000021e:	842e                	mv	s0,a1
80000220:	89b2                	mv	s3,a2
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:10
    if (!isatty(fd)) {
80000222:	50b000ef          	jal	ra,80000f2c <isatty>
80000226:	c529                	beqz	a0,80000270 <_write+0x5e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:15
        return -1;
    }

    const uint8_t *writebuf = (const uint8_t *)ptr;
    for (size_t i = 0; i < len; i++) {
80000228:	01340933          	add	s2,s0,s3
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
8000022c:	44a9                	li	s1,10
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
8000022e:	00099963          	bnez	s3,80000240 <_write+0x2e>
80000232:	a03d                	j	80000260 <_write+0x4e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:15 (discriminator 2)
80000234:	0405                	addi	s0,s0,1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:19 (discriminator 2)
            uart_write(SOC_DEBUG_UART, '\r');
        }
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000236:	10013537          	lui	a0,0x10013
8000023a:	2a95                	jal	800003ae <uart_write>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:15 (discriminator 2)
    for (size_t i = 0; i < len; i++) {
8000023c:	03240263          	beq	s0,s2,80000260 <_write+0x4e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:16
        if (writebuf[i] == '\n') {
80000240:	00044583          	lbu	a1,0(s0)
80000244:	fe9598e3          	bne	a1,s1,80000234 <_write+0x22>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:17
            uart_write(SOC_DEBUG_UART, '\r');
80000248:	45b5                	li	a1,13
8000024a:	10013537          	lui	a0,0x10013
8000024e:	2285                	jal	800003ae <uart_write>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
80000250:	00044583          	lbu	a1,0(s0)
80000254:	10013537          	lui	a0,0x10013
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
80000258:	0405                	addi	s0,s0,1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:19
        uart_write(SOC_DEBUG_UART, writebuf[i]);
8000025a:	2a91                	jal	800003ae <uart_write>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:15
    for (size_t i = 0; i < len; i++) {
8000025c:	ff2412e3          	bne	s0,s2,80000240 <_write+0x2e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:21
    }
    return len;
80000260:	854e                	mv	a0,s3
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:22
}
80000262:	40f2                	lw	ra,28(sp)
80000264:	4462                	lw	s0,24(sp)
80000266:	44d2                	lw	s1,20(sp)
80000268:	4942                	lw	s2,16(sp)
8000026a:	49b2                	lw	s3,12(sp)
8000026c:	6105                	addi	sp,sp,32
8000026e:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Stubs/write.c:11
        return -1;
80000270:	557d                	li	a0,-1
80000272:	bfc5                	j	80000262 <_write+0x50>
	...

80000280 <trap_entry>:
trap_entry():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:155
.align 6
.global trap_entry
.weak trap_entry
trap_entry:
    /* Save the caller saving registers (context) */
    SAVE_CONTEXT
80000280:	715d                	addi	sp,sp,-80
80000282:	c006                	sw	ra,0(sp)
80000284:	c212                	sw	tp,4(sp)
80000286:	c416                	sw	t0,8(sp)
80000288:	c61a                	sw	t1,12(sp)
8000028a:	c81e                	sw	t2,16(sp)
8000028c:	ca2a                	sw	a0,20(sp)
8000028e:	cc2e                	sw	a1,24(sp)
80000290:	ce32                	sw	a2,28(sp)
80000292:	d036                	sw	a3,32(sp)
80000294:	d23a                	sw	a4,36(sp)
80000296:	d43e                	sw	a5,40(sp)
80000298:	dc42                	sw	a6,56(sp)
8000029a:	de46                	sw	a7,60(sp)
8000029c:	c0f2                	sw	t3,64(sp)
8000029e:	c2f6                	sw	t4,68(sp)
800002a0:	c4fa                	sw	t5,72(sp)
800002a2:	c6fe                	sw	t6,76(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:157
    /* Save the necessary CSR registers */
    SAVE_CSR_CONTEXT
800002a4:	341022f3          	csrr	t0,mepc
800002a8:	d816                	sw	t0,48(sp)
800002aa:	342022f3          	csrr	t0,mcause
800002ae:	d616                	sw	t0,44(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:164
    /*
     * Set the exception handler function arguments
     * argument 1: mcause value
     * argument 2: current stack point(SP) value
     */
    csrr a0, mcause
800002b0:	34202573          	csrr	a0,mcause
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:165
    mv a1, sp
800002b4:	858a                	mv	a1,sp
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:171
    /*
     * TODO: Call the trap handler function
     * By default, the function template is provided in
     * system_Device.c, you can adjust it as you want
     */
    call core_trap_handler
800002b6:	2441                	jal	80000536 <core_trap_handler>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:174

    /* Restore the necessary CSR registers */
    RESTORE_CSR_CONTEXT
800002b8:	52c2                	lw	t0,48(sp)
800002ba:	34129073          	csrw	mepc,t0
800002be:	52b2                	lw	t0,44(sp)
800002c0:	34229073          	csrw	mcause,t0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:176
    /* Restore the caller saving registers (context) */
    RESTORE_CONTEXT
800002c4:	4082                	lw	ra,0(sp)
800002c6:	4212                	lw	tp,4(sp)
800002c8:	42a2                	lw	t0,8(sp)
800002ca:	4332                	lw	t1,12(sp)
800002cc:	43c2                	lw	t2,16(sp)
800002ce:	4552                	lw	a0,20(sp)
800002d0:	45e2                	lw	a1,24(sp)
800002d2:	4672                	lw	a2,28(sp)
800002d4:	5682                	lw	a3,32(sp)
800002d6:	5712                	lw	a4,36(sp)
800002d8:	57a2                	lw	a5,40(sp)
800002da:	5862                	lw	a6,56(sp)
800002dc:	58f2                	lw	a7,60(sp)
800002de:	4e06                	lw	t3,64(sp)
800002e0:	4e96                	lw	t4,68(sp)
800002e2:	4f26                	lw	t5,72(sp)
800002e4:	4fb6                	lw	t6,76(sp)
800002e6:	6161                	addi	sp,sp,80
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/GCC/intexc_hbird.S:179

    /* Return to regular code */
    mret
800002e8:	30200073          	mret
	...

800002fc <gpio_iof_config>:
gpio_iof_config():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:5
#include "hbird.h"
#include "hbird_gpio.h"

int32_t gpio_iof_config(GPIO_TypeDef *gpio, uint32_t mask, IOF_FUNC func)
{
800002fc:	87aa                	mv	a5,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:6
    if (__RARELY(gpio == NULL)) {
800002fe:	c131                	beqz	a0,80000342 <gpio_iof_config+0x46>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:9
        return -1;
    }
    switch (func) {
80000300:	4705                	li	a4,1
80000302:	02e60663          	beq	a2,a4,8000032e <gpio_iof_config+0x32>
80000306:	4709                	li	a4,2
80000308:	00e60b63          	beq	a2,a4,8000031e <gpio_iof_config+0x22>
8000030c:	4501                	li	a0,0
8000030e:	c211                	beqz	a2,80000312 <gpio_iof_config+0x16>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:25
            break;
        default:
            break;
    }
    return 0;
}
80000310:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:11
            gpio->IOF_EN &= ~mask;
80000312:	5f98                	lw	a4,56(a5)
80000314:	fff5c593          	not	a1,a1
80000318:	8df9                	and	a1,a1,a4
8000031a:	df8c                	sw	a1,56(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:12
            break;
8000031c:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:18
            gpio->IOF_SEL |= mask;
8000031e:	5d58                	lw	a4,60(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:24
    return 0;
80000320:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:18
            gpio->IOF_SEL |= mask;
80000322:	8f4d                	or	a4,a4,a1
80000324:	dfd8                	sw	a4,60(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:19
            gpio->IOF_EN |= mask;
80000326:	5f98                	lw	a4,56(a5)
80000328:	8dd9                	or	a1,a1,a4
8000032a:	df8c                	sw	a1,56(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:20
            break;
8000032c:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:14
            gpio->IOF_SEL &= ~mask;
8000032e:	5d54                	lw	a3,60(a0)
80000330:	fff5c713          	not	a4,a1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:24
    return 0;
80000334:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:14
            gpio->IOF_SEL &= ~mask;
80000336:	8f75                	and	a4,a4,a3
80000338:	dfd8                	sw	a4,60(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:15
            gpio->IOF_EN |= mask;
8000033a:	5f98                	lw	a4,56(a5)
8000033c:	8dd9                	or	a1,a1,a4
8000033e:	df8c                	sw	a1,56(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:16
            break;
80000340:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:7
        return -1;
80000342:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:25
}
80000344:	8082                	ret

80000346 <gpio_enable_output>:
gpio_enable_output():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:28

int32_t gpio_enable_output(GPIO_TypeDef *gpio, uint32_t mask)
{
80000346:	87aa                	mv	a5,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:29
    if (__RARELY(gpio == NULL)) {
80000348:	c919                	beqz	a0,8000035e <gpio_enable_output+0x18>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:32
        return -1;
    }
    gpio->OUTPUT_EN |= mask;
8000034a:	4514                	lw	a3,8(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:33
    gpio->INPUT_EN &= ~mask;
8000034c:	fff5c713          	not	a4,a1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:34
    return 0;
80000350:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:32
    gpio->OUTPUT_EN |= mask;
80000352:	8dd5                	or	a1,a1,a3
80000354:	c78c                	sw	a1,8(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:33
    gpio->INPUT_EN &= ~mask;
80000356:	43d4                	lw	a3,4(a5)
80000358:	8f75                	and	a4,a4,a3
8000035a:	c3d8                	sw	a4,4(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:34
    return 0;
8000035c:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:30
        return -1;
8000035e:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:35
}
80000360:	8082                	ret

80000362 <gpio_write>:
gpio_write():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:48
    gpio->OUTPUT_EN &= ~mask;
    return 0;
}

int32_t gpio_write(GPIO_TypeDef *gpio, uint32_t mask, uint32_t value)
{
80000362:	87aa                	mv	a5,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:49
    if (__RARELY(gpio == NULL)) {
80000364:	cd09                	beqz	a0,8000037e <gpio_write+0x1c>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:54
        return -1;
    }
    // If value != 0, mean set gpio pin high, otherwise set pin low
    if (value) {
        gpio->OUTPUT_VAL |= (mask);
80000366:	4558                	lw	a4,12(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:53
    if (value) {
80000368:	c609                	beqz	a2,80000372 <gpio_write+0x10>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:54
        gpio->OUTPUT_VAL |= (mask);
8000036a:	8dd9                	or	a1,a1,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:58
    } else {
        gpio->OUTPUT_VAL &= ~(mask);
    }
    return 0;
8000036c:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:54
        gpio->OUTPUT_VAL |= (mask);
8000036e:	c7cc                	sw	a1,12(a5)
80000370:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:56
        gpio->OUTPUT_VAL &= ~(mask);
80000372:	fff5c593          	not	a1,a1
80000376:	8df9                	and	a1,a1,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:58
    return 0;
80000378:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:56
        gpio->OUTPUT_VAL &= ~(mask);
8000037a:	c7cc                	sw	a1,12(a5)
8000037c:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:50
        return -1;
8000037e:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_gpio.c:59
}
80000380:	8082                	ret

80000382 <uart_init>:
uart_init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:5
#include "hbird.h"
#include "hbird_uart.h"

int32_t uart_init(UART_TypeDef *uart, uint32_t baudrate)
{
80000382:	87aa                	mv	a5,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:6
    if (__RARELY(uart == NULL)) {
80000384:	c11d                	beqz	a0,800003aa <uart_init+0x28>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:9
        return -1;
    }
    uart->DIV = SystemCoreClock / baudrate - 1;
80000386:	10000717          	auipc	a4,0x10000
8000038a:	cde72703          	lw	a4,-802(a4) # 90000064 <SystemCoreClock>
8000038e:	02b755b3          	divu	a1,a4,a1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:12
    uart->TXCTRL |= UART_TXEN;
    uart->RXCTRL |= UART_RXEN;
    return 0;
80000392:	4501                	li	a0,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:9
    uart->DIV = SystemCoreClock / baudrate - 1;
80000394:	15fd                	addi	a1,a1,-1
80000396:	cf8c                	sw	a1,24(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:10
    uart->TXCTRL |= UART_TXEN;
80000398:	4798                	lw	a4,8(a5)
8000039a:	00176713          	ori	a4,a4,1
8000039e:	c798                	sw	a4,8(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:11
    uart->RXCTRL |= UART_RXEN;
800003a0:	47d8                	lw	a4,12(a5)
800003a2:	00176713          	ori	a4,a4,1
800003a6:	c7d8                	sw	a4,12(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:12
    return 0;
800003a8:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:7
        return -1;
800003aa:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:13
}
800003ac:	8082                	ret

800003ae <uart_write>:
uart_write():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:28
    return 0;
}

int32_t uart_write(UART_TypeDef *uart, uint8_t val)
{
    if (__RARELY(uart == NULL)) {
800003ae:	c519                	beqz	a0,800003bc <uart_write+0xe>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:33 (discriminator 1)
        return -1;
    }
#ifndef SIMULATION_SPIKE
#ifndef SIMULATION_XLSPIKE
    while (uart->TXFIFO & UART_TXFIFO_FULL);
800003b0:	411c                	lw	a5,0(a0)
800003b2:	fe07cfe3          	bltz	a5,800003b0 <uart_write+0x2>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:35
#endif
    uart->TXFIFO = val;
800003b6:	c10c                	sw	a1,0(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:40
#else
    extern void htif_putc(char ch);
    htif_putc(val);
#endif
    return 0;
800003b8:	4501                	li	a0,0
800003ba:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:29
        return -1;
800003bc:	557d                	li	a0,-1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:41
}
800003be:	8082                	ret

800003c0 <uart_read>:
uart_read():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:47

uint8_t uart_read(UART_TypeDef *uart)
{
#ifndef SIMULATION_SPIKE
    uint32_t reg;
    if (__RARELY(uart == NULL)) {
800003c0:	c519                	beqz	a0,800003ce <uart_read+0xe>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:51 (discriminator 1)
        return -1;
    }
    do {
        reg = uart->RXFIFO;
800003c2:	415c                	lw	a5,4(a0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:53 (discriminator 1)
    }
    while (reg & UART_RXFIFO_EMPTY);
800003c4:	fe07cfe3          	bltz	a5,800003c2 <uart_read+0x2>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:54
    return (uint8_t)(reg & 0xFF);
800003c8:	0ff7f513          	zext.b	a0,a5
800003cc:	8082                	ret
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:48
        return -1;
800003ce:	0ff00513          	li	a0,255
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/Drivers/hbird_uart.c:59
#else
    extern int htif_getc(void);
    return (uint8_t)htif_getc();
#endif
}
800003d2:	8082                	ret

800003d4 <measure_cpu_freq>:
SysTimer_GetLoadValue():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
 * - Load value is 64bits wide.
 * - \ref SysTimer_SetLoadValue
 */
__STATIC_FORCEINLINE uint64_t SysTimer_GetLoadValue(void)
{
    return SysTimer->MTIME;
800003d4:	0200c7b7          	lui	a5,0x200c
800003d8:	ff87a703          	lw	a4,-8(a5) # 200bff8 <__stack_size+0x200b7f8>
800003dc:	ffc7a783          	lw	a5,-4(a5)
measure_cpu_freq():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:9
{
    return (uint64_t)SOC_TIMER_FREQ;
}

uint32_t measure_cpu_freq(uint32_t n)
{
800003e0:	1141                	addi	sp,sp,-16
800003e2:	c606                	sw	ra,12(sp)
800003e4:	c422                	sw	s0,8(sp)
800003e6:	c226                	sw	s1,4(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:15
    uint32_t start_mcycle, delta_mcycle;
    uint32_t start_mtime, delta_mtime;
    uint64_t mtime_freq = get_timer_freq();

    // Don't start measuruing until we see an mtime tick
    uint32_t tmp = (uint32_t)SysTimer_GetLoadValue();
800003e8:	86ba                	mv	a3,a4
SysTimer_GetLoadValue():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
800003ea:	0200c637          	lui	a2,0x200c
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106 (discriminator 1)
800003ee:	ff862703          	lw	a4,-8(a2) # 200bff8 <__stack_size+0x200b7f8>
800003f2:	ffc62783          	lw	a5,-4(a2)
measure_cpu_freq():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:18 (discriminator 1)
    do {
        start_mtime = (uint32_t)SysTimer_GetLoadValue();
        start_mcycle = __RV_CSR_READ(CSR_MCYCLE);
800003f6:	b00024f3          	csrr	s1,mcycle
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:19 (discriminator 1)
    } while (start_mtime == tmp);
800003fa:	fee68ae3          	beq	a3,a4,800003ee <measure_cpu_freq+0x1a>
SysTimer_GetLoadValue():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
800003fe:	0200c5b7          	lui	a1,0x200c
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106 (discriminator 1)
80000402:	ff85a603          	lw	a2,-8(a1) # 200bff8 <__stack_size+0x200b7f8>
80000406:	ffc5a683          	lw	a3,-4(a1)
measure_cpu_freq():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:22 (discriminator 1)

    do {
        delta_mtime = (uint32_t)SysTimer_GetLoadValue() - start_mtime;
8000040a:	40e60433          	sub	s0,a2,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:23 (discriminator 1)
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
8000040e:	b00027f3          	csrr	a5,mcycle
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:24 (discriminator 1)
    } while (delta_mtime < n);
80000412:	fea468e3          	bltu	s0,a0,80000402 <measure_cpu_freq+0x2e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:23
        delta_mcycle = __RV_CSR_READ(CSR_MCYCLE) - start_mcycle;
80000416:	409784b3          	sub	s1,a5,s1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:27

    return (delta_mcycle / delta_mtime) * mtime_freq
           + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
8000041a:	0284f5b3          	remu	a1,s1,s0
8000041e:	8622                	mv	a2,s0
80000420:	4681                	li	a3,0
80000422:	00f59513          	slli	a0,a1,0xf
80000426:	81c5                	srli	a1,a1,0x11
80000428:	29e1                	jal	80000900 <__udivdi3>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:26
    return (delta_mcycle / delta_mtime) * mtime_freq
8000042a:	0284d633          	divu	a2,s1,s0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:28
}
8000042e:	40b2                	lw	ra,12(sp)
80000430:	4422                	lw	s0,8(sp)
80000432:	4492                	lw	s1,4(sp)
80000434:	0141                	addi	sp,sp,16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:27
           + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
80000436:	063e                	slli	a2,a2,0xf
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:28
}
80000438:	9532                	add	a0,a0,a2
8000043a:	8082                	ret

8000043c <get_cpu_freq>:
get_cpu_freq():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:31

uint32_t get_cpu_freq(void)
{
8000043c:	1141                	addi	sp,sp,-16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:35
    uint32_t cpu_freq;

    // warm up
    measure_cpu_freq(1);
8000043e:	4505                	li	a0,1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:31
{
80000440:	c606                	sw	ra,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:35
    measure_cpu_freq(1);
80000442:	3f49                	jal	800003d4 <measure_cpu_freq>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:40
    // measure for real
    cpu_freq = measure_cpu_freq(100);

    return cpu_freq;
}
80000444:	40b2                	lw	ra,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:37
    cpu_freq = measure_cpu_freq(100);
80000446:	06400513          	li	a0,100
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:40
}
8000044a:	0141                	addi	sp,sp,16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:37
    cpu_freq = measure_cpu_freq(100);
8000044c:	b761                	j	800003d4 <measure_cpu_freq>

8000044e <delay_1ms>:
delay_1ms():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:50
 *             provide API for delay
 * \param[in]  count: count in milliseconds
 * \remarks
 */
void delay_1ms(uint32_t count)
{
8000044e:	85aa                	mv	a1,a0
80000450:	1141                	addi	sp,sp,-16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:52
    uint64_t start_mtime, delta_mtime;
    uint64_t delay_ticks = (SOC_TIMER_FREQ * (uint64_t)count) / 1000;
80000452:	3e800613          	li	a2,1000
80000456:	4681                	li	a3,0
80000458:	053e                	slli	a0,a0,0xf
8000045a:	81c5                	srli	a1,a1,0x11
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:50
{
8000045c:	c606                	sw	ra,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:52
    uint64_t delay_ticks = (SOC_TIMER_FREQ * (uint64_t)count) / 1000;
8000045e:	214d                	jal	80000900 <__udivdi3>
SysTimer_GetLoadValue():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
80000460:	0200c7b7          	lui	a5,0x200c
80000464:	ff87a603          	lw	a2,-8(a5) # 200bff8 <__stack_size+0x200b7f8>
80000468:	ffc7a683          	lw	a3,-4(a5)
delay_1ms():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:52
8000046c:	88aa                	mv	a7,a0
SysTimer_GetLoadValue():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106
8000046e:	0200c837          	lui	a6,0x200c
delay_1ms():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:52
80000472:	852e                	mv	a0,a1
SysTimer_GetLoadValue():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_timer.h:106 (discriminator 1)
80000474:	ff882303          	lw	t1,-8(a6) # 200bff8 <__stack_size+0x200b7f8>
80000478:	ffc82383          	lw	t2,-4(a6)
delay_1ms():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:57 (discriminator 1)

    start_mtime = SysTimer_GetLoadValue();

    do {
        delta_mtime = SysTimer_GetLoadValue() - start_mtime;
8000047c:	40c305b3          	sub	a1,t1,a2
80000480:	00b33733          	sltu	a4,t1,a1
80000484:	40d387b3          	sub	a5,t2,a3
80000488:	8f99                	sub	a5,a5,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:58 (discriminator 1)
    } while (delta_mtime < delay_ticks);
8000048a:	fea7e5e3          	bltu	a5,a0,80000474 <delay_1ms+0x26>
8000048e:	00f51463          	bne	a0,a5,80000496 <delay_1ms+0x48>
80000492:	ff15e1e3          	bltu	a1,a7,80000474 <delay_1ms+0x26>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/hbird_common.c:59
}
80000496:	40b2                	lw	ra,12(sp)
80000498:	0141                	addi	sp,sp,16
8000049a:	8082                	ret

8000049c <system_default_exception_handler>:
system_default_exception_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:168
 * \details
 * This function provided a default exception handling code for all exception ids.
 * By default, It will just print some information for debug, Vendor can customize it according to its requirements.
 */
static void system_default_exception_handler(unsigned long mcause, unsigned long sp)
{
8000049c:	1141                	addi	sp,sp,-16
8000049e:	c422                	sw	s0,8(sp)
800004a0:	842a                	mv	s0,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:170
    /* TODO: Uncomment this if you have implement printf function */
    printf("Trap in Exception\r\n");
800004a2:	00002517          	auipc	a0,0x2
800004a6:	d8250513          	addi	a0,a0,-638 # 80002224 <_getpid_r+0x6>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:168
{
800004aa:	c606                	sw	ra,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:170
    printf("Trap in Exception\r\n");
800004ac:	167000ef          	jal	ra,80000e12 <puts>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:171
    printf("MCAUSE: 0x%lx\r\n", mcause);
800004b0:	85a2                	mv	a1,s0
800004b2:	00002517          	auipc	a0,0x2
800004b6:	d8650513          	addi	a0,a0,-634 # 80002238 <_getpid_r+0x1a>
800004ba:	045000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:172
    printf("MEPC  : 0x%lx\r\n", __RV_CSR_READ(CSR_MEPC));
800004be:	341025f3          	csrr	a1,mepc
800004c2:	00002517          	auipc	a0,0x2
800004c6:	d8650513          	addi	a0,a0,-634 # 80002248 <_getpid_r+0x2a>
800004ca:	035000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:173
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
800004ce:	343025f3          	csrr	a1,mtval
800004d2:	00002517          	auipc	a0,0x2
800004d6:	d8650513          	addi	a0,a0,-634 # 80002258 <_getpid_r+0x3a>
800004da:	025000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:174 (discriminator 1)
    while(1);
800004de:	a001                	j	800004de <system_default_exception_handler+0x42>

800004e0 <system_default_interrupt_handler>:
system_default_interrupt_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:183
 * \brief      System Default Interrupt Handler
 * \details
 * This function provided a default interrupt handling code for all interrupt ids.
 */
static void system_default_interrupt_handler(unsigned long mcause, unsigned long sp)
{
800004e0:	1141                	addi	sp,sp,-16
800004e2:	c422                	sw	s0,8(sp)
800004e4:	842a                	mv	s0,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:185
    /* TODO: Uncomment this if you have implement printf function */
    printf("Trap in Interrupt\r\n");
800004e6:	00002517          	auipc	a0,0x2
800004ea:	d8250513          	addi	a0,a0,-638 # 80002268 <_getpid_r+0x4a>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:183
{
800004ee:	c606                	sw	ra,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:185
    printf("Trap in Interrupt\r\n");
800004f0:	123000ef          	jal	ra,80000e12 <puts>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:186
    printf("MCAUSE: 0x%lx\r\n", mcause);
800004f4:	85a2                	mv	a1,s0
800004f6:	00002517          	auipc	a0,0x2
800004fa:	d4250513          	addi	a0,a0,-702 # 80002238 <_getpid_r+0x1a>
800004fe:	001000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:187
    printf("MEPC  : 0x%lx\r\n", __RV_CSR_READ(CSR_MEPC));
80000502:	341025f3          	csrr	a1,mepc
80000506:	00002517          	auipc	a0,0x2
8000050a:	d4250513          	addi	a0,a0,-702 # 80002248 <_getpid_r+0x2a>
8000050e:	7f0000ef          	jal	ra,80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:188
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
80000512:	343025f3          	csrr	a1,mtval
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:189
}
80000516:	4422                	lw	s0,8(sp)
80000518:	40b2                	lw	ra,12(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:188
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
8000051a:	00002517          	auipc	a0,0x2
8000051e:	d3e50513          	addi	a0,a0,-706 # 80002258 <_getpid_r+0x3a>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:189
}
80000522:	0141                	addi	sp,sp,16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:188
    printf("MTVAL : 0x%lx\r\n", __RV_CSR_READ(CSR_MBADADDR));
80000524:	7da0006f          	j	80000cfe <iprintf>

80000528 <SystemInit>:
SystemInit():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:125
    SystemCoreClock = SYSTEM_CLOCK;
80000528:	04c4b7b7          	lui	a5,0x4c4b
8000052c:	40078793          	addi	a5,a5,1024 # 4c4b400 <__stack_size+0x4c4ac00>
80000530:	80f1a223          	sw	a5,-2044(gp) # 90000064 <SystemCoreClock>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:126
}
80000534:	8082                	ret

80000536 <core_trap_handler>:
core_trap_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:322
 * - If you want to register core exception handler, please use \ref Exception_Register_EXC
 * - If you want to register core interrupt handler, please use \ref Interrupt_Register_CoreIRQ
 * - If you want to register external interrupt handler, please use \ref Interrupt_Register_ExtIRQ
 */
uint32_t core_trap_handler(unsigned long mcause, unsigned long sp)
{
80000536:	1141                	addi	sp,sp,-16
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:325
    if (mcause & MCAUSE_INTERRUPT) {
        INT_HANDLER int_handler = NULL;
        uint32_t irqn = (uint32_t)(mcause & 0X00000fff);
80000538:	01451793          	slli	a5,a0,0x14
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:322
{
8000053c:	c606                	sw	ra,12(sp)
8000053e:	c422                	sw	s0,8(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:325
        uint32_t irqn = (uint32_t)(mcause & 0X00000fff);
80000540:	83d1                	srli	a5,a5,0x14
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:323
    if (mcause & MCAUSE_INTERRUPT) {
80000542:	02055363          	bgez	a0,80000568 <core_trap_handler+0x32>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:326
        if (irqn == IRQ_M_EXT) {
80000546:	472d                	li	a4,11
80000548:	04e78563          	beq	a5,a4,80000592 <core_trap_handler+0x5c>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:338
                }
                PLIC_CompleteInterrupt(irqn);
            }
#endif
        } else {
            int_handler = (INT_HANDLER)(SystemCoreInterruptHandlers[irqn]);
8000054c:	078a                	slli	a5,a5,0x2
8000054e:	10000717          	auipc	a4,0x10000
80000552:	b3670713          	addi	a4,a4,-1226 # 90000084 <SystemCoreInterruptHandlers>
80000556:	97ba                	add	a5,a5,a4
80000558:	439c                	lw	a5,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:339
            if (int_handler != NULL) {
8000055a:	c391                	beqz	a5,8000055e <core_trap_handler+0x28>
core_exception_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:371
        exc_handler = (EXC_HANDLER)SystemExceptionHandlers[EXCn];
    } else {
        exc_handler = (EXC_HANDLER)system_default_exception_handler;
    }
    if (exc_handler != NULL) {
        exc_handler(mcause, sp);
8000055c:	9782                	jalr	a5
core_trap_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:347
}
8000055e:	40b2                	lw	ra,12(sp)
80000560:	4422                	lw	s0,8(sp)
80000562:	4501                	li	a0,0
80000564:	0141                	addi	sp,sp,16
80000566:	8082                	ret
core_exception_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:365
    if ((EXCn < MAX_SYSTEM_EXCEPTION_NUM) && (EXCn >= 0)) {
80000568:	4629                	li	a2,10
8000056a:	872a                	mv	a4,a0
8000056c:	86ae                	mv	a3,a1
8000056e:	00f66b63          	bltu	a2,a5,80000584 <core_trap_handler+0x4e>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:366
        exc_handler = (EXC_HANDLER)SystemExceptionHandlers[EXCn];
80000572:	078a                	slli	a5,a5,0x2
80000574:	84c18613          	addi	a2,gp,-1972 # 900000ac <SystemExceptionHandlers>
80000578:	97b2                	add	a5,a5,a2
8000057a:	439c                	lw	a5,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:370
    if (exc_handler != NULL) {
8000057c:	d3ed                	beqz	a5,8000055e <core_trap_handler+0x28>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:371
        exc_handler(mcause, sp);
8000057e:	85b6                	mv	a1,a3
80000580:	853a                	mv	a0,a4
80000582:	bfe9                	j	8000055c <core_trap_handler+0x26>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:368
        exc_handler = (EXC_HANDLER)system_default_exception_handler;
80000584:	00000797          	auipc	a5,0x0
80000588:	f1878793          	addi	a5,a5,-232 # 8000049c <system_default_exception_handler>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:371
        exc_handler(mcause, sp);
8000058c:	85b6                	mv	a1,a3
8000058e:	853a                	mv	a0,a4
80000590:	b7f1                	j	8000055c <core_trap_handler+0x26>
PLIC_ClaimInterrupt():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:273
 * \sa
 * - \ref PLIC_CompleteInterrupt
 */
__STATIC_FORCEINLINE uint32_t PLIC_ClaimInterrupt(void)
{
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000592:	f14027f3          	csrr	a5,mhartid
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:274
    volatile uint32_t *claim_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
80000596:	0c200737          	lui	a4,0xc200
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:275
                    + (hartid << PLIC_CLAIM_SHIFT_PER_TARGET));
8000059a:	07b2                	slli	a5,a5,0xc
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:274
    volatile uint32_t *claim_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
8000059c:	0711                	addi	a4,a4,4
8000059e:	97ba                	add	a5,a5,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:277

    return (*claim_reg);
800005a0:	4380                	lw	s0,0(a5)
core_trap_handler():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:329
            if (irqn < __PLIC_INTNUM) {
800005a2:	03400793          	li	a5,52
800005a6:	fa87ece3          	bltu	a5,s0,8000055e <core_trap_handler+0x28>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:330
                int_handler = (INT_HANDLER)(SystemExtInterruptHandlers[irqn]);
800005aa:	00241713          	slli	a4,s0,0x2
800005ae:	87818793          	addi	a5,gp,-1928 # 900000d8 <SystemExtInterruptHandlers>
800005b2:	97ba                	add	a5,a5,a4
800005b4:	439c                	lw	a5,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:331
                if (int_handler != NULL) {
800005b6:	c391                	beqz	a5,800005ba <core_trap_handler+0x84>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:332
                    int_handler(mcause, sp);
800005b8:	9782                	jalr	a5
PLIC_CompleteInterrupt():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:298
 * \sa
 * - \ref PLIC_ClaimInterrupt
 */
__STATIC_FORCEINLINE void PLIC_CompleteInterrupt(uint32_t source)
{
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
800005ba:	f14027f3          	csrr	a5,mhartid
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:299
    volatile uint32_t *complete_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
800005be:	0c200737          	lui	a4,0xc200
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:300
                    + (hartid << PLIC_CLAIM_SHIFT_PER_TARGET));
800005c2:	07b2                	slli	a5,a5,0xc
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:299
    volatile uint32_t *complete_reg = (uint32_t *)((PLIC_BASE) + PLIC_CLAIM_OFFSET + \
800005c4:	0711                	addi	a4,a4,4
800005c6:	97ba                	add	a5,a5,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:302

    *complete_reg = source;
800005c8:	c380                	sw	s0,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:303
}
800005ca:	bf51                	j	8000055e <core_trap_handler+0x28>

800005cc <_premain_init>:
_premain_init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:464
 * For RISC-V gnu toolchain, _init function might not be called
 * by __libc_init_array function, so we defined a new function
 * to do initialization
 */
void _premain_init(void)
{
800005cc:	1141                	addi	sp,sp,-16
800005ce:	c606                	sw	ra,12(sp)
800005d0:	c422                	sw	s0,8(sp)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:466
    /* TODO: Add your own initialization code here, called before main */
    SystemCoreClock = get_cpu_freq();
800005d2:	35ad                	jal	8000043c <get_cpu_freq>
800005d4:	87aa                	mv	a5,a0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:468
#if ! defined(SIMULATION_SPIKE) && ! defined(SIMULATION_XLSPIKE)
    gpio_iof_config(GPIO, IOF0_UART0_MASK, IOF_SEL_0);
800005d6:	4605                	li	a2,1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:466
    SystemCoreClock = get_cpu_freq();
800005d8:	80418413          	addi	s0,gp,-2044 # 90000064 <SystemCoreClock>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:468
    gpio_iof_config(GPIO, IOF0_UART0_MASK, IOF_SEL_0);
800005dc:	000305b7          	lui	a1,0x30
800005e0:	10012537          	lui	a0,0x10012
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:466
    SystemCoreClock = get_cpu_freq();
800005e4:	c01c                	sw	a5,0(s0)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:468
    gpio_iof_config(GPIO, IOF0_UART0_MASK, IOF_SEL_0);
800005e6:	3b19                	jal	800002fc <gpio_iof_config>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:469
    uart_init(SOC_DEBUG_UART, 115200);
800005e8:	65f1                	lui	a1,0x1c
800005ea:	20058593          	addi	a1,a1,512 # 1c200 <__stack_size+0x1ba00>
800005ee:	10013537          	lui	a0,0x10013
800005f2:	3b41                	jal	80000382 <uart_init>
SystemBannerPrint():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:381
    printf("HummingBird SDK Build Time: %s, %s\r\n", __DATE__, __TIME__);
800005f4:	00002617          	auipc	a2,0x2
800005f8:	c8860613          	addi	a2,a2,-888 # 8000227c <_getpid_r+0x5e>
800005fc:	00002597          	auipc	a1,0x2
80000600:	c8c58593          	addi	a1,a1,-884 # 80002288 <_getpid_r+0x6a>
80000604:	00002517          	auipc	a0,0x2
80000608:	c9050513          	addi	a0,a0,-880 # 80002294 <_getpid_r+0x76>
8000060c:	2dcd                	jal	80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:383
    printf("Download Mode: %s\r\n", DOWNLOAD_MODE_STRING);
8000060e:	00002597          	auipc	a1,0x2
80000612:	cae58593          	addi	a1,a1,-850 # 800022bc <_getpid_r+0x9e>
80000616:	00002517          	auipc	a0,0x2
8000061a:	caa50513          	addi	a0,a0,-854 # 800022c0 <_getpid_r+0xa2>
8000061e:	25c5                	jal	80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:385
    printf("CPU Frequency %lu Hz\r\n", SystemCoreClock);
80000620:	400c                	lw	a1,0(s0)
80000622:	00002517          	auipc	a0,0x2
80000626:	cb250513          	addi	a0,a0,-846 # 800022d4 <_getpid_r+0xb6>
8000062a:	2dd1                	jal	80000cfe <iprintf>
Exception_Init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:201
        SystemExceptionHandlers[i] = (unsigned long)system_default_exception_handler;
8000062c:	00000697          	auipc	a3,0x0
80000630:	e7068693          	addi	a3,a3,-400 # 8000049c <system_default_exception_handler>
80000634:	84c18793          	addi	a5,gp,-1972 # 900000ac <SystemExceptionHandlers>
80000638:	87818713          	addi	a4,gp,-1928 # 900000d8 <SystemExtInterruptHandlers>
8000063c:	c394                	sw	a3,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:200
    for (int i = 0; i < MAX_SYSTEM_EXCEPTION_NUM; i++) {
8000063e:	0791                	addi	a5,a5,4
80000640:	fee79ee3          	bne	a5,a4,8000063c <_premain_init+0x70>
Interrupt_Init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:216
        SystemExtInterruptHandlers[i] = (unsigned long)system_default_interrupt_handler;
80000644:	00000717          	auipc	a4,0x0
80000648:	e9c70713          	addi	a4,a4,-356 # 800004e0 <system_default_interrupt_handler>
8000064c:	87818793          	addi	a5,gp,-1928 # 900000d8 <SystemExtInterruptHandlers>
80000650:	94c18693          	addi	a3,gp,-1716 # 900001ac <misa_chars.0>
80000654:	c398                	sw	a4,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:215
    for (i = 0; i < __PLIC_INTNUM; i++) {
80000656:	0791                	addi	a5,a5,4
80000658:	fed79ee3          	bne	a5,a3,80000654 <_premain_init+0x88>
8000065c:	10000797          	auipc	a5,0x10000
80000660:	a2878793          	addi	a5,a5,-1496 # 90000084 <SystemCoreInterruptHandlers>
80000664:	84c18693          	addi	a3,gp,-1972 # 900000ac <SystemExceptionHandlers>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:219
        SystemCoreInterruptHandlers[i] = (unsigned long)system_default_interrupt_handler;
80000668:	c398                	sw	a4,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:218
    for (i = 0; i < 10; i++) {
8000066a:	0791                	addi	a5,a5,4
8000066c:	fef69ee3          	bne	a3,a5,80000668 <_premain_init+0x9c>
80000670:	0c000637          	lui	a2,0xc000
PLIC_Init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:318
 */
__STATIC_FORCEINLINE void PLIC_Init(uint32_t num_sources)
{
    uint32_t i;

    for (i = 0; i < num_sources; i ++) {
80000674:	4681                	li	a3,0
PLIC_DisableInterrupt():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000676:	0c0028b7          	lui	a7,0xc002
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
8000067a:	4805                	li	a6,1
PLIC_Init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:318
    for (i = 0; i < num_sources; i ++) {
8000067c:	03500513          	li	a0,53
PLIC_DisableInterrupt():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:191
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
80000680:	f1402773          	csrr	a4,mhartid
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:193
                    (hartid << PLIC_ENABLE_SHIFT_PER_TARGET) + (source >> 5) * 4);
80000684:	0056d793          	srli	a5,a3,0x5
80000688:	071e                	slli	a4,a4,0x7
8000068a:	9746                	add	a4,a4,a7
8000068c:	078a                	slli	a5,a5,0x2
8000068e:	97ba                	add	a5,a5,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:195
    uint32_t current = *enable_reg;
80000690:	438c                	lw	a1,0(a5)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:196
    current = current & (~(1<<(source&0x1F)));
80000692:	00d81733          	sll	a4,a6,a3
80000696:	fff74713          	not	a4,a4
8000069a:	8f6d                	and	a4,a4,a1
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:197
    *enable_reg = current;
8000069c:	c398                	sw	a4,0(a5)
PLIC_SetPriority():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:237
    *priority_reg = priority;
8000069e:	00062023          	sw	zero,0(a2) # c000000 <__stack_size+0xbfff800>
PLIC_Init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:318
    for (i = 0; i < num_sources; i ++) {
800006a2:	0685                	addi	a3,a3,1
800006a4:	0611                	addi	a2,a2,4
800006a6:	fca69de3          	bne	a3,a0,80000680 <_premain_init+0xb4>
PLIC_SetThreshold():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:135
    uint32_t hartid = __RV_CSR_READ(CSR_MHARTID);
800006aa:	f14027f3          	csrr	a5,mhartid
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:137
                    PLIC_THRESHOLD_OFFSET + (hartid << PLIC_THRESHOLD_SHIFT_PER_TARGET));
800006ae:	0c200737          	lui	a4,0xc200
_premain_init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:481
    Interrupt_Init();
#if defined(__PLIC_PRESENT) && __PLIC_PRESENT == 1
    /* PLIC initilization */
    PLIC_Init(__PLIC_INTNUM);
#endif
}
800006b2:	40b2                	lw	ra,12(sp)
800006b4:	4422                	lw	s0,8(sp)
PLIC_SetThreshold():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:137
800006b6:	07b2                	slli	a5,a5,0xc
800006b8:	97ba                	add	a5,a5,a4
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\hbird_sdk\NMSIS\Core\Include/core_feature_plic.h:139
    *thresh_reg = thresh;
800006ba:	0007a023          	sw	zero,0(a5)
_premain_init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:481
800006be:	0141                	addi	sp,sp,16
800006c0:	8082                	ret

800006c2 <_postmain_fini>:
_postmain_fini():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:502
#endif
#ifdef SIMULATION_SPIKE
extern void spike_exit(int status);
    spike_exit(status);
#endif
}
800006c2:	8082                	ret

800006c4 <_init>:
_init():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../hbird_sdk/SoC/hbird/Common/Source/system_hbird.c:516
 * Please use \ref _premain_init function now
 */
void _init(void)
{
    /* Don't put any code here, please use _premain_init now */
}
800006c4:	8082                	ret

800006c6 <_fini>:
_fini():
800006c6:	8082                	ret

800006c8 <print_misa>:
print_misa():
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:11
    CSR_MISA_Type misa_bits = (CSR_MISA_Type) __RV_CSR_READ(CSR_MISA);
800006c8:	301026f3          	csrr	a3,misa
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:14
    if (misa_bits.b.mxl == 1) {
800006cc:	c0000737          	lui	a4,0xc0000
800006d0:	00e6f7b3          	and	a5,a3,a4
800006d4:	40000637          	lui	a2,0x40000
800006d8:	1ec78c63          	beq	a5,a2,800008d0 <print_misa+0x208>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:17
    } else if (misa_bits.b.mxl == 2) {
800006dc:	80000637          	lui	a2,0x80000
800006e0:	1cc78e63          	beq	a5,a2,800008bc <print_misa+0x1f4>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:20
    } else if (misa_bits.b.mxl == 3) {
800006e4:	20e78063          	beq	a5,a4,800008e4 <print_misa+0x21c>
800006e8:	4701                	li	a4,0
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:13
    uint8_t index = 0;
800006ea:	4781                	li	a5,0
800006ec:	94c18613          	addi	a2,gp,-1716 # 900001ac <misa_chars.0>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:25
    if (misa_bits.b.i) {
800006f0:	1006f593          	andi	a1,a3,256
800006f4:	c991                	beqz	a1,80000708 <print_misa+0x40>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:26
        misa_chars[index++] = 'I';
800006f6:	0785                	addi	a5,a5,1
800006f8:	9732                	add	a4,a4,a2
800006fa:	0ff7f793          	zext.b	a5,a5
800006fe:	04900593          	li	a1,73
80000702:	00b70023          	sb	a1,0(a4) # c0000000 <_sp+0x2fff0000>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:29
        misa_chars[index++] = 'M';
80000706:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:28
    if (misa_bits.b.m) {
80000708:	6585                	lui	a1,0x1
8000070a:	8df5                	and	a1,a1,a3
8000070c:	c991                	beqz	a1,80000720 <print_misa+0x58>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:29
        misa_chars[index++] = 'M';
8000070e:	0785                	addi	a5,a5,1
80000710:	9732                	add	a4,a4,a2
80000712:	0ff7f793          	zext.b	a5,a5
80000716:	04d00593          	li	a1,77
8000071a:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:32
        misa_chars[index++] = 'A';
8000071e:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:31
    if (misa_bits.b.a) {
80000720:	0016f593          	andi	a1,a3,1
80000724:	c991                	beqz	a1,80000738 <print_misa+0x70>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:32
        misa_chars[index++] = 'A';
80000726:	0785                	addi	a5,a5,1
80000728:	9732                	add	a4,a4,a2
8000072a:	0ff7f793          	zext.b	a5,a5
8000072e:	04100593          	li	a1,65
80000732:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:35
        misa_chars[index++] = 'B';
80000736:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:34
    if (misa_bits.b.b) {
80000738:	0026f593          	andi	a1,a3,2
8000073c:	c991                	beqz	a1,80000750 <print_misa+0x88>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:35
        misa_chars[index++] = 'B';
8000073e:	0785                	addi	a5,a5,1
80000740:	9732                	add	a4,a4,a2
80000742:	0ff7f793          	zext.b	a5,a5
80000746:	04200593          	li	a1,66
8000074a:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:38
        misa_chars[index++] = 'C';
8000074e:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:37
    if (misa_bits.b.c) {
80000750:	0046f593          	andi	a1,a3,4
80000754:	c991                	beqz	a1,80000768 <print_misa+0xa0>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:38
        misa_chars[index++] = 'C';
80000756:	0785                	addi	a5,a5,1
80000758:	9732                	add	a4,a4,a2
8000075a:	0ff7f793          	zext.b	a5,a5
8000075e:	04300593          	li	a1,67
80000762:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:41
        misa_chars[index++] = 'E';
80000766:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:40
    if (misa_bits.b.e) {
80000768:	0106f593          	andi	a1,a3,16
8000076c:	c991                	beqz	a1,80000780 <print_misa+0xb8>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:41
        misa_chars[index++] = 'E';
8000076e:	0785                	addi	a5,a5,1
80000770:	9732                	add	a4,a4,a2
80000772:	0ff7f793          	zext.b	a5,a5
80000776:	04500593          	li	a1,69
8000077a:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:44
        misa_chars[index++] = 'F';
8000077e:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:43
    if (misa_bits.b.f) {
80000780:	0206f593          	andi	a1,a3,32
80000784:	c991                	beqz	a1,80000798 <print_misa+0xd0>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:44
        misa_chars[index++] = 'F';
80000786:	0785                	addi	a5,a5,1
80000788:	9732                	add	a4,a4,a2
8000078a:	0ff7f793          	zext.b	a5,a5
8000078e:	04600593          	li	a1,70
80000792:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:47
        misa_chars[index++] = 'D';
80000796:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:46
    if (misa_bits.b.d) {
80000798:	0086f593          	andi	a1,a3,8
8000079c:	c991                	beqz	a1,800007b0 <print_misa+0xe8>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:47
        misa_chars[index++] = 'D';
8000079e:	0785                	addi	a5,a5,1
800007a0:	9732                	add	a4,a4,a2
800007a2:	0ff7f793          	zext.b	a5,a5
800007a6:	04400593          	li	a1,68
800007aa:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:50
        misa_chars[index++] = 'Q';
800007ae:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:49
    if (misa_bits.b.q) {
800007b0:	65c1                	lui	a1,0x10
800007b2:	8df5                	and	a1,a1,a3
800007b4:	c991                	beqz	a1,800007c8 <print_misa+0x100>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:50
        misa_chars[index++] = 'Q';
800007b6:	0785                	addi	a5,a5,1
800007b8:	9732                	add	a4,a4,a2
800007ba:	0ff7f793          	zext.b	a5,a5
800007be:	05100593          	li	a1,81
800007c2:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:53
        misa_chars[index++] = 'H';
800007c6:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:52
    if (misa_bits.b.h) {
800007c8:	0806f593          	andi	a1,a3,128
800007cc:	c991                	beqz	a1,800007e0 <print_misa+0x118>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:53
        misa_chars[index++] = 'H';
800007ce:	0785                	addi	a5,a5,1
800007d0:	9732                	add	a4,a4,a2
800007d2:	0ff7f793          	zext.b	a5,a5
800007d6:	04800593          	li	a1,72
800007da:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:56
        misa_chars[index++] = 'J';
800007de:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:55
    if (misa_bits.b.j) {
800007e0:	2006f593          	andi	a1,a3,512
800007e4:	c991                	beqz	a1,800007f8 <print_misa+0x130>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:56
        misa_chars[index++] = 'J';
800007e6:	0785                	addi	a5,a5,1
800007e8:	9732                	add	a4,a4,a2
800007ea:	0ff7f793          	zext.b	a5,a5
800007ee:	04a00593          	li	a1,74
800007f2:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:59
        misa_chars[index++] = 'L';
800007f6:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:58
    if (misa_bits.b.l) {
800007f8:	00b6d593          	srli	a1,a3,0xb
800007fc:	8985                	andi	a1,a1,1
800007fe:	c991                	beqz	a1,80000812 <print_misa+0x14a>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:59
        misa_chars[index++] = 'L';
80000800:	0785                	addi	a5,a5,1
80000802:	9732                	add	a4,a4,a2
80000804:	0ff7f793          	zext.b	a5,a5
80000808:	04c00593          	li	a1,76
8000080c:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:62
        misa_chars[index++] = 'N';
80000810:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:61
    if (misa_bits.b.n) {
80000812:	6589                	lui	a1,0x2
80000814:	8df5                	and	a1,a1,a3
80000816:	c991                	beqz	a1,8000082a <print_misa+0x162>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:62
        misa_chars[index++] = 'N';
80000818:	0785                	addi	a5,a5,1
8000081a:	9732                	add	a4,a4,a2
8000081c:	0ff7f793          	zext.b	a5,a5
80000820:	04e00593          	li	a1,78
80000824:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:65
        misa_chars[index++] = 'S';
80000828:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:64
    if (misa_bits.b.s) {
8000082a:	000405b7          	lui	a1,0x40
8000082e:	8df5                	and	a1,a1,a3
80000830:	c991                	beqz	a1,80000844 <print_misa+0x17c>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:65
        misa_chars[index++] = 'S';
80000832:	0785                	addi	a5,a5,1
80000834:	9732                	add	a4,a4,a2
80000836:	0ff7f793          	zext.b	a5,a5
8000083a:	05300593          	li	a1,83
8000083e:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:68
        misa_chars[index++] = 'P';
80000842:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:67
    if (misa_bits.b.p) {
80000844:	65a1                	lui	a1,0x8
80000846:	8df5                	and	a1,a1,a3
80000848:	c991                	beqz	a1,8000085c <print_misa+0x194>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:68
        misa_chars[index++] = 'P';
8000084a:	0785                	addi	a5,a5,1
8000084c:	9732                	add	a4,a4,a2
8000084e:	0ff7f793          	zext.b	a5,a5
80000852:	05000593          	li	a1,80
80000856:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:71
        misa_chars[index++] = 'T';
8000085a:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:70
    if (misa_bits.b.t) {
8000085c:	000805b7          	lui	a1,0x80
80000860:	8df5                	and	a1,a1,a3
80000862:	c991                	beqz	a1,80000876 <print_misa+0x1ae>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:71
        misa_chars[index++] = 'T';
80000864:	0785                	addi	a5,a5,1
80000866:	9732                	add	a4,a4,a2
80000868:	0ff7f793          	zext.b	a5,a5
8000086c:	05400593          	li	a1,84
80000870:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:74
        misa_chars[index++] = 'U';
80000874:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:73
    if (misa_bits.b.u) {
80000876:	001005b7          	lui	a1,0x100
8000087a:	8df5                	and	a1,a1,a3
8000087c:	c991                	beqz	a1,80000890 <print_misa+0x1c8>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:74
        misa_chars[index++] = 'U';
8000087e:	0785                	addi	a5,a5,1
80000880:	9732                	add	a4,a4,a2
80000882:	0ff7f793          	zext.b	a5,a5
80000886:	05500593          	li	a1,85
8000088a:	00b70023          	sb	a1,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:77
        misa_chars[index++] = 'X';
8000088e:	873e                	mv	a4,a5
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:76
    if (misa_bits.b.x) {
80000890:	008005b7          	lui	a1,0x800
80000894:	8eed                	and	a3,a3,a1
80000896:	ca89                	beqz	a3,800008a8 <print_misa+0x1e0>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:77
        misa_chars[index++] = 'X';
80000898:	9732                	add	a4,a4,a2
8000089a:	0785                	addi	a5,a5,1
8000089c:	05800693          	li	a3,88
800008a0:	00d70023          	sb	a3,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:80
    misa_chars[index++] = '\0';
800008a4:	0ff7f713          	zext.b	a4,a5
800008a8:	9732                	add	a4,a4,a2
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:82
    printf("MISA: RV%s\r\n", misa_chars);
800008aa:	94c18593          	addi	a1,gp,-1716 # 900001ac <misa_chars.0>
800008ae:	00002517          	auipc	a0,0x2
800008b2:	a3e50513          	addi	a0,a0,-1474 # 800022ec <_getpid_r+0xce>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:80
    misa_chars[index++] = '\0';
800008b6:	00070023          	sb	zero,0(a4)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:82
    printf("MISA: RV%s\r\n", misa_chars);
800008ba:	a191                	j	80000cfe <iprintf>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:18
        misa_chars[index++] = '6';
800008bc:	678d                	lui	a5,0x3
800008be:	43678793          	addi	a5,a5,1078 # 3436 <__stack_size+0x2c36>
800008c2:	94c18613          	addi	a2,gp,-1716 # 900001ac <misa_chars.0>
800008c6:	00f61023          	sh	a5,0(a2) # 80000000 <_sp+0xefff0000>
800008ca:	4709                	li	a4,2
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:19
        misa_chars[index++] = '4';
800008cc:	4789                	li	a5,2
800008ce:	b50d                	j	800006f0 <print_misa+0x28>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:15
        misa_chars[index++] = '3';
800008d0:	678d                	lui	a5,0x3
800008d2:	23378793          	addi	a5,a5,563 # 3233 <__stack_size+0x2a33>
800008d6:	94c18613          	addi	a2,gp,-1716 # 900001ac <misa_chars.0>
800008da:	00f61023          	sh	a5,0(a2)
800008de:	4709                	li	a4,2
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:16
        misa_chars[index++] = '2';
800008e0:	4789                	li	a5,2
800008e2:	b539                	j	800006f0 <print_misa+0x28>
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:21
        misa_chars[index++] = '1';
800008e4:	678d                	lui	a5,0x3
800008e6:	94c18613          	addi	a2,gp,-1716 # 900001ac <misa_chars.0>
800008ea:	23178793          	addi	a5,a5,561 # 3231 <__stack_size+0x2a31>
800008ee:	00f61023          	sh	a5,0(a2)
C:\Users\Michelle ZHANG\Documents\Nuclei\workspace\Helloworld\Debug/../application/main.c:23
        misa_chars[index++] = '8';
800008f2:	03800793          	li	a5,56
800008f6:	00f60123          	sb	a5,2(a2)
800008fa:	470d                	li	a4,3
800008fc:	478d                	li	a5,3
800008fe:	bbcd                	j	800006f0 <print_misa+0x28>

80000900 <__udivdi3>:
__udivdi3():
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1319
80000900:	88aa                	mv	a7,a0
80000902:	87ae                	mv	a5,a1
__udivmoddi4():
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1024
80000904:	8832                	mv	a6,a2
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1025
80000906:	8536                	mv	a0,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1026
80000908:	8346                	mv	t1,a7
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1064
8000090a:	20069663          	bnez	a3,80000b16 <__udivdi3+0x216>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1066
8000090e:	00002697          	auipc	a3,0x2
80000912:	a2a68693          	addi	a3,a3,-1494 # 80002338 <__clz_tab>
80000916:	0ac5ff63          	bgeu	a1,a2,800009d4 <__udivdi3+0xd4>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1070
8000091a:	6741                	lui	a4,0x10
8000091c:	0ae67563          	bgeu	a2,a4,800009c6 <__udivdi3+0xc6>
80000920:	0ff00713          	li	a4,255
80000924:	00c73733          	sltu	a4,a4,a2
80000928:	070e                	slli	a4,a4,0x3
8000092a:	00e65533          	srl	a0,a2,a4
8000092e:	96aa                	add	a3,a3,a0
80000930:	0006c683          	lbu	a3,0(a3)
80000934:	02000513          	li	a0,32
80000938:	9736                	add	a4,a4,a3
8000093a:	40e506b3          	sub	a3,a0,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1072
8000093e:	00e50b63          	beq	a0,a4,80000954 <__udivdi3+0x54>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1078
80000942:	00d795b3          	sll	a1,a5,a3
80000946:	00e8d733          	srl	a4,a7,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1077
8000094a:	00d61833          	sll	a6,a2,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1078
8000094e:	8dd9                	or	a1,a1,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1079
80000950:	00d89333          	sll	t1,a7,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1082
80000954:	01085893          	srli	a7,a6,0x10
80000958:	0315d6b3          	divu	a3,a1,a7
8000095c:	01081613          	slli	a2,a6,0x10
80000960:	8241                	srli	a2,a2,0x10
80000962:	01035793          	srli	a5,t1,0x10
80000966:	0315f733          	remu	a4,a1,a7
8000096a:	8536                	mv	a0,a3
8000096c:	02d605b3          	mul	a1,a2,a3
80000970:	0742                	slli	a4,a4,0x10
80000972:	8fd9                	or	a5,a5,a4
80000974:	00b7fc63          	bgeu	a5,a1,8000098c <__udivdi3+0x8c>
80000978:	97c2                	add	a5,a5,a6
8000097a:	fff68513          	addi	a0,a3,-1
8000097e:	0107e763          	bltu	a5,a6,8000098c <__udivdi3+0x8c>
80000982:	00b7f563          	bgeu	a5,a1,8000098c <__udivdi3+0x8c>
80000986:	ffe68513          	addi	a0,a3,-2
8000098a:	97c2                	add	a5,a5,a6
8000098c:	8f8d                	sub	a5,a5,a1
8000098e:	0317f733          	remu	a4,a5,a7
80000992:	0342                	slli	t1,t1,0x10
80000994:	01035313          	srli	t1,t1,0x10
80000998:	0317d7b3          	divu	a5,a5,a7
8000099c:	0742                	slli	a4,a4,0x10
8000099e:	00676333          	or	t1,a4,t1
800009a2:	02f606b3          	mul	a3,a2,a5
800009a6:	863e                	mv	a2,a5
800009a8:	00d37b63          	bgeu	t1,a3,800009be <__udivdi3+0xbe>
800009ac:	9342                	add	t1,t1,a6
800009ae:	fff78613          	addi	a2,a5,-1
800009b2:	01036663          	bltu	t1,a6,800009be <__udivdi3+0xbe>
800009b6:	00d37463          	bgeu	t1,a3,800009be <__udivdi3+0xbe>
800009ba:	ffe78613          	addi	a2,a5,-2
800009be:	0542                	slli	a0,a0,0x10
800009c0:	8d51                	or	a0,a0,a2
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1209
800009c2:	4581                	li	a1,0
800009c4:	a85d                	j	80000a7a <__udivdi3+0x17a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1070
800009c6:	01000537          	lui	a0,0x1000
800009ca:	4741                	li	a4,16
800009cc:	f4a66fe3          	bltu	a2,a0,8000092a <__udivdi3+0x2a>
800009d0:	4761                	li	a4,24
800009d2:	bfa1                	j	8000092a <__udivdi3+0x2a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1091
800009d4:	e601                	bnez	a2,800009dc <__udivdi3+0xdc>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1092
800009d6:	4705                	li	a4,1
800009d8:	02c75833          	divu	a6,a4,a2
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1094
800009dc:	6741                	lui	a4,0x10
800009de:	08e87f63          	bgeu	a6,a4,80000a7c <__udivdi3+0x17c>
800009e2:	0ff00713          	li	a4,255
800009e6:	01077363          	bgeu	a4,a6,800009ec <__udivdi3+0xec>
800009ea:	4521                	li	a0,8
800009ec:	00a85733          	srl	a4,a6,a0
800009f0:	96ba                	add	a3,a3,a4
800009f2:	0006c703          	lbu	a4,0(a3)
800009f6:	02000613          	li	a2,32
800009fa:	972a                	add	a4,a4,a0
800009fc:	40e606b3          	sub	a3,a2,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1096
80000a00:	08e61563          	bne	a2,a4,80000a8a <__udivdi3+0x18a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1105
80000a04:	410787b3          	sub	a5,a5,a6
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1106
80000a08:	4585                	li	a1,1
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1124
80000a0a:	01085893          	srli	a7,a6,0x10
80000a0e:	01081613          	slli	a2,a6,0x10
80000a12:	8241                	srli	a2,a2,0x10
80000a14:	01035713          	srli	a4,t1,0x10
80000a18:	0317f6b3          	remu	a3,a5,a7
80000a1c:	0317d7b3          	divu	a5,a5,a7
80000a20:	06c2                	slli	a3,a3,0x10
80000a22:	8f55                	or	a4,a4,a3
80000a24:	02f60e33          	mul	t3,a2,a5
80000a28:	853e                	mv	a0,a5
80000a2a:	01c77c63          	bgeu	a4,t3,80000a42 <__udivdi3+0x142>
80000a2e:	9742                	add	a4,a4,a6
80000a30:	fff78513          	addi	a0,a5,-1
80000a34:	01076763          	bltu	a4,a6,80000a42 <__udivdi3+0x142>
80000a38:	01c77563          	bgeu	a4,t3,80000a42 <__udivdi3+0x142>
80000a3c:	ffe78513          	addi	a0,a5,-2
80000a40:	9742                	add	a4,a4,a6
80000a42:	41c70733          	sub	a4,a4,t3
80000a46:	031777b3          	remu	a5,a4,a7
80000a4a:	0342                	slli	t1,t1,0x10
80000a4c:	01035313          	srli	t1,t1,0x10
80000a50:	03175733          	divu	a4,a4,a7
80000a54:	07c2                	slli	a5,a5,0x10
80000a56:	0067e333          	or	t1,a5,t1
80000a5a:	02e606b3          	mul	a3,a2,a4
80000a5e:	863a                	mv	a2,a4
80000a60:	00d37b63          	bgeu	t1,a3,80000a76 <__udivdi3+0x176>
80000a64:	9342                	add	t1,t1,a6
80000a66:	fff70613          	addi	a2,a4,-1 # ffff <__stack_size+0xf7ff>
80000a6a:	01036663          	bltu	t1,a6,80000a76 <__udivdi3+0x176>
80000a6e:	00d37463          	bgeu	t1,a3,80000a76 <__udivdi3+0x176>
80000a72:	ffe70613          	addi	a2,a4,-2
80000a76:	0542                	slli	a0,a0,0x10
80000a78:	8d51                	or	a0,a0,a2
__udivdi3():
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1321
80000a7a:	8082                	ret
__udivmoddi4():
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1094
80000a7c:	01000737          	lui	a4,0x1000
80000a80:	4541                	li	a0,16
80000a82:	f6e865e3          	bltu	a6,a4,800009ec <__udivdi3+0xec>
80000a86:	4561                	li	a0,24
80000a88:	b795                	j	800009ec <__udivdi3+0xec>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1114
80000a8a:	00d81833          	sll	a6,a6,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1115
80000a8e:	00e7d533          	srl	a0,a5,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1117
80000a92:	00d89333          	sll	t1,a7,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1116
80000a96:	00d797b3          	sll	a5,a5,a3
80000a9a:	00e8d733          	srl	a4,a7,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1119
80000a9e:	01085893          	srli	a7,a6,0x10
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1116
80000aa2:	00f76633          	or	a2,a4,a5
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1119
80000aa6:	03157733          	remu	a4,a0,a7
80000aaa:	01081793          	slli	a5,a6,0x10
80000aae:	83c1                	srli	a5,a5,0x10
80000ab0:	01065593          	srli	a1,a2,0x10
80000ab4:	03155533          	divu	a0,a0,a7
80000ab8:	0742                	slli	a4,a4,0x10
80000aba:	8f4d                	or	a4,a4,a1
80000abc:	02a786b3          	mul	a3,a5,a0
80000ac0:	85aa                	mv	a1,a0
80000ac2:	00d77c63          	bgeu	a4,a3,80000ada <__udivdi3+0x1da>
80000ac6:	9742                	add	a4,a4,a6
80000ac8:	fff50593          	addi	a1,a0,-1 # ffffff <__stack_size+0xfff7ff>
80000acc:	01076763          	bltu	a4,a6,80000ada <__udivdi3+0x1da>
80000ad0:	00d77563          	bgeu	a4,a3,80000ada <__udivdi3+0x1da>
80000ad4:	ffe50593          	addi	a1,a0,-2
80000ad8:	9742                	add	a4,a4,a6
80000ada:	40d706b3          	sub	a3,a4,a3
80000ade:	0316f733          	remu	a4,a3,a7
80000ae2:	0642                	slli	a2,a2,0x10
80000ae4:	8241                	srli	a2,a2,0x10
80000ae6:	0316d6b3          	divu	a3,a3,a7
80000aea:	0742                	slli	a4,a4,0x10
80000aec:	02d78533          	mul	a0,a5,a3
80000af0:	00c767b3          	or	a5,a4,a2
80000af4:	8736                	mv	a4,a3
80000af6:	00a7fc63          	bgeu	a5,a0,80000b0e <__udivdi3+0x20e>
80000afa:	97c2                	add	a5,a5,a6
80000afc:	fff68713          	addi	a4,a3,-1
80000b00:	0107e763          	bltu	a5,a6,80000b0e <__udivdi3+0x20e>
80000b04:	00a7f563          	bgeu	a5,a0,80000b0e <__udivdi3+0x20e>
80000b08:	ffe68713          	addi	a4,a3,-2
80000b0c:	97c2                	add	a5,a5,a6
80000b0e:	05c2                	slli	a1,a1,0x10
80000b10:	8f89                	sub	a5,a5,a0
80000b12:	8dd9                	or	a1,a1,a4
80000b14:	bddd                	j	80000a0a <__udivdi3+0x10a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1140
80000b16:	14d5e263          	bltu	a1,a3,80000c5a <__udivdi3+0x35a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1159
80000b1a:	6741                	lui	a4,0x10
80000b1c:	02e6ff63          	bgeu	a3,a4,80000b5a <__udivdi3+0x25a>
80000b20:	0ff00713          	li	a4,255
80000b24:	00d735b3          	sltu	a1,a4,a3
80000b28:	058e                	slli	a1,a1,0x3
80000b2a:	00b6d533          	srl	a0,a3,a1
80000b2e:	00002717          	auipc	a4,0x2
80000b32:	80a70713          	addi	a4,a4,-2038 # 80002338 <__clz_tab>
80000b36:	972a                	add	a4,a4,a0
80000b38:	00074703          	lbu	a4,0(a4)
80000b3c:	02000513          	li	a0,32
80000b40:	972e                	add	a4,a4,a1
80000b42:	40e505b3          	sub	a1,a0,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1160
80000b46:	02e51163          	bne	a0,a4,80000b68 <__udivdi3+0x268>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1172
80000b4a:	4505                	li	a0,1
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1170
80000b4c:	f2f6e7e3          	bltu	a3,a5,80000a7a <__udivdi3+0x17a>
80000b50:	00c8b533          	sltu	a0,a7,a2
80000b54:	00154513          	xori	a0,a0,1
80000b58:	b70d                	j	80000a7a <__udivdi3+0x17a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1159
80000b5a:	01000737          	lui	a4,0x1000
80000b5e:	45c1                	li	a1,16
80000b60:	fce6e5e3          	bltu	a3,a4,80000b2a <__udivdi3+0x22a>
80000b64:	45e1                	li	a1,24
80000b66:	b7d1                	j	80000b2a <__udivdi3+0x22a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1194
80000b68:	00e65833          	srl	a6,a2,a4
80000b6c:	00b696b3          	sll	a3,a3,a1
80000b70:	00d86833          	or	a6,a6,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1196
80000b74:	00e7d333          	srl	t1,a5,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
80000b78:	01085e93          	srli	t4,a6,0x10
80000b7c:	03d376b3          	remu	a3,t1,t4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1197
80000b80:	00b797b3          	sll	a5,a5,a1
80000b84:	00e8d733          	srl	a4,a7,a4
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1195
80000b88:	00b61e33          	sll	t3,a2,a1
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1197
80000b8c:	00f76633          	or	a2,a4,a5
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
80000b90:	01081793          	slli	a5,a6,0x10
80000b94:	83c1                	srli	a5,a5,0x10
80000b96:	01065713          	srli	a4,a2,0x10
80000b9a:	03d35333          	divu	t1,t1,t4
80000b9e:	06c2                	slli	a3,a3,0x10
80000ba0:	8f55                	or	a4,a4,a3
80000ba2:	02678f33          	mul	t5,a5,t1
80000ba6:	851a                	mv	a0,t1
80000ba8:	01e77c63          	bgeu	a4,t5,80000bc0 <__udivdi3+0x2c0>
80000bac:	9742                	add	a4,a4,a6
80000bae:	fff30513          	addi	a0,t1,-1
80000bb2:	01076763          	bltu	a4,a6,80000bc0 <__udivdi3+0x2c0>
80000bb6:	01e77563          	bgeu	a4,t5,80000bc0 <__udivdi3+0x2c0>
80000bba:	ffe30513          	addi	a0,t1,-2
80000bbe:	9742                	add	a4,a4,a6
80000bc0:	41e70733          	sub	a4,a4,t5
80000bc4:	03d776b3          	remu	a3,a4,t4
80000bc8:	03d75733          	divu	a4,a4,t4
80000bcc:	06c2                	slli	a3,a3,0x10
80000bce:	02e78333          	mul	t1,a5,a4
80000bd2:	01061793          	slli	a5,a2,0x10
80000bd6:	83c1                	srli	a5,a5,0x10
80000bd8:	8fd5                	or	a5,a5,a3
80000bda:	863a                	mv	a2,a4
80000bdc:	0067fc63          	bgeu	a5,t1,80000bf4 <__udivdi3+0x2f4>
80000be0:	97c2                	add	a5,a5,a6
80000be2:	fff70613          	addi	a2,a4,-1 # ffffff <__stack_size+0xfff7ff>
80000be6:	0107e763          	bltu	a5,a6,80000bf4 <__udivdi3+0x2f4>
80000bea:	0067f563          	bgeu	a5,t1,80000bf4 <__udivdi3+0x2f4>
80000bee:	ffe70613          	addi	a2,a4,-2
80000bf2:	97c2                	add	a5,a5,a6
80000bf4:	0542                	slli	a0,a0,0x10
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80000bf6:	6ec1                	lui	t4,0x10
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
80000bf8:	8d51                	or	a0,a0,a2
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80000bfa:	fffe8693          	addi	a3,t4,-1 # ffff <__stack_size+0xf7ff>
80000bfe:	010e5613          	srli	a2,t3,0x10
80000c02:	01055813          	srli	a6,a0,0x10
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1200
80000c06:	406787b3          	sub	a5,a5,t1
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80000c0a:	00d57333          	and	t1,a0,a3
80000c0e:	00de76b3          	and	a3,t3,a3
80000c12:	02d30e33          	mul	t3,t1,a3
80000c16:	02d806b3          	mul	a3,a6,a3
80000c1a:	010e5713          	srli	a4,t3,0x10
80000c1e:	02c30333          	mul	t1,t1,a2
80000c22:	9336                	add	t1,t1,a3
80000c24:	971a                	add	a4,a4,t1
80000c26:	02c80833          	mul	a6,a6,a2
80000c2a:	00d77363          	bgeu	a4,a3,80000c30 <__udivdi3+0x330>
80000c2e:	9876                	add	a6,a6,t4
80000c30:	01075693          	srli	a3,a4,0x10
80000c34:	9836                	add	a6,a6,a3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1203
80000c36:	0307e063          	bltu	a5,a6,80000c56 <__udivdi3+0x356>
80000c3a:	d90794e3          	bne	a5,a6,800009c2 <__udivdi3+0xc2>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80000c3e:	67c1                	lui	a5,0x10
80000c40:	17fd                	addi	a5,a5,-1
80000c42:	8f7d                	and	a4,a4,a5
80000c44:	0742                	slli	a4,a4,0x10
80000c46:	00fe7e33          	and	t3,t3,a5
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1198
80000c4a:	00b898b3          	sll	a7,a7,a1
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1201
80000c4e:	9772                	add	a4,a4,t3
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1209
80000c50:	4581                	li	a1,0
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1203
80000c52:	e2e8f4e3          	bgeu	a7,a4,80000a7a <__udivdi3+0x17a>
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1205
80000c56:	157d                	addi	a0,a0,-1
__udivdi3():
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1206
80000c58:	b3ad                	j	800009c2 <__udivdi3+0xc2>
__udivmoddi4():
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1145
80000c5a:	4581                	li	a1,0
/home/xl_ci/toolchain/riscv-gnu-toolchain/riscv-gcc/libgcc/libgcc2.c:1144
80000c5c:	4501                	li	a0,0
80000c5e:	bd31                	j	80000a7a <__udivdi3+0x17a>

80000c60 <atexit>:
atexit():
80000c60:	85aa                	mv	a1,a0
80000c62:	4681                	li	a3,0
80000c64:	4601                	li	a2,0
80000c66:	4501                	li	a0,0
80000c68:	a179                	j	800010f6 <__register_exitproc>

80000c6a <__libc_fini_array>:
__libc_fini_array():
80000c6a:	1141                	addi	sp,sp,-16
80000c6c:	c422                	sw	s0,8(sp)
80000c6e:	c226                	sw	s1,4(sp)
80000c70:	00002417          	auipc	s0,0x2
80000c74:	96840413          	addi	s0,s0,-1688 # 800025d8 <__fsymtab_end>
80000c78:	00002497          	auipc	s1,0x2
80000c7c:	96048493          	addi	s1,s1,-1696 # 800025d8 <__fsymtab_end>
80000c80:	8c05                	sub	s0,s0,s1
80000c82:	c606                	sw	ra,12(sp)
80000c84:	8409                	srai	s0,s0,0x2
80000c86:	e411                	bnez	s0,80000c92 <__libc_fini_array+0x28>
80000c88:	40b2                	lw	ra,12(sp)
80000c8a:	4422                	lw	s0,8(sp)
80000c8c:	4492                	lw	s1,4(sp)
80000c8e:	0141                	addi	sp,sp,16
80000c90:	8082                	ret
80000c92:	147d                	addi	s0,s0,-1
80000c94:	00241793          	slli	a5,s0,0x2
80000c98:	97a6                	add	a5,a5,s1
80000c9a:	439c                	lw	a5,0(a5)
80000c9c:	9782                	jalr	a5
80000c9e:	b7e5                	j	80000c86 <__libc_fini_array+0x1c>

80000ca0 <__libc_init_array>:
__libc_init_array():
80000ca0:	1141                	addi	sp,sp,-16
80000ca2:	c422                	sw	s0,8(sp)
80000ca4:	c226                	sw	s1,4(sp)
80000ca6:	00002417          	auipc	s0,0x2
80000caa:	93240413          	addi	s0,s0,-1742 # 800025d8 <__fsymtab_end>
80000cae:	00002497          	auipc	s1,0x2
80000cb2:	92a48493          	addi	s1,s1,-1750 # 800025d8 <__fsymtab_end>
80000cb6:	8c81                	sub	s1,s1,s0
80000cb8:	c04a                	sw	s2,0(sp)
80000cba:	c606                	sw	ra,12(sp)
80000cbc:	8489                	srai	s1,s1,0x2
80000cbe:	4901                	li	s2,0
80000cc0:	02991563          	bne	s2,s1,80000cea <__libc_init_array+0x4a>
80000cc4:	00002417          	auipc	s0,0x2
80000cc8:	91440413          	addi	s0,s0,-1772 # 800025d8 <__fsymtab_end>
80000ccc:	00002497          	auipc	s1,0x2
80000cd0:	90c48493          	addi	s1,s1,-1780 # 800025d8 <__fsymtab_end>
80000cd4:	8c81                	sub	s1,s1,s0
80000cd6:	8489                	srai	s1,s1,0x2
80000cd8:	4901                	li	s2,0
80000cda:	00991d63          	bne	s2,s1,80000cf4 <__libc_init_array+0x54>
80000cde:	40b2                	lw	ra,12(sp)
80000ce0:	4422                	lw	s0,8(sp)
80000ce2:	4492                	lw	s1,4(sp)
80000ce4:	4902                	lw	s2,0(sp)
80000ce6:	0141                	addi	sp,sp,16
80000ce8:	8082                	ret
80000cea:	401c                	lw	a5,0(s0)
80000cec:	0905                	addi	s2,s2,1
80000cee:	0411                	addi	s0,s0,4
80000cf0:	9782                	jalr	a5
80000cf2:	b7f9                	j	80000cc0 <__libc_init_array+0x20>
80000cf4:	401c                	lw	a5,0(s0)
80000cf6:	0905                	addi	s2,s2,1
80000cf8:	0411                	addi	s0,s0,4
80000cfa:	9782                	jalr	a5
80000cfc:	bff9                	j	80000cda <__libc_init_array+0x3a>

80000cfe <iprintf>:
printf():
80000cfe:	715d                	addi	sp,sp,-80
80000d00:	d422                	sw	s0,40(sp)
80000d02:	d606                	sw	ra,44(sp)
80000d04:	842a                	mv	s0,a0
80000d06:	da2e                	sw	a1,52(sp)
80000d08:	dc32                	sw	a2,56(sp)
80000d0a:	de36                	sw	a3,60(sp)
80000d0c:	c0ba                	sw	a4,64(sp)
80000d0e:	c2be                	sw	a5,68(sp)
80000d10:	c4c2                	sw	a6,72(sp)
80000d12:	c6c6                	sw	a7,76(sp)
80000d14:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
80000d18:	c511                	beqz	a0,80000d24 <iprintf+0x26>
80000d1a:	4d1c                	lw	a5,24(a0)
80000d1c:	e781                	bnez	a5,80000d24 <iprintf+0x26>
80000d1e:	c62a                	sw	a0,12(sp)
80000d20:	25dd                	jal	80001406 <__sinit>
80000d22:	4532                	lw	a0,12(sp)
80000d24:	450c                	lw	a1,8(a0)
80000d26:	1854                	addi	a3,sp,52
80000d28:	8622                	mv	a2,s0
80000d2a:	ce36                	sw	a3,28(sp)
80000d2c:	401000ef          	jal	ra,8000192c <_vfiprintf_r>
80000d30:	50b2                	lw	ra,44(sp)
80000d32:	5422                	lw	s0,40(sp)
80000d34:	6161                	addi	sp,sp,80
80000d36:	8082                	ret

80000d38 <_puts_r>:
_puts_r():
80000d38:	1101                	addi	sp,sp,-32
80000d3a:	ca26                	sw	s1,20(sp)
80000d3c:	c84a                	sw	s2,16(sp)
80000d3e:	ce06                	sw	ra,28(sp)
80000d40:	cc22                	sw	s0,24(sp)
80000d42:	c64e                	sw	s3,12(sp)
80000d44:	c452                	sw	s4,8(sp)
80000d46:	84aa                	mv	s1,a0
80000d48:	892e                	mv	s2,a1
80000d4a:	c501                	beqz	a0,80000d52 <_puts_r+0x1a>
80000d4c:	4d1c                	lw	a5,24(a0)
80000d4e:	e391                	bnez	a5,80000d52 <_puts_r+0x1a>
80000d50:	2d5d                	jal	80001406 <__sinit>
80000d52:	4c9c                	lw	a5,24(s1)
80000d54:	4480                	lw	s0,8(s1)
80000d56:	e399                	bnez	a5,80000d5c <_puts_r+0x24>
80000d58:	8526                	mv	a0,s1
80000d5a:	2575                	jal	80001406 <__sinit>
80000d5c:	00001797          	auipc	a5,0x1
80000d60:	7a878793          	addi	a5,a5,1960 # 80002504 <__sf_fake_stdin>
80000d64:	02f41c63          	bne	s0,a5,80000d9c <_puts_r+0x64>
80000d68:	40c0                	lw	s0,4(s1)
80000d6a:	00c45783          	lhu	a5,12(s0)
80000d6e:	8ba1                	andi	a5,a5,8
80000d70:	c7b1                	beqz	a5,80000dbc <_puts_r+0x84>
80000d72:	481c                	lw	a5,16(s0)
80000d74:	c7a1                	beqz	a5,80000dbc <_puts_r+0x84>
80000d76:	59fd                	li	s3,-1
80000d78:	4a29                	li	s4,10
80000d7a:	441c                	lw	a5,8(s0)
80000d7c:	00094583          	lbu	a1,0(s2)
80000d80:	17fd                	addi	a5,a5,-1
80000d82:	e9b1                	bnez	a1,80000dd6 <_puts_r+0x9e>
80000d84:	c41c                	sw	a5,8(s0)
80000d86:	0607de63          	bgez	a5,80000e02 <_puts_r+0xca>
80000d8a:	8622                	mv	a2,s0
80000d8c:	45a9                	li	a1,10
80000d8e:	8526                	mv	a0,s1
80000d90:	2245                	jal	80000f30 <__swbuf_r>
80000d92:	57fd                	li	a5,-1
80000d94:	02f50863          	beq	a0,a5,80000dc4 <_puts_r+0x8c>
80000d98:	4529                	li	a0,10
80000d9a:	a035                	j	80000dc6 <_puts_r+0x8e>
80000d9c:	00001797          	auipc	a5,0x1
80000da0:	78878793          	addi	a5,a5,1928 # 80002524 <__sf_fake_stdout>
80000da4:	00f41463          	bne	s0,a5,80000dac <_puts_r+0x74>
80000da8:	4480                	lw	s0,8(s1)
80000daa:	b7c1                	j	80000d6a <_puts_r+0x32>
80000dac:	00001797          	auipc	a5,0x1
80000db0:	73878793          	addi	a5,a5,1848 # 800024e4 <__sf_fake_stderr>
80000db4:	faf41be3          	bne	s0,a5,80000d6a <_puts_r+0x32>
80000db8:	44c0                	lw	s0,12(s1)
80000dba:	bf45                	j	80000d6a <_puts_r+0x32>
80000dbc:	85a2                	mv	a1,s0
80000dbe:	8526                	mv	a0,s1
80000dc0:	2c05                	jal	80000ff0 <__swsetup_r>
80000dc2:	d955                	beqz	a0,80000d76 <_puts_r+0x3e>
80000dc4:	557d                	li	a0,-1
80000dc6:	40f2                	lw	ra,28(sp)
80000dc8:	4462                	lw	s0,24(sp)
80000dca:	44d2                	lw	s1,20(sp)
80000dcc:	4942                	lw	s2,16(sp)
80000dce:	49b2                	lw	s3,12(sp)
80000dd0:	4a22                	lw	s4,8(sp)
80000dd2:	6105                	addi	sp,sp,32
80000dd4:	8082                	ret
80000dd6:	c41c                	sw	a5,8(s0)
80000dd8:	0905                	addi	s2,s2,1
80000dda:	0007d763          	bgez	a5,80000de8 <_puts_r+0xb0>
80000dde:	4c18                	lw	a4,24(s0)
80000de0:	00e7cb63          	blt	a5,a4,80000df6 <_puts_r+0xbe>
80000de4:	01458963          	beq	a1,s4,80000df6 <_puts_r+0xbe>
80000de8:	401c                	lw	a5,0(s0)
80000dea:	00178713          	addi	a4,a5,1
80000dee:	c018                	sw	a4,0(s0)
80000df0:	00b78023          	sb	a1,0(a5)
80000df4:	b759                	j	80000d7a <_puts_r+0x42>
80000df6:	8622                	mv	a2,s0
80000df8:	8526                	mv	a0,s1
80000dfa:	2a1d                	jal	80000f30 <__swbuf_r>
80000dfc:	f7351fe3          	bne	a0,s3,80000d7a <_puts_r+0x42>
80000e00:	b7d1                	j	80000dc4 <_puts_r+0x8c>
80000e02:	401c                	lw	a5,0(s0)
80000e04:	00178713          	addi	a4,a5,1
80000e08:	c018                	sw	a4,0(s0)
80000e0a:	4729                	li	a4,10
80000e0c:	00e78023          	sb	a4,0(a5)
80000e10:	b761                	j	80000d98 <_puts_r+0x60>

80000e12 <puts>:
puts():
80000e12:	85aa                	mv	a1,a0
80000e14:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
80000e18:	b705                	j	80000d38 <_puts_r>

80000e1a <srand>:
srand():
80000e1a:	1141                	addi	sp,sp,-16
80000e1c:	c226                	sw	s1,4(sp)
80000e1e:	8081a483          	lw	s1,-2040(gp) # 90000068 <_impure_ptr>
80000e22:	5c9c                	lw	a5,56(s1)
80000e24:	c422                	sw	s0,8(sp)
80000e26:	c606                	sw	ra,12(sp)
80000e28:	842a                	mv	s0,a0
80000e2a:	eba1                	bnez	a5,80000e7a <srand+0x60>
80000e2c:	4561                	li	a0,24
80000e2e:	05f000ef          	jal	ra,8000168c <malloc>
80000e32:	dc88                	sw	a0,56(s1)
80000e34:	ed09                	bnez	a0,80000e4e <srand+0x34>
80000e36:	00001697          	auipc	a3,0x1
80000e3a:	60268693          	addi	a3,a3,1538 # 80002438 <__clz_tab+0x100>
80000e3e:	4601                	li	a2,0
80000e40:	04200593          	li	a1,66
80000e44:	00001517          	auipc	a0,0x1
80000e48:	60c50513          	addi	a0,a0,1548 # 80002450 <__clz_tab+0x118>
80000e4c:	260d                	jal	8000116e <__assert_func>
80000e4e:	abcd37b7          	lui	a5,0xabcd3
80000e52:	30e78793          	addi	a5,a5,782 # abcd330e <_sp+0x1bcc330e>
80000e56:	c11c                	sw	a5,0(a0)
80000e58:	e66d17b7          	lui	a5,0xe66d1
80000e5c:	23478793          	addi	a5,a5,564 # e66d1234 <_sp+0x566c1234>
80000e60:	c15c                	sw	a5,4(a0)
80000e62:	0005e7b7          	lui	a5,0x5e
80000e66:	eec78793          	addi	a5,a5,-276 # 5deec <__stack_size+0x5d6ec>
80000e6a:	c51c                	sw	a5,8(a0)
80000e6c:	47ad                	li	a5,11
80000e6e:	00f51623          	sh	a5,12(a0)
80000e72:	4705                	li	a4,1
80000e74:	4781                	li	a5,0
80000e76:	c918                	sw	a4,16(a0)
80000e78:	c95c                	sw	a5,20(a0)
80000e7a:	5c9c                	lw	a5,56(s1)
80000e7c:	40b2                	lw	ra,12(sp)
80000e7e:	4492                	lw	s1,4(sp)
80000e80:	cb80                	sw	s0,16(a5)
80000e82:	4422                	lw	s0,8(sp)
80000e84:	0007aa23          	sw	zero,20(a5)
80000e88:	0141                	addi	sp,sp,16
80000e8a:	8082                	ret

80000e8c <rand>:
rand():
80000e8c:	1141                	addi	sp,sp,-16
80000e8e:	c422                	sw	s0,8(sp)
80000e90:	8081a403          	lw	s0,-2040(gp) # 90000068 <_impure_ptr>
80000e94:	5c1c                	lw	a5,56(s0)
80000e96:	c606                	sw	ra,12(sp)
80000e98:	eba1                	bnez	a5,80000ee8 <rand+0x5c>
80000e9a:	4561                	li	a0,24
80000e9c:	7f0000ef          	jal	ra,8000168c <malloc>
80000ea0:	dc08                	sw	a0,56(s0)
80000ea2:	ed09                	bnez	a0,80000ebc <rand+0x30>
80000ea4:	00001697          	auipc	a3,0x1
80000ea8:	59468693          	addi	a3,a3,1428 # 80002438 <__clz_tab+0x100>
80000eac:	4601                	li	a2,0
80000eae:	04e00593          	li	a1,78
80000eb2:	00001517          	auipc	a0,0x1
80000eb6:	59e50513          	addi	a0,a0,1438 # 80002450 <__clz_tab+0x118>
80000eba:	2c55                	jal	8000116e <__assert_func>
80000ebc:	abcd37b7          	lui	a5,0xabcd3
80000ec0:	30e78793          	addi	a5,a5,782 # abcd330e <_sp+0x1bcc330e>
80000ec4:	c11c                	sw	a5,0(a0)
80000ec6:	e66d17b7          	lui	a5,0xe66d1
80000eca:	23478793          	addi	a5,a5,564 # e66d1234 <_sp+0x566c1234>
80000ece:	c15c                	sw	a5,4(a0)
80000ed0:	0005e7b7          	lui	a5,0x5e
80000ed4:	eec78793          	addi	a5,a5,-276 # 5deec <__stack_size+0x5d6ec>
80000ed8:	c51c                	sw	a5,8(a0)
80000eda:	47ad                	li	a5,11
80000edc:	00f51623          	sh	a5,12(a0)
80000ee0:	4705                	li	a4,1
80000ee2:	4781                	li	a5,0
80000ee4:	c918                	sw	a4,16(a0)
80000ee6:	c95c                	sw	a5,20(a0)
80000ee8:	5c10                	lw	a2,56(s0)
80000eea:	4c958737          	lui	a4,0x4c958
80000eee:	5851f7b7          	lui	a5,0x5851f
80000ef2:	4a14                	lw	a3,16(a2)
80000ef4:	4a48                	lw	a0,20(a2)
80000ef6:	f2d70713          	addi	a4,a4,-211 # 4c957f2d <__stack_size+0x4c95772d>
80000efa:	42d78793          	addi	a5,a5,1069 # 5851f42d <__stack_size+0x5851ec2d>
80000efe:	02f687b3          	mul	a5,a3,a5
80000f02:	40b2                	lw	ra,12(sp)
80000f04:	4422                	lw	s0,8(sp)
80000f06:	02e50533          	mul	a0,a0,a4
80000f0a:	953e                	add	a0,a0,a5
80000f0c:	02e687b3          	mul	a5,a3,a4
80000f10:	02e6b733          	mulhu	a4,a3,a4
80000f14:	00178693          	addi	a3,a5,1
80000f18:	ca14                	sw	a3,16(a2)
80000f1a:	972a                	add	a4,a4,a0
80000f1c:	00f6b533          	sltu	a0,a3,a5
80000f20:	953a                	add	a0,a0,a4
80000f22:	ca48                	sw	a0,20(a2)
80000f24:	0506                	slli	a0,a0,0x1
80000f26:	8105                	srli	a0,a0,0x1
80000f28:	0141                	addi	sp,sp,16
80000f2a:	8082                	ret

80000f2c <isatty>:
isatty():
80000f2c:	a82ff06f          	j	800001ae <_isatty>

80000f30 <__swbuf_r>:
__swbuf_r():
80000f30:	1101                	addi	sp,sp,-32
80000f32:	cc22                	sw	s0,24(sp)
80000f34:	ca26                	sw	s1,20(sp)
80000f36:	c84a                	sw	s2,16(sp)
80000f38:	ce06                	sw	ra,28(sp)
80000f3a:	c64e                	sw	s3,12(sp)
80000f3c:	84aa                	mv	s1,a0
80000f3e:	892e                	mv	s2,a1
80000f40:	8432                	mv	s0,a2
80000f42:	c501                	beqz	a0,80000f4a <__swbuf_r+0x1a>
80000f44:	4d1c                	lw	a5,24(a0)
80000f46:	e391                	bnez	a5,80000f4a <__swbuf_r+0x1a>
80000f48:	297d                	jal	80001406 <__sinit>
80000f4a:	00001797          	auipc	a5,0x1
80000f4e:	5ba78793          	addi	a5,a5,1466 # 80002504 <__sf_fake_stdin>
80000f52:	06f41963          	bne	s0,a5,80000fc4 <__swbuf_r+0x94>
80000f56:	40c0                	lw	s0,4(s1)
80000f58:	4c1c                	lw	a5,24(s0)
80000f5a:	c41c                	sw	a5,8(s0)
80000f5c:	00c45783          	lhu	a5,12(s0)
80000f60:	8ba1                	andi	a5,a5,8
80000f62:	c3c9                	beqz	a5,80000fe4 <__swbuf_r+0xb4>
80000f64:	481c                	lw	a5,16(s0)
80000f66:	cfbd                	beqz	a5,80000fe4 <__swbuf_r+0xb4>
80000f68:	481c                	lw	a5,16(s0)
80000f6a:	4008                	lw	a0,0(s0)
80000f6c:	0ff97993          	zext.b	s3,s2
80000f70:	0ff97913          	zext.b	s2,s2
80000f74:	8d1d                	sub	a0,a0,a5
80000f76:	485c                	lw	a5,20(s0)
80000f78:	00f54663          	blt	a0,a5,80000f84 <__swbuf_r+0x54>
80000f7c:	85a2                	mv	a1,s0
80000f7e:	8526                	mv	a0,s1
80000f80:	26b5                	jal	800012ec <_fflush_r>
80000f82:	e52d                	bnez	a0,80000fec <__swbuf_r+0xbc>
80000f84:	441c                	lw	a5,8(s0)
80000f86:	0505                	addi	a0,a0,1
80000f88:	17fd                	addi	a5,a5,-1
80000f8a:	c41c                	sw	a5,8(s0)
80000f8c:	401c                	lw	a5,0(s0)
80000f8e:	00178713          	addi	a4,a5,1
80000f92:	c018                	sw	a4,0(s0)
80000f94:	01378023          	sb	s3,0(a5)
80000f98:	485c                	lw	a5,20(s0)
80000f9a:	00a78963          	beq	a5,a0,80000fac <__swbuf_r+0x7c>
80000f9e:	00c45783          	lhu	a5,12(s0)
80000fa2:	8b85                	andi	a5,a5,1
80000fa4:	cb81                	beqz	a5,80000fb4 <__swbuf_r+0x84>
80000fa6:	47a9                	li	a5,10
80000fa8:	00f91663          	bne	s2,a5,80000fb4 <__swbuf_r+0x84>
80000fac:	85a2                	mv	a1,s0
80000fae:	8526                	mv	a0,s1
80000fb0:	2e35                	jal	800012ec <_fflush_r>
80000fb2:	ed0d                	bnez	a0,80000fec <__swbuf_r+0xbc>
80000fb4:	40f2                	lw	ra,28(sp)
80000fb6:	4462                	lw	s0,24(sp)
80000fb8:	44d2                	lw	s1,20(sp)
80000fba:	49b2                	lw	s3,12(sp)
80000fbc:	854a                	mv	a0,s2
80000fbe:	4942                	lw	s2,16(sp)
80000fc0:	6105                	addi	sp,sp,32
80000fc2:	8082                	ret
80000fc4:	00001797          	auipc	a5,0x1
80000fc8:	56078793          	addi	a5,a5,1376 # 80002524 <__sf_fake_stdout>
80000fcc:	00f41463          	bne	s0,a5,80000fd4 <__swbuf_r+0xa4>
80000fd0:	4480                	lw	s0,8(s1)
80000fd2:	b759                	j	80000f58 <__swbuf_r+0x28>
80000fd4:	00001797          	auipc	a5,0x1
80000fd8:	51078793          	addi	a5,a5,1296 # 800024e4 <__sf_fake_stderr>
80000fdc:	f6f41ee3          	bne	s0,a5,80000f58 <__swbuf_r+0x28>
80000fe0:	44c0                	lw	s0,12(s1)
80000fe2:	bf9d                	j	80000f58 <__swbuf_r+0x28>
80000fe4:	85a2                	mv	a1,s0
80000fe6:	8526                	mv	a0,s1
80000fe8:	2021                	jal	80000ff0 <__swsetup_r>
80000fea:	dd3d                	beqz	a0,80000f68 <__swbuf_r+0x38>
80000fec:	597d                	li	s2,-1
80000fee:	b7d9                	j	80000fb4 <__swbuf_r+0x84>

80000ff0 <__swsetup_r>:
__swsetup_r():
80000ff0:	1141                	addi	sp,sp,-16
80000ff2:	c422                	sw	s0,8(sp)
80000ff4:	c226                	sw	s1,4(sp)
80000ff6:	c04a                	sw	s2,0(sp)
80000ff8:	c606                	sw	ra,12(sp)
80000ffa:	8081a483          	lw	s1,-2040(gp) # 90000068 <_impure_ptr>
80000ffe:	892a                	mv	s2,a0
80001000:	842e                	mv	s0,a1
80001002:	c489                	beqz	s1,8000100c <__swsetup_r+0x1c>
80001004:	4c9c                	lw	a5,24(s1)
80001006:	e399                	bnez	a5,8000100c <__swsetup_r+0x1c>
80001008:	8526                	mv	a0,s1
8000100a:	2ef5                	jal	80001406 <__sinit>
8000100c:	00001797          	auipc	a5,0x1
80001010:	4f878793          	addi	a5,a5,1272 # 80002504 <__sf_fake_stdin>
80001014:	02f41763          	bne	s0,a5,80001042 <__swsetup_r+0x52>
80001018:	40c0                	lw	s0,4(s1)
8000101a:	00c41783          	lh	a5,12(s0)
8000101e:	01079713          	slli	a4,a5,0x10
80001022:	0087f693          	andi	a3,a5,8
80001026:	8341                	srli	a4,a4,0x10
80001028:	eaad                	bnez	a3,8000109a <__swsetup_r+0xaa>
8000102a:	01077693          	andi	a3,a4,16
8000102e:	ea95                	bnez	a3,80001062 <__swsetup_r+0x72>
80001030:	4725                	li	a4,9
80001032:	00e92023          	sw	a4,0(s2)
80001036:	0407e793          	ori	a5,a5,64
8000103a:	00f41623          	sh	a5,12(s0)
8000103e:	557d                	li	a0,-1
80001040:	a871                	j	800010dc <__swsetup_r+0xec>
80001042:	00001797          	auipc	a5,0x1
80001046:	4e278793          	addi	a5,a5,1250 # 80002524 <__sf_fake_stdout>
8000104a:	00f41463          	bne	s0,a5,80001052 <__swsetup_r+0x62>
8000104e:	4480                	lw	s0,8(s1)
80001050:	b7e9                	j	8000101a <__swsetup_r+0x2a>
80001052:	00001797          	auipc	a5,0x1
80001056:	49278793          	addi	a5,a5,1170 # 800024e4 <__sf_fake_stderr>
8000105a:	fcf410e3          	bne	s0,a5,8000101a <__swsetup_r+0x2a>
8000105e:	44c0                	lw	s0,12(s1)
80001060:	bf6d                	j	8000101a <__swsetup_r+0x2a>
80001062:	8b11                	andi	a4,a4,4
80001064:	c70d                	beqz	a4,8000108e <__swsetup_r+0x9e>
80001066:	584c                	lw	a1,52(s0)
80001068:	c989                	beqz	a1,8000107a <__swsetup_r+0x8a>
8000106a:	04440793          	addi	a5,s0,68
8000106e:	00f58463          	beq	a1,a5,80001076 <__swsetup_r+0x86>
80001072:	854a                	mv	a0,s2
80001074:	25e1                	jal	8000173c <_free_r>
80001076:	02042a23          	sw	zero,52(s0)
8000107a:	00c45783          	lhu	a5,12(s0)
8000107e:	00042223          	sw	zero,4(s0)
80001082:	fdb7f793          	andi	a5,a5,-37
80001086:	00f41623          	sh	a5,12(s0)
8000108a:	481c                	lw	a5,16(s0)
8000108c:	c01c                	sw	a5,0(s0)
8000108e:	00c45783          	lhu	a5,12(s0)
80001092:	0087e793          	ori	a5,a5,8
80001096:	00f41623          	sh	a5,12(s0)
8000109a:	481c                	lw	a5,16(s0)
8000109c:	ef81                	bnez	a5,800010b4 <__swsetup_r+0xc4>
8000109e:	00c45783          	lhu	a5,12(s0)
800010a2:	20000713          	li	a4,512
800010a6:	2807f793          	andi	a5,a5,640
800010aa:	00e78563          	beq	a5,a4,800010b4 <__swsetup_r+0xc4>
800010ae:	85a2                	mv	a1,s0
800010b0:	854a                	mv	a0,s2
800010b2:	2b35                	jal	800015ee <__smakebuf_r>
800010b4:	00c41783          	lh	a5,12(s0)
800010b8:	01079713          	slli	a4,a5,0x10
800010bc:	0017f693          	andi	a3,a5,1
800010c0:	8341                	srli	a4,a4,0x10
800010c2:	c29d                	beqz	a3,800010e8 <__swsetup_r+0xf8>
800010c4:	4854                	lw	a3,20(s0)
800010c6:	00042423          	sw	zero,8(s0)
800010ca:	40d006b3          	neg	a3,a3
800010ce:	cc14                	sw	a3,24(s0)
800010d0:	4814                	lw	a3,16(s0)
800010d2:	4501                	li	a0,0
800010d4:	e681                	bnez	a3,800010dc <__swsetup_r+0xec>
800010d6:	08077713          	andi	a4,a4,128
800010da:	ff31                	bnez	a4,80001036 <__swsetup_r+0x46>
800010dc:	40b2                	lw	ra,12(sp)
800010de:	4422                	lw	s0,8(sp)
800010e0:	4492                	lw	s1,4(sp)
800010e2:	4902                	lw	s2,0(sp)
800010e4:	0141                	addi	sp,sp,16
800010e6:	8082                	ret
800010e8:	00277693          	andi	a3,a4,2
800010ec:	4601                	li	a2,0
800010ee:	e291                	bnez	a3,800010f2 <__swsetup_r+0x102>
800010f0:	4850                	lw	a2,20(s0)
800010f2:	c410                	sw	a2,8(s0)
800010f4:	bff1                	j	800010d0 <__swsetup_r+0xe0>

800010f6 <__register_exitproc>:
__register_exitproc():
800010f6:	88aa                	mv	a7,a0
800010f8:	0ffff517          	auipc	a0,0xffff
800010fc:	f8050513          	addi	a0,a0,-128 # 90000078 <_global_atexit>
80001100:	411c                	lw	a5,0(a0)
80001102:	ef81                	bnez	a5,8000111a <__register_exitproc+0x24>
80001104:	96c18713          	addi	a4,gp,-1684 # 900001cc <_global_atexit0>
80001108:	c118                	sw	a4,0(a0)
8000110a:	00000513          	li	a0,0
8000110e:	87ba                	mv	a5,a4
80001110:	c509                	beqz	a0,8000111a <__register_exitproc+0x24>
80001112:	411c                	lw	a5,0(a0)
80001114:	08f72423          	sw	a5,136(a4)
80001118:	87ba                	mv	a5,a4
8000111a:	43d8                	lw	a4,4(a5)
8000111c:	487d                	li	a6,31
8000111e:	557d                	li	a0,-1
80001120:	04e84663          	blt	a6,a4,8000116c <__register_exitproc+0x76>
80001124:	02088d63          	beqz	a7,8000115e <__register_exitproc+0x68>
80001128:	0887a803          	lw	a6,136(a5)
8000112c:	04080063          	beqz	a6,8000116c <__register_exitproc+0x76>
80001130:	00271513          	slli	a0,a4,0x2
80001134:	9542                	add	a0,a0,a6
80001136:	c110                	sw	a2,0(a0)
80001138:	10082303          	lw	t1,256(a6)
8000113c:	4605                	li	a2,1
8000113e:	00e61633          	sll	a2,a2,a4
80001142:	00c36333          	or	t1,t1,a2
80001146:	10682023          	sw	t1,256(a6)
8000114a:	08d52023          	sw	a3,128(a0)
8000114e:	4689                	li	a3,2
80001150:	00d89763          	bne	a7,a3,8000115e <__register_exitproc+0x68>
80001154:	10482683          	lw	a3,260(a6)
80001158:	8e55                	or	a2,a2,a3
8000115a:	10c82223          	sw	a2,260(a6)
8000115e:	00170693          	addi	a3,a4,1
80001162:	070a                	slli	a4,a4,0x2
80001164:	c3d4                	sw	a3,4(a5)
80001166:	97ba                	add	a5,a5,a4
80001168:	c78c                	sw	a1,8(a5)
8000116a:	4501                	li	a0,0
8000116c:	8082                	ret

8000116e <__assert_func>:
__assert_func():
8000116e:	1141                	addi	sp,sp,-16
80001170:	8081a783          	lw	a5,-2040(gp) # 90000068 <_impure_ptr>
80001174:	8832                	mv	a6,a2
80001176:	c606                	sw	ra,12(sp)
80001178:	88aa                	mv	a7,a0
8000117a:	872e                	mv	a4,a1
8000117c:	47c8                	lw	a0,12(a5)
8000117e:	8636                	mv	a2,a3
80001180:	00001797          	auipc	a5,0x1
80001184:	32478793          	addi	a5,a5,804 # 800024a4 <__clz_tab+0x16c>
80001188:	00081763          	bnez	a6,80001196 <__assert_func+0x28>
8000118c:	00001797          	auipc	a5,0x1
80001190:	1a878793          	addi	a5,a5,424 # 80002334 <_getpid_r+0x116>
80001194:	883e                	mv	a6,a5
80001196:	86c6                	mv	a3,a7
80001198:	00001597          	auipc	a1,0x1
8000119c:	31c58593          	addi	a1,a1,796 # 800024b4 <__clz_tab+0x17c>
800011a0:	2695                	jal	80001504 <fiprintf>
800011a2:	6bb000ef          	jal	ra,8000205c <abort>

800011a6 <__sflush_r>:
__sflush_r():
800011a6:	00c5d783          	lhu	a5,12(a1)
800011aa:	1101                	addi	sp,sp,-32
800011ac:	cc22                	sw	s0,24(sp)
800011ae:	ca26                	sw	s1,20(sp)
800011b0:	ce06                	sw	ra,28(sp)
800011b2:	c84a                	sw	s2,16(sp)
800011b4:	c64e                	sw	s3,12(sp)
800011b6:	0087f713          	andi	a4,a5,8
800011ba:	84aa                	mv	s1,a0
800011bc:	842e                	mv	s0,a1
800011be:	e375                	bnez	a4,800012a2 <__sflush_r+0xfc>
800011c0:	41d8                	lw	a4,4(a1)
800011c2:	00e04763          	bgtz	a4,800011d0 <__sflush_r+0x2a>
800011c6:	41b8                	lw	a4,64(a1)
800011c8:	00e04463          	bgtz	a4,800011d0 <__sflush_r+0x2a>
800011cc:	4501                	li	a0,0
800011ce:	a875                	j	8000128a <__sflush_r+0xe4>
800011d0:	5458                	lw	a4,44(s0)
800011d2:	df6d                	beqz	a4,800011cc <__sflush_r+0x26>
800011d4:	6685                	lui	a3,0x1
800011d6:	0004a903          	lw	s2,0(s1)
800011da:	8ff5                	and	a5,a5,a3
800011dc:	0004a023          	sw	zero,0(s1)
800011e0:	cfa5                	beqz	a5,80001258 <__sflush_r+0xb2>
800011e2:	4868                	lw	a0,84(s0)
800011e4:	00c45783          	lhu	a5,12(s0)
800011e8:	8b91                	andi	a5,a5,4
800011ea:	c799                	beqz	a5,800011f8 <__sflush_r+0x52>
800011ec:	405c                	lw	a5,4(s0)
800011ee:	8d1d                	sub	a0,a0,a5
800011f0:	585c                	lw	a5,52(s0)
800011f2:	c399                	beqz	a5,800011f8 <__sflush_r+0x52>
800011f4:	403c                	lw	a5,64(s0)
800011f6:	8d1d                	sub	a0,a0,a5
800011f8:	545c                	lw	a5,44(s0)
800011fa:	500c                	lw	a1,32(s0)
800011fc:	862a                	mv	a2,a0
800011fe:	4681                	li	a3,0
80001200:	8526                	mv	a0,s1
80001202:	9782                	jalr	a5
80001204:	57fd                	li	a5,-1
80001206:	00c45703          	lhu	a4,12(s0)
8000120a:	00f51d63          	bne	a0,a5,80001224 <__sflush_r+0x7e>
8000120e:	4094                	lw	a3,0(s1)
80001210:	47f5                	li	a5,29
80001212:	08d7e363          	bltu	a5,a3,80001298 <__sflush_r+0xf2>
80001216:	204007b7          	lui	a5,0x20400
8000121a:	0785                	addi	a5,a5,1
8000121c:	00d7d7b3          	srl	a5,a5,a3
80001220:	8b85                	andi	a5,a5,1
80001222:	cbbd                	beqz	a5,80001298 <__sflush_r+0xf2>
80001224:	481c                	lw	a5,16(s0)
80001226:	00042223          	sw	zero,4(s0)
8000122a:	c01c                	sw	a5,0(s0)
8000122c:	6785                	lui	a5,0x1
8000122e:	8f7d                	and	a4,a4,a5
80001230:	c719                	beqz	a4,8000123e <__sflush_r+0x98>
80001232:	57fd                	li	a5,-1
80001234:	00f51463          	bne	a0,a5,8000123c <__sflush_r+0x96>
80001238:	409c                	lw	a5,0(s1)
8000123a:	e391                	bnez	a5,8000123e <__sflush_r+0x98>
8000123c:	c868                	sw	a0,84(s0)
8000123e:	584c                	lw	a1,52(s0)
80001240:	0124a023          	sw	s2,0(s1)
80001244:	d5c1                	beqz	a1,800011cc <__sflush_r+0x26>
80001246:	04440793          	addi	a5,s0,68
8000124a:	00f58463          	beq	a1,a5,80001252 <__sflush_r+0xac>
8000124e:	8526                	mv	a0,s1
80001250:	21f5                	jal	8000173c <_free_r>
80001252:	02042a23          	sw	zero,52(s0)
80001256:	bf9d                	j	800011cc <__sflush_r+0x26>
80001258:	500c                	lw	a1,32(s0)
8000125a:	4685                	li	a3,1
8000125c:	4601                	li	a2,0
8000125e:	8526                	mv	a0,s1
80001260:	9702                	jalr	a4
80001262:	57fd                	li	a5,-1
80001264:	f8f510e3          	bne	a0,a5,800011e4 <__sflush_r+0x3e>
80001268:	409c                	lw	a5,0(s1)
8000126a:	dfad                	beqz	a5,800011e4 <__sflush_r+0x3e>
8000126c:	4775                	li	a4,29
8000126e:	00e78563          	beq	a5,a4,80001278 <__sflush_r+0xd2>
80001272:	4759                	li	a4,22
80001274:	00e79563          	bne	a5,a4,8000127e <__sflush_r+0xd8>
80001278:	0124a023          	sw	s2,0(s1)
8000127c:	bf81                	j	800011cc <__sflush_r+0x26>
8000127e:	00c45783          	lhu	a5,12(s0)
80001282:	0407e793          	ori	a5,a5,64
80001286:	00f41623          	sh	a5,12(s0)
8000128a:	40f2                	lw	ra,28(sp)
8000128c:	4462                	lw	s0,24(sp)
8000128e:	44d2                	lw	s1,20(sp)
80001290:	4942                	lw	s2,16(sp)
80001292:	49b2                	lw	s3,12(sp)
80001294:	6105                	addi	sp,sp,32
80001296:	8082                	ret
80001298:	04076713          	ori	a4,a4,64
8000129c:	00e41623          	sh	a4,12(s0)
800012a0:	b7ed                	j	8000128a <__sflush_r+0xe4>
800012a2:	0105a983          	lw	s3,16(a1)
800012a6:	f20983e3          	beqz	s3,800011cc <__sflush_r+0x26>
800012aa:	0005a903          	lw	s2,0(a1)
800012ae:	8b8d                	andi	a5,a5,3
800012b0:	0135a023          	sw	s3,0(a1)
800012b4:	41390933          	sub	s2,s2,s3
800012b8:	4701                	li	a4,0
800012ba:	e391                	bnez	a5,800012be <__sflush_r+0x118>
800012bc:	49d8                	lw	a4,20(a1)
800012be:	c418                	sw	a4,8(s0)
800012c0:	f12056e3          	blez	s2,800011cc <__sflush_r+0x26>
800012c4:	541c                	lw	a5,40(s0)
800012c6:	500c                	lw	a1,32(s0)
800012c8:	86ca                	mv	a3,s2
800012ca:	864e                	mv	a2,s3
800012cc:	8526                	mv	a0,s1
800012ce:	9782                	jalr	a5
800012d0:	00a04a63          	bgtz	a0,800012e4 <__sflush_r+0x13e>
800012d4:	00c45783          	lhu	a5,12(s0)
800012d8:	557d                	li	a0,-1
800012da:	0407e793          	ori	a5,a5,64
800012de:	00f41623          	sh	a5,12(s0)
800012e2:	b765                	j	8000128a <__sflush_r+0xe4>
800012e4:	99aa                	add	s3,s3,a0
800012e6:	40a90933          	sub	s2,s2,a0
800012ea:	bfd9                	j	800012c0 <__sflush_r+0x11a>

800012ec <_fflush_r>:
_fflush_r():
800012ec:	499c                	lw	a5,16(a1)
800012ee:	cfb9                	beqz	a5,8000134c <_fflush_r+0x60>
800012f0:	1101                	addi	sp,sp,-32
800012f2:	cc22                	sw	s0,24(sp)
800012f4:	ce06                	sw	ra,28(sp)
800012f6:	842a                	mv	s0,a0
800012f8:	c511                	beqz	a0,80001304 <_fflush_r+0x18>
800012fa:	4d1c                	lw	a5,24(a0)
800012fc:	e781                	bnez	a5,80001304 <_fflush_r+0x18>
800012fe:	c62e                	sw	a1,12(sp)
80001300:	2219                	jal	80001406 <__sinit>
80001302:	45b2                	lw	a1,12(sp)
80001304:	00001797          	auipc	a5,0x1
80001308:	20078793          	addi	a5,a5,512 # 80002504 <__sf_fake_stdin>
8000130c:	00f59b63          	bne	a1,a5,80001322 <_fflush_r+0x36>
80001310:	404c                	lw	a1,4(s0)
80001312:	00c59783          	lh	a5,12(a1)
80001316:	c795                	beqz	a5,80001342 <_fflush_r+0x56>
80001318:	8522                	mv	a0,s0
8000131a:	4462                	lw	s0,24(sp)
8000131c:	40f2                	lw	ra,28(sp)
8000131e:	6105                	addi	sp,sp,32
80001320:	b559                	j	800011a6 <__sflush_r>
80001322:	00001797          	auipc	a5,0x1
80001326:	20278793          	addi	a5,a5,514 # 80002524 <__sf_fake_stdout>
8000132a:	00f59463          	bne	a1,a5,80001332 <_fflush_r+0x46>
8000132e:	440c                	lw	a1,8(s0)
80001330:	b7cd                	j	80001312 <_fflush_r+0x26>
80001332:	00001797          	auipc	a5,0x1
80001336:	1b278793          	addi	a5,a5,434 # 800024e4 <__sf_fake_stderr>
8000133a:	fcf59ce3          	bne	a1,a5,80001312 <_fflush_r+0x26>
8000133e:	444c                	lw	a1,12(s0)
80001340:	bfc9                	j	80001312 <_fflush_r+0x26>
80001342:	40f2                	lw	ra,28(sp)
80001344:	4462                	lw	s0,24(sp)
80001346:	4501                	li	a0,0
80001348:	6105                	addi	sp,sp,32
8000134a:	8082                	ret
8000134c:	4501                	li	a0,0
8000134e:	8082                	ret

80001350 <std>:
std():
80001350:	1141                	addi	sp,sp,-16
80001352:	c422                	sw	s0,8(sp)
80001354:	c606                	sw	ra,12(sp)
80001356:	842a                	mv	s0,a0
80001358:	00b51623          	sh	a1,12(a0)
8000135c:	00c51723          	sh	a2,14(a0)
80001360:	00052023          	sw	zero,0(a0)
80001364:	00052223          	sw	zero,4(a0)
80001368:	00052423          	sw	zero,8(a0)
8000136c:	06052223          	sw	zero,100(a0)
80001370:	00052823          	sw	zero,16(a0)
80001374:	00052a23          	sw	zero,20(a0)
80001378:	00052c23          	sw	zero,24(a0)
8000137c:	4621                	li	a2,8
8000137e:	4581                	li	a1,0
80001380:	05c50513          	addi	a0,a0,92
80001384:	2e01                	jal	80001694 <memset>
80001386:	00001797          	auipc	a5,0x1
8000138a:	be878793          	addi	a5,a5,-1048 # 80001f6e <__sread>
8000138e:	d05c                	sw	a5,36(s0)
80001390:	00001797          	auipc	a5,0x1
80001394:	c0e78793          	addi	a5,a5,-1010 # 80001f9e <__swrite>
80001398:	d41c                	sw	a5,40(s0)
8000139a:	00001797          	auipc	a5,0x1
8000139e:	c5278793          	addi	a5,a5,-942 # 80001fec <__sseek>
800013a2:	d45c                	sw	a5,44(s0)
800013a4:	00001797          	auipc	a5,0x1
800013a8:	c7e78793          	addi	a5,a5,-898 # 80002022 <__sclose>
800013ac:	40b2                	lw	ra,12(sp)
800013ae:	d000                	sw	s0,32(s0)
800013b0:	d81c                	sw	a5,48(s0)
800013b2:	4422                	lw	s0,8(sp)
800013b4:	0141                	addi	sp,sp,16
800013b6:	8082                	ret

800013b8 <_cleanup_r>:
_cleanup_r():
800013b8:	00000597          	auipc	a1,0x0
800013bc:	f3458593          	addi	a1,a1,-204 # 800012ec <_fflush_r>
800013c0:	a2a5                	j	80001528 <_fwalk_reent>

800013c2 <__sfmoreglue>:
__sfmoreglue():
800013c2:	1141                	addi	sp,sp,-16
800013c4:	c226                	sw	s1,4(sp)
800013c6:	06800613          	li	a2,104
800013ca:	fff58493          	addi	s1,a1,-1
800013ce:	02c484b3          	mul	s1,s1,a2
800013d2:	c04a                	sw	s2,0(sp)
800013d4:	892e                	mv	s2,a1
800013d6:	c422                	sw	s0,8(sp)
800013d8:	c606                	sw	ra,12(sp)
800013da:	07448593          	addi	a1,s1,116
800013de:	2111                	jal	800017e2 <_malloc_r>
800013e0:	842a                	mv	s0,a0
800013e2:	c919                	beqz	a0,800013f8 <__sfmoreglue+0x36>
800013e4:	00052023          	sw	zero,0(a0)
800013e8:	01252223          	sw	s2,4(a0)
800013ec:	0531                	addi	a0,a0,12
800013ee:	c408                	sw	a0,8(s0)
800013f0:	06848613          	addi	a2,s1,104
800013f4:	4581                	li	a1,0
800013f6:	2c79                	jal	80001694 <memset>
800013f8:	40b2                	lw	ra,12(sp)
800013fa:	8522                	mv	a0,s0
800013fc:	4422                	lw	s0,8(sp)
800013fe:	4492                	lw	s1,4(sp)
80001400:	4902                	lw	s2,0(sp)
80001402:	0141                	addi	sp,sp,16
80001404:	8082                	ret

80001406 <__sinit>:
__sinit():
80001406:	4d1c                	lw	a5,24(a0)
80001408:	e3ad                	bnez	a5,8000146a <__sinit+0x64>
8000140a:	1141                	addi	sp,sp,-16
8000140c:	c422                	sw	s0,8(sp)
8000140e:	c606                	sw	ra,12(sp)
80001410:	00000797          	auipc	a5,0x0
80001414:	fa878793          	addi	a5,a5,-88 # 800013b8 <_cleanup_r>
80001418:	d51c                	sw	a5,40(a0)
8000141a:	04052423          	sw	zero,72(a0)
8000141e:	04052623          	sw	zero,76(a0)
80001422:	04052823          	sw	zero,80(a0)
80001426:	8101a783          	lw	a5,-2032(gp) # 90000070 <_global_impure_ptr>
8000142a:	842a                	mv	s0,a0
8000142c:	00f51463          	bne	a0,a5,80001434 <__sinit+0x2e>
80001430:	4785                	li	a5,1
80001432:	cd1c                	sw	a5,24(a0)
80001434:	8522                	mv	a0,s0
80001436:	281d                	jal	8000146c <__sfp>
80001438:	c048                	sw	a0,4(s0)
8000143a:	8522                	mv	a0,s0
8000143c:	2805                	jal	8000146c <__sfp>
8000143e:	c408                	sw	a0,8(s0)
80001440:	8522                	mv	a0,s0
80001442:	202d                	jal	8000146c <__sfp>
80001444:	c448                	sw	a0,12(s0)
80001446:	4048                	lw	a0,4(s0)
80001448:	4601                	li	a2,0
8000144a:	4591                	li	a1,4
8000144c:	3711                	jal	80001350 <std>
8000144e:	4408                	lw	a0,8(s0)
80001450:	4605                	li	a2,1
80001452:	45a5                	li	a1,9
80001454:	3df5                	jal	80001350 <std>
80001456:	4448                	lw	a0,12(s0)
80001458:	4609                	li	a2,2
8000145a:	45c9                	li	a1,18
8000145c:	3dd5                	jal	80001350 <std>
8000145e:	4785                	li	a5,1
80001460:	40b2                	lw	ra,12(sp)
80001462:	cc1c                	sw	a5,24(s0)
80001464:	4422                	lw	s0,8(sp)
80001466:	0141                	addi	sp,sp,16
80001468:	8082                	ret
8000146a:	8082                	ret

8000146c <__sfp>:
__sfp():
8000146c:	1141                	addi	sp,sp,-16
8000146e:	c226                	sw	s1,4(sp)
80001470:	8101a483          	lw	s1,-2032(gp) # 90000070 <_global_impure_ptr>
80001474:	4c9c                	lw	a5,24(s1)
80001476:	c04a                	sw	s2,0(sp)
80001478:	c606                	sw	ra,12(sp)
8000147a:	c422                	sw	s0,8(sp)
8000147c:	892a                	mv	s2,a0
8000147e:	e399                	bnez	a5,80001484 <__sfp+0x18>
80001480:	8526                	mv	a0,s1
80001482:	3751                	jal	80001406 <__sinit>
80001484:	04848493          	addi	s1,s1,72
80001488:	4480                	lw	s0,8(s1)
8000148a:	40dc                	lw	a5,4(s1)
8000148c:	17fd                	addi	a5,a5,-1
8000148e:	0007d663          	bgez	a5,8000149a <__sfp+0x2e>
80001492:	409c                	lw	a5,0(s1)
80001494:	cfb1                	beqz	a5,800014f0 <__sfp+0x84>
80001496:	4084                	lw	s1,0(s1)
80001498:	bfc5                	j	80001488 <__sfp+0x1c>
8000149a:	00c41703          	lh	a4,12(s0)
8000149e:	e731                	bnez	a4,800014ea <__sfp+0x7e>
800014a0:	77c1                	lui	a5,0xffff0
800014a2:	0785                	addi	a5,a5,1
800014a4:	06042223          	sw	zero,100(s0)
800014a8:	00042023          	sw	zero,0(s0)
800014ac:	00042223          	sw	zero,4(s0)
800014b0:	00042423          	sw	zero,8(s0)
800014b4:	c45c                	sw	a5,12(s0)
800014b6:	00042823          	sw	zero,16(s0)
800014ba:	00042a23          	sw	zero,20(s0)
800014be:	00042c23          	sw	zero,24(s0)
800014c2:	4621                	li	a2,8
800014c4:	4581                	li	a1,0
800014c6:	05c40513          	addi	a0,s0,92
800014ca:	22e9                	jal	80001694 <memset>
800014cc:	02042a23          	sw	zero,52(s0)
800014d0:	02042c23          	sw	zero,56(s0)
800014d4:	04042423          	sw	zero,72(s0)
800014d8:	04042623          	sw	zero,76(s0)
800014dc:	40b2                	lw	ra,12(sp)
800014de:	8522                	mv	a0,s0
800014e0:	4422                	lw	s0,8(sp)
800014e2:	4492                	lw	s1,4(sp)
800014e4:	4902                	lw	s2,0(sp)
800014e6:	0141                	addi	sp,sp,16
800014e8:	8082                	ret
800014ea:	06840413          	addi	s0,s0,104
800014ee:	bf79                	j	8000148c <__sfp+0x20>
800014f0:	4591                	li	a1,4
800014f2:	854a                	mv	a0,s2
800014f4:	35f9                	jal	800013c2 <__sfmoreglue>
800014f6:	c088                	sw	a0,0(s1)
800014f8:	842a                	mv	s0,a0
800014fa:	fd51                	bnez	a0,80001496 <__sfp+0x2a>
800014fc:	47b1                	li	a5,12
800014fe:	00f92023          	sw	a5,0(s2)
80001502:	bfe9                	j	800014dc <__sfp+0x70>

80001504 <fiprintf>:
fprintf():
80001504:	7139                	addi	sp,sp,-64
80001506:	d432                	sw	a2,40(sp)
80001508:	d636                	sw	a3,44(sp)
8000150a:	862e                	mv	a2,a1
8000150c:	1034                	addi	a3,sp,40
8000150e:	85aa                	mv	a1,a0
80001510:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
80001514:	ce06                	sw	ra,28(sp)
80001516:	d83a                	sw	a4,48(sp)
80001518:	da3e                	sw	a5,52(sp)
8000151a:	dc42                	sw	a6,56(sp)
8000151c:	de46                	sw	a7,60(sp)
8000151e:	c636                	sw	a3,12(sp)
80001520:	2131                	jal	8000192c <_vfiprintf_r>
80001522:	40f2                	lw	ra,28(sp)
80001524:	6121                	addi	sp,sp,64
80001526:	8082                	ret

80001528 <_fwalk_reent>:
_fwalk_reent():
80001528:	7179                	addi	sp,sp,-48
8000152a:	d422                	sw	s0,40(sp)
8000152c:	d04a                	sw	s2,32(sp)
8000152e:	ce4e                	sw	s3,28(sp)
80001530:	cc52                	sw	s4,24(sp)
80001532:	c85a                	sw	s6,16(sp)
80001534:	c65e                	sw	s7,12(sp)
80001536:	d606                	sw	ra,44(sp)
80001538:	d226                	sw	s1,36(sp)
8000153a:	ca56                	sw	s5,20(sp)
8000153c:	892a                	mv	s2,a0
8000153e:	8a2e                	mv	s4,a1
80001540:	04850413          	addi	s0,a0,72
80001544:	4981                	li	s3,0
80001546:	4b05                	li	s6,1
80001548:	5bfd                	li	s7,-1
8000154a:	4404                	lw	s1,8(s0)
8000154c:	00442a83          	lw	s5,4(s0)
80001550:	1afd                	addi	s5,s5,-1
80001552:	020ad063          	bgez	s5,80001572 <_fwalk_reent+0x4a>
80001556:	4000                	lw	s0,0(s0)
80001558:	f86d                	bnez	s0,8000154a <_fwalk_reent+0x22>
8000155a:	50b2                	lw	ra,44(sp)
8000155c:	5422                	lw	s0,40(sp)
8000155e:	5492                	lw	s1,36(sp)
80001560:	5902                	lw	s2,32(sp)
80001562:	4a62                	lw	s4,24(sp)
80001564:	4ad2                	lw	s5,20(sp)
80001566:	4b42                	lw	s6,16(sp)
80001568:	4bb2                	lw	s7,12(sp)
8000156a:	854e                	mv	a0,s3
8000156c:	49f2                	lw	s3,28(sp)
8000156e:	6145                	addi	sp,sp,48
80001570:	8082                	ret
80001572:	00c4d783          	lhu	a5,12(s1)
80001576:	00fb7b63          	bgeu	s6,a5,8000158c <_fwalk_reent+0x64>
8000157a:	00e49783          	lh	a5,14(s1)
8000157e:	01778763          	beq	a5,s7,8000158c <_fwalk_reent+0x64>
80001582:	85a6                	mv	a1,s1
80001584:	854a                	mv	a0,s2
80001586:	9a02                	jalr	s4
80001588:	00a9e9b3          	or	s3,s3,a0
8000158c:	06848493          	addi	s1,s1,104
80001590:	b7c1                	j	80001550 <_fwalk_reent+0x28>

80001592 <__swhatbuf_r>:
__swhatbuf_r():
80001592:	7159                	addi	sp,sp,-112
80001594:	d0ca                	sw	s2,96(sp)
80001596:	892e                	mv	s2,a1
80001598:	00e59583          	lh	a1,14(a1)
8000159c:	d4a2                	sw	s0,104(sp)
8000159e:	d2a6                	sw	s1,100(sp)
800015a0:	d686                	sw	ra,108(sp)
800015a2:	8432                	mv	s0,a2
800015a4:	84b6                	mv	s1,a3
800015a6:	0005dc63          	bgez	a1,800015be <__swhatbuf_r+0x2c>
800015aa:	00c91783          	lh	a5,12(s2)
800015ae:	0004a023          	sw	zero,0(s1)
800015b2:	0807f793          	andi	a5,a5,128
800015b6:	e395                	bnez	a5,800015da <__swhatbuf_r+0x48>
800015b8:	40000793          	li	a5,1024
800015bc:	a00d                	j	800015de <__swhatbuf_r+0x4c>
800015be:	0030                	addi	a2,sp,8
800015c0:	2db000ef          	jal	ra,8000209a <_fstat_r>
800015c4:	fe0543e3          	bltz	a0,800015aa <__swhatbuf_r+0x18>
800015c8:	4732                	lw	a4,12(sp)
800015ca:	67bd                	lui	a5,0xf
800015cc:	8ff9                	and	a5,a5,a4
800015ce:	7779                	lui	a4,0xffffe
800015d0:	97ba                	add	a5,a5,a4
800015d2:	0017b793          	seqz	a5,a5
800015d6:	c09c                	sw	a5,0(s1)
800015d8:	b7c5                	j	800015b8 <__swhatbuf_r+0x26>
800015da:	04000793          	li	a5,64
800015de:	50b6                	lw	ra,108(sp)
800015e0:	c01c                	sw	a5,0(s0)
800015e2:	5426                	lw	s0,104(sp)
800015e4:	5496                	lw	s1,100(sp)
800015e6:	5906                	lw	s2,96(sp)
800015e8:	4501                	li	a0,0
800015ea:	6165                	addi	sp,sp,112
800015ec:	8082                	ret

800015ee <__smakebuf_r>:
__smakebuf_r():
800015ee:	00c5d783          	lhu	a5,12(a1)
800015f2:	1101                	addi	sp,sp,-32
800015f4:	cc22                	sw	s0,24(sp)
800015f6:	ce06                	sw	ra,28(sp)
800015f8:	ca26                	sw	s1,20(sp)
800015fa:	c84a                	sw	s2,16(sp)
800015fc:	8b89                	andi	a5,a5,2
800015fe:	842e                	mv	s0,a1
80001600:	cf89                	beqz	a5,8000161a <__smakebuf_r+0x2c>
80001602:	04740793          	addi	a5,s0,71
80001606:	c01c                	sw	a5,0(s0)
80001608:	c81c                	sw	a5,16(s0)
8000160a:	4785                	li	a5,1
8000160c:	c85c                	sw	a5,20(s0)
8000160e:	40f2                	lw	ra,28(sp)
80001610:	4462                	lw	s0,24(sp)
80001612:	44d2                	lw	s1,20(sp)
80001614:	4942                	lw	s2,16(sp)
80001616:	6105                	addi	sp,sp,32
80001618:	8082                	ret
8000161a:	0074                	addi	a3,sp,12
8000161c:	0030                	addi	a2,sp,8
8000161e:	892a                	mv	s2,a0
80001620:	3f8d                	jal	80001592 <__swhatbuf_r>
80001622:	45a2                	lw	a1,8(sp)
80001624:	84aa                	mv	s1,a0
80001626:	854a                	mv	a0,s2
80001628:	2a6d                	jal	800017e2 <_malloc_r>
8000162a:	ed01                	bnez	a0,80001642 <__smakebuf_r+0x54>
8000162c:	00c41783          	lh	a5,12(s0)
80001630:	2007f713          	andi	a4,a5,512
80001634:	ff69                	bnez	a4,8000160e <__smakebuf_r+0x20>
80001636:	9bf1                	andi	a5,a5,-4
80001638:	0027e793          	ori	a5,a5,2
8000163c:	00f41623          	sh	a5,12(s0)
80001640:	b7c9                	j	80001602 <__smakebuf_r+0x14>
80001642:	00000797          	auipc	a5,0x0
80001646:	d7678793          	addi	a5,a5,-650 # 800013b8 <_cleanup_r>
8000164a:	02f92423          	sw	a5,40(s2)
8000164e:	00c45783          	lhu	a5,12(s0)
80001652:	c008                	sw	a0,0(s0)
80001654:	c808                	sw	a0,16(s0)
80001656:	0807e793          	ori	a5,a5,128
8000165a:	00f41623          	sh	a5,12(s0)
8000165e:	47a2                	lw	a5,8(sp)
80001660:	c85c                	sw	a5,20(s0)
80001662:	47b2                	lw	a5,12(sp)
80001664:	cf91                	beqz	a5,80001680 <__smakebuf_r+0x92>
80001666:	00e41583          	lh	a1,14(s0)
8000166a:	854a                	mv	a0,s2
8000166c:	261000ef          	jal	ra,800020cc <_isatty_r>
80001670:	c901                	beqz	a0,80001680 <__smakebuf_r+0x92>
80001672:	00c45783          	lhu	a5,12(s0)
80001676:	9bf1                	andi	a5,a5,-4
80001678:	0017e793          	ori	a5,a5,1
8000167c:	00f41623          	sh	a5,12(s0)
80001680:	00c45503          	lhu	a0,12(s0)
80001684:	8cc9                	or	s1,s1,a0
80001686:	00941623          	sh	s1,12(s0)
8000168a:	b751                	j	8000160e <__smakebuf_r+0x20>

8000168c <malloc>:
malloc():
8000168c:	85aa                	mv	a1,a0
8000168e:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
80001692:	aa81                	j	800017e2 <_malloc_r>

80001694 <memset>:
memset():
80001694:	433d                	li	t1,15
80001696:	872a                	mv	a4,a0
80001698:	02c37363          	bgeu	t1,a2,800016be <memset+0x2a>
8000169c:	00f77793          	andi	a5,a4,15
800016a0:	efbd                	bnez	a5,8000171e <memset+0x8a>
800016a2:	e5ad                	bnez	a1,8000170c <memset+0x78>
800016a4:	ff067693          	andi	a3,a2,-16
800016a8:	8a3d                	andi	a2,a2,15
800016aa:	96ba                	add	a3,a3,a4
800016ac:	c30c                	sw	a1,0(a4)
800016ae:	c34c                	sw	a1,4(a4)
800016b0:	c70c                	sw	a1,8(a4)
800016b2:	c74c                	sw	a1,12(a4)
800016b4:	0741                	addi	a4,a4,16
800016b6:	fed76be3          	bltu	a4,a3,800016ac <memset+0x18>
800016ba:	e211                	bnez	a2,800016be <memset+0x2a>
800016bc:	8082                	ret
800016be:	40c306b3          	sub	a3,t1,a2
800016c2:	068a                	slli	a3,a3,0x2
800016c4:	00000297          	auipc	t0,0x0
800016c8:	9696                	add	a3,a3,t0
800016ca:	00a68067          	jr	10(a3) # 100a <__stack_size+0x80a>
800016ce:	00b70723          	sb	a1,14(a4) # ffffe00e <_sp+0x6ffee00e>
800016d2:	00b706a3          	sb	a1,13(a4)
800016d6:	00b70623          	sb	a1,12(a4)
800016da:	00b705a3          	sb	a1,11(a4)
800016de:	00b70523          	sb	a1,10(a4)
800016e2:	00b704a3          	sb	a1,9(a4)
800016e6:	00b70423          	sb	a1,8(a4)
800016ea:	00b703a3          	sb	a1,7(a4)
800016ee:	00b70323          	sb	a1,6(a4)
800016f2:	00b702a3          	sb	a1,5(a4)
800016f6:	00b70223          	sb	a1,4(a4)
800016fa:	00b701a3          	sb	a1,3(a4)
800016fe:	00b70123          	sb	a1,2(a4)
80001702:	00b700a3          	sb	a1,1(a4)
80001706:	00b70023          	sb	a1,0(a4)
8000170a:	8082                	ret
8000170c:	0ff5f593          	zext.b	a1,a1
80001710:	00859693          	slli	a3,a1,0x8
80001714:	8dd5                	or	a1,a1,a3
80001716:	01059693          	slli	a3,a1,0x10
8000171a:	8dd5                	or	a1,a1,a3
8000171c:	b761                	j	800016a4 <memset+0x10>
8000171e:	00279693          	slli	a3,a5,0x2
80001722:	00000297          	auipc	t0,0x0
80001726:	9696                	add	a3,a3,t0
80001728:	8286                	mv	t0,ra
8000172a:	fa8680e7          	jalr	-88(a3)
8000172e:	8096                	mv	ra,t0
80001730:	17c1                	addi	a5,a5,-16
80001732:	8f1d                	sub	a4,a4,a5
80001734:	963e                	add	a2,a2,a5
80001736:	f8c374e3          	bgeu	t1,a2,800016be <memset+0x2a>
8000173a:	b7a5                	j	800016a2 <memset+0xe>

8000173c <_free_r>:
_free_r():
8000173c:	c1d5                	beqz	a1,800017e0 <_free_r+0xa4>
8000173e:	ffc5a783          	lw	a5,-4(a1)
80001742:	1101                	addi	sp,sp,-32
80001744:	cc22                	sw	s0,24(sp)
80001746:	ce06                	sw	ra,28(sp)
80001748:	ffc58413          	addi	s0,a1,-4
8000174c:	0007d363          	bgez	a5,80001752 <_free_r+0x16>
80001750:	943e                	add	s0,s0,a5
80001752:	c62a                	sw	a0,12(sp)
80001754:	1f7000ef          	jal	ra,8000214a <__malloc_lock>
80001758:	0ffff717          	auipc	a4,0xffff
8000175c:	92470713          	addi	a4,a4,-1756 # 9000007c <__malloc_free_list>
80001760:	431c                	lw	a5,0(a4)
80001762:	4532                	lw	a0,12(sp)
80001764:	eb89                	bnez	a5,80001776 <_free_r+0x3a>
80001766:	00042223          	sw	zero,4(s0)
8000176a:	c300                	sw	s0,0(a4)
8000176c:	4462                	lw	s0,24(sp)
8000176e:	40f2                	lw	ra,28(sp)
80001770:	6105                	addi	sp,sp,32
80001772:	1db0006f          	j	8000214c <__malloc_unlock>
80001776:	00f47d63          	bgeu	s0,a5,80001790 <_free_r+0x54>
8000177a:	4010                	lw	a2,0(s0)
8000177c:	00c406b3          	add	a3,s0,a2
80001780:	00d79663          	bne	a5,a3,8000178c <_free_r+0x50>
80001784:	4394                	lw	a3,0(a5)
80001786:	43dc                	lw	a5,4(a5)
80001788:	96b2                	add	a3,a3,a2
8000178a:	c014                	sw	a3,0(s0)
8000178c:	c05c                	sw	a5,4(s0)
8000178e:	bff1                	j	8000176a <_free_r+0x2e>
80001790:	873e                	mv	a4,a5
80001792:	43dc                	lw	a5,4(a5)
80001794:	c399                	beqz	a5,8000179a <_free_r+0x5e>
80001796:	fef47de3          	bgeu	s0,a5,80001790 <_free_r+0x54>
8000179a:	4314                	lw	a3,0(a4)
8000179c:	00d70633          	add	a2,a4,a3
800017a0:	00861f63          	bne	a2,s0,800017be <_free_r+0x82>
800017a4:	4010                	lw	a2,0(s0)
800017a6:	96b2                	add	a3,a3,a2
800017a8:	c314                	sw	a3,0(a4)
800017aa:	00d70633          	add	a2,a4,a3
800017ae:	fac79fe3          	bne	a5,a2,8000176c <_free_r+0x30>
800017b2:	4390                	lw	a2,0(a5)
800017b4:	43dc                	lw	a5,4(a5)
800017b6:	96b2                	add	a3,a3,a2
800017b8:	c314                	sw	a3,0(a4)
800017ba:	c35c                	sw	a5,4(a4)
800017bc:	bf45                	j	8000176c <_free_r+0x30>
800017be:	00c47563          	bgeu	s0,a2,800017c8 <_free_r+0x8c>
800017c2:	47b1                	li	a5,12
800017c4:	c11c                	sw	a5,0(a0)
800017c6:	b75d                	j	8000176c <_free_r+0x30>
800017c8:	4010                	lw	a2,0(s0)
800017ca:	00c406b3          	add	a3,s0,a2
800017ce:	00d79663          	bne	a5,a3,800017da <_free_r+0x9e>
800017d2:	4394                	lw	a3,0(a5)
800017d4:	43dc                	lw	a5,4(a5)
800017d6:	96b2                	add	a3,a3,a2
800017d8:	c014                	sw	a3,0(s0)
800017da:	c05c                	sw	a5,4(s0)
800017dc:	c340                	sw	s0,4(a4)
800017de:	b779                	j	8000176c <_free_r+0x30>
800017e0:	8082                	ret

800017e2 <_malloc_r>:
_malloc_r():
800017e2:	1101                	addi	sp,sp,-32
800017e4:	ca26                	sw	s1,20(sp)
800017e6:	00358493          	addi	s1,a1,3
800017ea:	98f1                	andi	s1,s1,-4
800017ec:	c84a                	sw	s2,16(sp)
800017ee:	ce06                	sw	ra,28(sp)
800017f0:	cc22                	sw	s0,24(sp)
800017f2:	c64e                	sw	s3,12(sp)
800017f4:	04a1                	addi	s1,s1,8
800017f6:	47b1                	li	a5,12
800017f8:	892a                	mv	s2,a0
800017fa:	04f4f663          	bgeu	s1,a5,80001846 <_malloc_r+0x64>
800017fe:	44b1                	li	s1,12
80001800:	04b4e563          	bltu	s1,a1,8000184a <_malloc_r+0x68>
80001804:	854a                	mv	a0,s2
80001806:	145000ef          	jal	ra,8000214a <__malloc_lock>
8000180a:	0ffff697          	auipc	a3,0xffff
8000180e:	87268693          	addi	a3,a3,-1934 # 9000007c <__malloc_free_list>
80001812:	4298                	lw	a4,0(a3)
80001814:	843a                	mv	s0,a4
80001816:	e429                	bnez	s0,80001860 <_malloc_r+0x7e>
80001818:	0ffff417          	auipc	s0,0xffff
8000181c:	86840413          	addi	s0,s0,-1944 # 90000080 <__malloc_sbrk_start>
80001820:	401c                	lw	a5,0(s0)
80001822:	e789                	bnez	a5,8000182c <_malloc_r+0x4a>
80001824:	4581                	li	a1,0
80001826:	854a                	mv	a0,s2
80001828:	2f19                	jal	80001f3e <_sbrk_r>
8000182a:	c008                	sw	a0,0(s0)
8000182c:	85a6                	mv	a1,s1
8000182e:	854a                	mv	a0,s2
80001830:	2739                	jal	80001f3e <_sbrk_r>
80001832:	59fd                	li	s3,-1
80001834:	07351a63          	bne	a0,s3,800018a8 <_malloc_r+0xc6>
80001838:	47b1                	li	a5,12
8000183a:	00f92023          	sw	a5,0(s2)
8000183e:	854a                	mv	a0,s2
80001840:	10d000ef          	jal	ra,8000214c <__malloc_unlock>
80001844:	a031                	j	80001850 <_malloc_r+0x6e>
80001846:	fa04dde3          	bgez	s1,80001800 <_malloc_r+0x1e>
8000184a:	47b1                	li	a5,12
8000184c:	00f92023          	sw	a5,0(s2)
80001850:	4501                	li	a0,0
80001852:	40f2                	lw	ra,28(sp)
80001854:	4462                	lw	s0,24(sp)
80001856:	44d2                	lw	s1,20(sp)
80001858:	4942                	lw	s2,16(sp)
8000185a:	49b2                	lw	s3,12(sp)
8000185c:	6105                	addi	sp,sp,32
8000185e:	8082                	ret
80001860:	401c                	lw	a5,0(s0)
80001862:	8f85                	sub	a5,a5,s1
80001864:	0207cf63          	bltz	a5,800018a2 <_malloc_r+0xc0>
80001868:	462d                	li	a2,11
8000186a:	00f67663          	bgeu	a2,a5,80001876 <_malloc_r+0x94>
8000186e:	c01c                	sw	a5,0(s0)
80001870:	943e                	add	s0,s0,a5
80001872:	c004                	sw	s1,0(s0)
80001874:	a029                	j	8000187e <_malloc_r+0x9c>
80001876:	405c                	lw	a5,4(s0)
80001878:	02871363          	bne	a4,s0,8000189e <_malloc_r+0xbc>
8000187c:	c29c                	sw	a5,0(a3)
8000187e:	854a                	mv	a0,s2
80001880:	0cd000ef          	jal	ra,8000214c <__malloc_unlock>
80001884:	00b40513          	addi	a0,s0,11
80001888:	00440793          	addi	a5,s0,4
8000188c:	9961                	andi	a0,a0,-8
8000188e:	40f50733          	sub	a4,a0,a5
80001892:	fcf500e3          	beq	a0,a5,80001852 <_malloc_r+0x70>
80001896:	943a                	add	s0,s0,a4
80001898:	8f89                	sub	a5,a5,a0
8000189a:	c01c                	sw	a5,0(s0)
8000189c:	bf5d                	j	80001852 <_malloc_r+0x70>
8000189e:	c35c                	sw	a5,4(a4)
800018a0:	bff9                	j	8000187e <_malloc_r+0x9c>
800018a2:	8722                	mv	a4,s0
800018a4:	4040                	lw	s0,4(s0)
800018a6:	bf85                	j	80001816 <_malloc_r+0x34>
800018a8:	00350413          	addi	s0,a0,3
800018ac:	9871                	andi	s0,s0,-4
800018ae:	fc8502e3          	beq	a0,s0,80001872 <_malloc_r+0x90>
800018b2:	40a405b3          	sub	a1,s0,a0
800018b6:	854a                	mv	a0,s2
800018b8:	2559                	jal	80001f3e <_sbrk_r>
800018ba:	fb351ce3          	bne	a0,s3,80001872 <_malloc_r+0x90>
800018be:	bfad                	j	80001838 <_malloc_r+0x56>

800018c0 <__sfputc_r>:
__sfputc_r():
800018c0:	461c                	lw	a5,8(a2)
800018c2:	17fd                	addi	a5,a5,-1
800018c4:	c61c                	sw	a5,8(a2)
800018c6:	0007da63          	bgez	a5,800018da <__sfputc_r+0x1a>
800018ca:	4e18                	lw	a4,24(a2)
800018cc:	00e7c563          	blt	a5,a4,800018d6 <__sfputc_r+0x16>
800018d0:	47a9                	li	a5,10
800018d2:	00f59463          	bne	a1,a5,800018da <__sfputc_r+0x1a>
800018d6:	e5aff06f          	j	80000f30 <__swbuf_r>
800018da:	421c                	lw	a5,0(a2)
800018dc:	852e                	mv	a0,a1
800018de:	00178713          	addi	a4,a5,1
800018e2:	c218                	sw	a4,0(a2)
800018e4:	00b78023          	sb	a1,0(a5)
800018e8:	8082                	ret

800018ea <__sfputs_r>:
__sfputs_r():
800018ea:	1101                	addi	sp,sp,-32
800018ec:	cc22                	sw	s0,24(sp)
800018ee:	ca26                	sw	s1,20(sp)
800018f0:	c84a                	sw	s2,16(sp)
800018f2:	c64e                	sw	s3,12(sp)
800018f4:	c452                	sw	s4,8(sp)
800018f6:	ce06                	sw	ra,28(sp)
800018f8:	892a                	mv	s2,a0
800018fa:	89ae                	mv	s3,a1
800018fc:	8432                	mv	s0,a2
800018fe:	00d604b3          	add	s1,a2,a3
80001902:	5a7d                	li	s4,-1
80001904:	00941463          	bne	s0,s1,8000190c <__sfputs_r+0x22>
80001908:	4501                	li	a0,0
8000190a:	a809                	j	8000191c <__sfputs_r+0x32>
8000190c:	00044583          	lbu	a1,0(s0)
80001910:	864e                	mv	a2,s3
80001912:	854a                	mv	a0,s2
80001914:	3775                	jal	800018c0 <__sfputc_r>
80001916:	0405                	addi	s0,s0,1
80001918:	ff4516e3          	bne	a0,s4,80001904 <__sfputs_r+0x1a>
8000191c:	40f2                	lw	ra,28(sp)
8000191e:	4462                	lw	s0,24(sp)
80001920:	44d2                	lw	s1,20(sp)
80001922:	4942                	lw	s2,16(sp)
80001924:	49b2                	lw	s3,12(sp)
80001926:	4a22                	lw	s4,8(sp)
80001928:	6105                	addi	sp,sp,32
8000192a:	8082                	ret

8000192c <_vfiprintf_r>:
_vfiprintf_r():
8000192c:	7135                	addi	sp,sp,-160
8000192e:	cd22                	sw	s0,152(sp)
80001930:	cb26                	sw	s1,148(sp)
80001932:	c94a                	sw	s2,144(sp)
80001934:	c74e                	sw	s3,140(sp)
80001936:	cf06                	sw	ra,156(sp)
80001938:	c552                	sw	s4,136(sp)
8000193a:	c356                	sw	s5,132(sp)
8000193c:	c15a                	sw	s6,128(sp)
8000193e:	dede                	sw	s7,124(sp)
80001940:	dce2                	sw	s8,120(sp)
80001942:	dae6                	sw	s9,116(sp)
80001944:	89aa                	mv	s3,a0
80001946:	84ae                	mv	s1,a1
80001948:	8932                	mv	s2,a2
8000194a:	8436                	mv	s0,a3
8000194c:	c501                	beqz	a0,80001954 <_vfiprintf_r+0x28>
8000194e:	4d1c                	lw	a5,24(a0)
80001950:	e391                	bnez	a5,80001954 <_vfiprintf_r+0x28>
80001952:	3c55                	jal	80001406 <__sinit>
80001954:	00001797          	auipc	a5,0x1
80001958:	bb078793          	addi	a5,a5,-1104 # 80002504 <__sf_fake_stdin>
8000195c:	0cf49c63          	bne	s1,a5,80001a34 <_vfiprintf_r+0x108>
80001960:	0049a483          	lw	s1,4(s3)
80001964:	00c4d783          	lhu	a5,12(s1)
80001968:	8ba1                	andi	a5,a5,8
8000196a:	c7fd                	beqz	a5,80001a58 <_vfiprintf_r+0x12c>
8000196c:	489c                	lw	a5,16(s1)
8000196e:	c7ed                	beqz	a5,80001a58 <_vfiprintf_r+0x12c>
80001970:	02000793          	li	a5,32
80001974:	02f104a3          	sb	a5,41(sp)
80001978:	03000793          	li	a5,48
8000197c:	d202                	sw	zero,36(sp)
8000197e:	02f10523          	sb	a5,42(sp)
80001982:	c622                	sw	s0,12(sp)
80001984:	02500b93          	li	s7,37
80001988:	00001a97          	auipc	s5,0x1
8000198c:	bbca8a93          	addi	s5,s5,-1092 # 80002544 <__sf_fake_stdout+0x20>
80001990:	4c05                	li	s8,1
80001992:	4b29                	li	s6,10
80001994:	844a                	mv	s0,s2
80001996:	00044783          	lbu	a5,0(s0)
8000199a:	c399                	beqz	a5,800019a0 <_vfiprintf_r+0x74>
8000199c:	0f779163          	bne	a5,s7,80001a7e <_vfiprintf_r+0x152>
800019a0:	41240cb3          	sub	s9,s0,s2
800019a4:	01240d63          	beq	s0,s2,800019be <_vfiprintf_r+0x92>
800019a8:	86e6                	mv	a3,s9
800019aa:	864a                	mv	a2,s2
800019ac:	85a6                	mv	a1,s1
800019ae:	854e                	mv	a0,s3
800019b0:	3f2d                	jal	800018ea <__sfputs_r>
800019b2:	57fd                	li	a5,-1
800019b4:	1ef50563          	beq	a0,a5,80001b9e <_vfiprintf_r+0x272>
800019b8:	5792                	lw	a5,36(sp)
800019ba:	97e6                	add	a5,a5,s9
800019bc:	d23e                	sw	a5,36(sp)
800019be:	00044783          	lbu	a5,0(s0)
800019c2:	1c078e63          	beqz	a5,80001b9e <_vfiprintf_r+0x272>
800019c6:	57fd                	li	a5,-1
800019c8:	00140913          	addi	s2,s0,1
800019cc:	c802                	sw	zero,16(sp)
800019ce:	ce02                	sw	zero,28(sp)
800019d0:	ca3e                	sw	a5,20(sp)
800019d2:	cc02                	sw	zero,24(sp)
800019d4:	040109a3          	sb	zero,83(sp)
800019d8:	d482                	sw	zero,104(sp)
800019da:	00094583          	lbu	a1,0(s2)
800019de:	4615                	li	a2,5
800019e0:	8556                	mv	a0,s5
800019e2:	74e000ef          	jal	ra,80002130 <memchr>
800019e6:	47c2                	lw	a5,16(sp)
800019e8:	00190413          	addi	s0,s2,1
800019ec:	e959                	bnez	a0,80001a82 <_vfiprintf_r+0x156>
800019ee:	0107f713          	andi	a4,a5,16
800019f2:	c709                	beqz	a4,800019fc <_vfiprintf_r+0xd0>
800019f4:	02000713          	li	a4,32
800019f8:	04e109a3          	sb	a4,83(sp)
800019fc:	0087f713          	andi	a4,a5,8
80001a00:	c709                	beqz	a4,80001a0a <_vfiprintf_r+0xde>
80001a02:	02b00713          	li	a4,43
80001a06:	04e109a3          	sb	a4,83(sp)
80001a0a:	00094683          	lbu	a3,0(s2)
80001a0e:	02a00713          	li	a4,42
80001a12:	08e68063          	beq	a3,a4,80001a92 <_vfiprintf_r+0x166>
80001a16:	47f2                	lw	a5,28(sp)
80001a18:	844a                	mv	s0,s2
80001a1a:	4681                	li	a3,0
80001a1c:	4625                	li	a2,9
80001a1e:	00044703          	lbu	a4,0(s0)
80001a22:	00140593          	addi	a1,s0,1
80001a26:	fd070713          	addi	a4,a4,-48
80001a2a:	0ae67963          	bgeu	a2,a4,80001adc <_vfiprintf_r+0x1b0>
80001a2e:	cab5                	beqz	a3,80001aa2 <_vfiprintf_r+0x176>
80001a30:	ce3e                	sw	a5,28(sp)
80001a32:	a885                	j	80001aa2 <_vfiprintf_r+0x176>
80001a34:	00001797          	auipc	a5,0x1
80001a38:	af078793          	addi	a5,a5,-1296 # 80002524 <__sf_fake_stdout>
80001a3c:	00f49563          	bne	s1,a5,80001a46 <_vfiprintf_r+0x11a>
80001a40:	0089a483          	lw	s1,8(s3)
80001a44:	b705                	j	80001964 <_vfiprintf_r+0x38>
80001a46:	00001797          	auipc	a5,0x1
80001a4a:	a9e78793          	addi	a5,a5,-1378 # 800024e4 <__sf_fake_stderr>
80001a4e:	f0f49be3          	bne	s1,a5,80001964 <_vfiprintf_r+0x38>
80001a52:	00c9a483          	lw	s1,12(s3)
80001a56:	b739                	j	80001964 <_vfiprintf_r+0x38>
80001a58:	85a6                	mv	a1,s1
80001a5a:	854e                	mv	a0,s3
80001a5c:	d94ff0ef          	jal	ra,80000ff0 <__swsetup_r>
80001a60:	d901                	beqz	a0,80001970 <_vfiprintf_r+0x44>
80001a62:	557d                	li	a0,-1
80001a64:	40fa                	lw	ra,156(sp)
80001a66:	446a                	lw	s0,152(sp)
80001a68:	44da                	lw	s1,148(sp)
80001a6a:	494a                	lw	s2,144(sp)
80001a6c:	49ba                	lw	s3,140(sp)
80001a6e:	4a2a                	lw	s4,136(sp)
80001a70:	4a9a                	lw	s5,132(sp)
80001a72:	4b0a                	lw	s6,128(sp)
80001a74:	5bf6                	lw	s7,124(sp)
80001a76:	5c66                	lw	s8,120(sp)
80001a78:	5cd6                	lw	s9,116(sp)
80001a7a:	610d                	addi	sp,sp,160
80001a7c:	8082                	ret
80001a7e:	0405                	addi	s0,s0,1
80001a80:	bf19                	j	80001996 <_vfiprintf_r+0x6a>
80001a82:	41550533          	sub	a0,a0,s5
80001a86:	00ac1533          	sll	a0,s8,a0
80001a8a:	8fc9                	or	a5,a5,a0
80001a8c:	c83e                	sw	a5,16(sp)
80001a8e:	8922                	mv	s2,s0
80001a90:	b7a9                	j	800019da <_vfiprintf_r+0xae>
80001a92:	4732                	lw	a4,12(sp)
80001a94:	00470693          	addi	a3,a4,4
80001a98:	4318                	lw	a4,0(a4)
80001a9a:	c636                	sw	a3,12(sp)
80001a9c:	02074963          	bltz	a4,80001ace <_vfiprintf_r+0x1a2>
80001aa0:	ce3a                	sw	a4,28(sp)
80001aa2:	00044703          	lbu	a4,0(s0)
80001aa6:	02e00793          	li	a5,46
80001aaa:	04f71f63          	bne	a4,a5,80001b08 <_vfiprintf_r+0x1dc>
80001aae:	00144703          	lbu	a4,1(s0)
80001ab2:	02a00793          	li	a5,42
80001ab6:	02f71b63          	bne	a4,a5,80001aec <_vfiprintf_r+0x1c0>
80001aba:	47b2                	lw	a5,12(sp)
80001abc:	0409                	addi	s0,s0,2
80001abe:	00478713          	addi	a4,a5,4
80001ac2:	439c                	lw	a5,0(a5)
80001ac4:	c63a                	sw	a4,12(sp)
80001ac6:	0207c163          	bltz	a5,80001ae8 <_vfiprintf_r+0x1bc>
80001aca:	ca3e                	sw	a5,20(sp)
80001acc:	a835                	j	80001b08 <_vfiprintf_r+0x1dc>
80001ace:	40e00733          	neg	a4,a4
80001ad2:	0027e793          	ori	a5,a5,2
80001ad6:	ce3a                	sw	a4,28(sp)
80001ad8:	c83e                	sw	a5,16(sp)
80001ada:	b7e1                	j	80001aa2 <_vfiprintf_r+0x176>
80001adc:	036787b3          	mul	a5,a5,s6
80001ae0:	842e                	mv	s0,a1
80001ae2:	4685                	li	a3,1
80001ae4:	97ba                	add	a5,a5,a4
80001ae6:	bf25                	j	80001a1e <_vfiprintf_r+0xf2>
80001ae8:	57fd                	li	a5,-1
80001aea:	b7c5                	j	80001aca <_vfiprintf_r+0x19e>
80001aec:	0405                	addi	s0,s0,1
80001aee:	ca02                	sw	zero,20(sp)
80001af0:	4681                	li	a3,0
80001af2:	4781                	li	a5,0
80001af4:	4625                	li	a2,9
80001af6:	00044703          	lbu	a4,0(s0)
80001afa:	00140593          	addi	a1,s0,1
80001afe:	fd070713          	addi	a4,a4,-48
80001b02:	06e67463          	bgeu	a2,a4,80001b6a <_vfiprintf_r+0x23e>
80001b06:	f2f1                	bnez	a3,80001aca <_vfiprintf_r+0x19e>
80001b08:	00044583          	lbu	a1,0(s0)
80001b0c:	460d                	li	a2,3
80001b0e:	00001517          	auipc	a0,0x1
80001b12:	a3e50513          	addi	a0,a0,-1474 # 8000254c <__sf_fake_stdout+0x28>
80001b16:	2d29                	jal	80002130 <memchr>
80001b18:	cd11                	beqz	a0,80001b34 <_vfiprintf_r+0x208>
80001b1a:	00001797          	auipc	a5,0x1
80001b1e:	a3278793          	addi	a5,a5,-1486 # 8000254c <__sf_fake_stdout+0x28>
80001b22:	8d1d                	sub	a0,a0,a5
80001b24:	04000793          	li	a5,64
80001b28:	00a797b3          	sll	a5,a5,a0
80001b2c:	4542                	lw	a0,16(sp)
80001b2e:	0405                	addi	s0,s0,1
80001b30:	8d5d                	or	a0,a0,a5
80001b32:	c82a                	sw	a0,16(sp)
80001b34:	00044583          	lbu	a1,0(s0)
80001b38:	4619                	li	a2,6
80001b3a:	00001517          	auipc	a0,0x1
80001b3e:	a1650513          	addi	a0,a0,-1514 # 80002550 <__sf_fake_stdout+0x2c>
80001b42:	00140913          	addi	s2,s0,1
80001b46:	02b10423          	sb	a1,40(sp)
80001b4a:	23dd                	jal	80002130 <memchr>
80001b4c:	c12d                	beqz	a0,80001bae <_vfiprintf_r+0x282>
80001b4e:	00000793          	li	a5,0
80001b52:	e795                	bnez	a5,80001b7e <_vfiprintf_r+0x252>
80001b54:	4742                	lw	a4,16(sp)
80001b56:	47b2                	lw	a5,12(sp)
80001b58:	10077713          	andi	a4,a4,256
80001b5c:	cf09                	beqz	a4,80001b76 <_vfiprintf_r+0x24a>
80001b5e:	0791                	addi	a5,a5,4
80001b60:	c63e                	sw	a5,12(sp)
80001b62:	5792                	lw	a5,36(sp)
80001b64:	97d2                	add	a5,a5,s4
80001b66:	d23e                	sw	a5,36(sp)
80001b68:	b535                	j	80001994 <_vfiprintf_r+0x68>
80001b6a:	036787b3          	mul	a5,a5,s6
80001b6e:	842e                	mv	s0,a1
80001b70:	4685                	li	a3,1
80001b72:	97ba                	add	a5,a5,a4
80001b74:	b749                	j	80001af6 <_vfiprintf_r+0x1ca>
80001b76:	079d                	addi	a5,a5,7
80001b78:	9be1                	andi	a5,a5,-8
80001b7a:	07a1                	addi	a5,a5,8
80001b7c:	b7d5                	j	80001b60 <_vfiprintf_r+0x234>
80001b7e:	0078                	addi	a4,sp,12
80001b80:	00000697          	auipc	a3,0x0
80001b84:	d6a68693          	addi	a3,a3,-662 # 800018ea <__sfputs_r>
80001b88:	8626                	mv	a2,s1
80001b8a:	080c                	addi	a1,sp,16
80001b8c:	854e                	mv	a0,s3
80001b8e:	00000097          	auipc	ra,0x0
80001b92:	000000e7          	jalr	zero # 0 <__stack_size-0x800>
80001b96:	57fd                	li	a5,-1
80001b98:	8a2a                	mv	s4,a0
80001b9a:	fcf514e3          	bne	a0,a5,80001b62 <_vfiprintf_r+0x236>
80001b9e:	00c4d783          	lhu	a5,12(s1)
80001ba2:	0407f793          	andi	a5,a5,64
80001ba6:	ea079ee3          	bnez	a5,80001a62 <_vfiprintf_r+0x136>
80001baa:	5512                	lw	a0,36(sp)
80001bac:	bd65                	j	80001a64 <_vfiprintf_r+0x138>
80001bae:	0078                	addi	a4,sp,12
80001bb0:	00000697          	auipc	a3,0x0
80001bb4:	d3a68693          	addi	a3,a3,-710 # 800018ea <__sfputs_r>
80001bb8:	8626                	mv	a2,s1
80001bba:	080c                	addi	a1,sp,16
80001bbc:	854e                	mv	a0,s3
80001bbe:	2a01                	jal	80001cce <_printf_i>
80001bc0:	bfd9                	j	80001b96 <_vfiprintf_r+0x26a>

80001bc2 <_printf_common>:
_printf_common():
80001bc2:	7179                	addi	sp,sp,-48
80001bc4:	cc52                	sw	s4,24(sp)
80001bc6:	499c                	lw	a5,16(a1)
80001bc8:	8a3a                	mv	s4,a4
80001bca:	4598                	lw	a4,8(a1)
80001bcc:	d422                	sw	s0,40(sp)
80001bce:	d226                	sw	s1,36(sp)
80001bd0:	ce4e                	sw	s3,28(sp)
80001bd2:	ca56                	sw	s5,20(sp)
80001bd4:	d606                	sw	ra,44(sp)
80001bd6:	d04a                	sw	s2,32(sp)
80001bd8:	c85a                	sw	s6,16(sp)
80001bda:	c65e                	sw	s7,12(sp)
80001bdc:	89aa                	mv	s3,a0
80001bde:	842e                	mv	s0,a1
80001be0:	84b2                	mv	s1,a2
80001be2:	8ab6                	mv	s5,a3
80001be4:	00e7d363          	bge	a5,a4,80001bea <_printf_common+0x28>
80001be8:	87ba                	mv	a5,a4
80001bea:	c09c                	sw	a5,0(s1)
80001bec:	04344703          	lbu	a4,67(s0)
80001bf0:	c319                	beqz	a4,80001bf6 <_printf_common+0x34>
80001bf2:	0785                	addi	a5,a5,1
80001bf4:	c09c                	sw	a5,0(s1)
80001bf6:	401c                	lw	a5,0(s0)
80001bf8:	0207f793          	andi	a5,a5,32
80001bfc:	c781                	beqz	a5,80001c04 <_printf_common+0x42>
80001bfe:	409c                	lw	a5,0(s1)
80001c00:	0789                	addi	a5,a5,2
80001c02:	c09c                	sw	a5,0(s1)
80001c04:	00042903          	lw	s2,0(s0)
80001c08:	00697913          	andi	s2,s2,6
80001c0c:	00091a63          	bnez	s2,80001c20 <_printf_common+0x5e>
80001c10:	01940b13          	addi	s6,s0,25
80001c14:	5bfd                	li	s7,-1
80001c16:	445c                	lw	a5,12(s0)
80001c18:	4098                	lw	a4,0(s1)
80001c1a:	8f99                	sub	a5,a5,a4
80001c1c:	04f94c63          	blt	s2,a5,80001c74 <_printf_common+0xb2>
80001c20:	04344783          	lbu	a5,67(s0)
80001c24:	00f036b3          	snez	a3,a5
80001c28:	401c                	lw	a5,0(s0)
80001c2a:	0207f793          	andi	a5,a5,32
80001c2e:	eba5                	bnez	a5,80001c9e <_printf_common+0xdc>
80001c30:	04340613          	addi	a2,s0,67
80001c34:	85d6                	mv	a1,s5
80001c36:	854e                	mv	a0,s3
80001c38:	9a02                	jalr	s4
80001c3a:	57fd                	li	a5,-1
80001c3c:	04f50363          	beq	a0,a5,80001c82 <_printf_common+0xc0>
80001c40:	401c                	lw	a5,0(s0)
80001c42:	4611                	li	a2,4
80001c44:	4098                	lw	a4,0(s1)
80001c46:	8b99                	andi	a5,a5,6
80001c48:	4454                	lw	a3,12(s0)
80001c4a:	4481                	li	s1,0
80001c4c:	00c79763          	bne	a5,a2,80001c5a <_printf_common+0x98>
80001c50:	40e684b3          	sub	s1,a3,a4
80001c54:	0004d363          	bgez	s1,80001c5a <_printf_common+0x98>
80001c58:	4481                	li	s1,0
80001c5a:	441c                	lw	a5,8(s0)
80001c5c:	4818                	lw	a4,16(s0)
80001c5e:	00f75463          	bge	a4,a5,80001c66 <_printf_common+0xa4>
80001c62:	8f99                	sub	a5,a5,a4
80001c64:	94be                	add	s1,s1,a5
80001c66:	4901                	li	s2,0
80001c68:	0469                	addi	s0,s0,26
80001c6a:	5b7d                	li	s6,-1
80001c6c:	05249863          	bne	s1,s2,80001cbc <_printf_common+0xfa>
80001c70:	4501                	li	a0,0
80001c72:	a809                	j	80001c84 <_printf_common+0xc2>
80001c74:	4685                	li	a3,1
80001c76:	865a                	mv	a2,s6
80001c78:	85d6                	mv	a1,s5
80001c7a:	854e                	mv	a0,s3
80001c7c:	9a02                	jalr	s4
80001c7e:	01751e63          	bne	a0,s7,80001c9a <_printf_common+0xd8>
80001c82:	557d                	li	a0,-1
80001c84:	50b2                	lw	ra,44(sp)
80001c86:	5422                	lw	s0,40(sp)
80001c88:	5492                	lw	s1,36(sp)
80001c8a:	5902                	lw	s2,32(sp)
80001c8c:	49f2                	lw	s3,28(sp)
80001c8e:	4a62                	lw	s4,24(sp)
80001c90:	4ad2                	lw	s5,20(sp)
80001c92:	4b42                	lw	s6,16(sp)
80001c94:	4bb2                	lw	s7,12(sp)
80001c96:	6145                	addi	sp,sp,48
80001c98:	8082                	ret
80001c9a:	0905                	addi	s2,s2,1
80001c9c:	bfad                	j	80001c16 <_printf_common+0x54>
80001c9e:	00d40733          	add	a4,s0,a3
80001ca2:	03000613          	li	a2,48
80001ca6:	04c701a3          	sb	a2,67(a4)
80001caa:	04544703          	lbu	a4,69(s0)
80001cae:	00168793          	addi	a5,a3,1
80001cb2:	97a2                	add	a5,a5,s0
80001cb4:	0689                	addi	a3,a3,2
80001cb6:	04e781a3          	sb	a4,67(a5)
80001cba:	bf9d                	j	80001c30 <_printf_common+0x6e>
80001cbc:	4685                	li	a3,1
80001cbe:	8622                	mv	a2,s0
80001cc0:	85d6                	mv	a1,s5
80001cc2:	854e                	mv	a0,s3
80001cc4:	9a02                	jalr	s4
80001cc6:	fb650ee3          	beq	a0,s6,80001c82 <_printf_common+0xc0>
80001cca:	0905                	addi	s2,s2,1
80001ccc:	b745                	j	80001c6c <_printf_common+0xaa>

80001cce <_printf_i>:
_printf_i():
80001cce:	7179                	addi	sp,sp,-48
80001cd0:	d422                	sw	s0,40(sp)
80001cd2:	d226                	sw	s1,36(sp)
80001cd4:	d04a                	sw	s2,32(sp)
80001cd6:	ce4e                	sw	s3,28(sp)
80001cd8:	d606                	sw	ra,44(sp)
80001cda:	cc52                	sw	s4,24(sp)
80001cdc:	ca56                	sw	s5,20(sp)
80001cde:	c85a                	sw	s6,16(sp)
80001ce0:	0185c803          	lbu	a6,24(a1)
80001ce4:	07800793          	li	a5,120
80001ce8:	84aa                	mv	s1,a0
80001cea:	842e                	mv	s0,a1
80001cec:	8932                	mv	s2,a2
80001cee:	89b6                	mv	s3,a3
80001cf0:	0107ee63          	bltu	a5,a6,80001d0c <_printf_i+0x3e>
80001cf4:	06200793          	li	a5,98
80001cf8:	04358693          	addi	a3,a1,67
80001cfc:	0107ed63          	bltu	a5,a6,80001d16 <_printf_i+0x48>
80001d00:	1c080563          	beqz	a6,80001eca <_printf_i+0x1fc>
80001d04:	05800793          	li	a5,88
80001d08:	12f80a63          	beq	a6,a5,80001e3c <_printf_i+0x16e>
80001d0c:	04240a93          	addi	s5,s0,66
80001d10:	05040123          	sb	a6,66(s0)
80001d14:	a815                	j	80001d48 <_printf_i+0x7a>
80001d16:	f9d80793          	addi	a5,a6,-99
80001d1a:	0ff7f793          	zext.b	a5,a5
80001d1e:	4655                	li	a2,21
80001d20:	fef666e3          	bltu	a2,a5,80001d0c <_printf_i+0x3e>
80001d24:	00001617          	auipc	a2,0x1
80001d28:	85c60613          	addi	a2,a2,-1956 # 80002580 <__sf_fake_stdout+0x5c>
80001d2c:	078a                	slli	a5,a5,0x2
80001d2e:	97b2                	add	a5,a5,a2
80001d30:	439c                	lw	a5,0(a5)
80001d32:	97b2                	add	a5,a5,a2
80001d34:	8782                	jr	a5
80001d36:	431c                	lw	a5,0(a4)
80001d38:	04258a93          	addi	s5,a1,66
80001d3c:	00478693          	addi	a3,a5,4
80001d40:	439c                	lw	a5,0(a5)
80001d42:	c314                	sw	a3,0(a4)
80001d44:	04f58123          	sb	a5,66(a1)
80001d48:	4785                	li	a5,1
80001d4a:	a25d                	j	80001ef0 <_printf_i+0x222>
80001d4c:	419c                	lw	a5,0(a1)
80001d4e:	4308                	lw	a0,0(a4)
80001d50:	0807f613          	andi	a2,a5,128
80001d54:	00450593          	addi	a1,a0,4
80001d58:	c20d                	beqz	a2,80001d7a <_printf_i+0xac>
80001d5a:	411c                	lw	a5,0(a0)
80001d5c:	c30c                	sw	a1,0(a4)
80001d5e:	0007d863          	bgez	a5,80001d6e <_printf_i+0xa0>
80001d62:	02d00713          	li	a4,45
80001d66:	40f007b3          	neg	a5,a5
80001d6a:	04e401a3          	sb	a4,67(s0)
80001d6e:	00000617          	auipc	a2,0x0
80001d72:	7ea60613          	addi	a2,a2,2026 # 80002558 <__sf_fake_stdout+0x34>
80001d76:	4829                	li	a6,10
80001d78:	a0a1                	j	80001dc0 <_printf_i+0xf2>
80001d7a:	0407f613          	andi	a2,a5,64
80001d7e:	411c                	lw	a5,0(a0)
80001d80:	c30c                	sw	a1,0(a4)
80001d82:	de71                	beqz	a2,80001d5e <_printf_i+0x90>
80001d84:	07c2                	slli	a5,a5,0x10
80001d86:	87c1                	srai	a5,a5,0x10
80001d88:	bfd9                	j	80001d5e <_printf_i+0x90>
80001d8a:	4190                	lw	a2,0(a1)
80001d8c:	431c                	lw	a5,0(a4)
80001d8e:	08067513          	andi	a0,a2,128
80001d92:	00478593          	addi	a1,a5,4
80001d96:	c501                	beqz	a0,80001d9e <_printf_i+0xd0>
80001d98:	c30c                	sw	a1,0(a4)
80001d9a:	439c                	lw	a5,0(a5)
80001d9c:	a039                	j	80001daa <_printf_i+0xdc>
80001d9e:	04067613          	andi	a2,a2,64
80001da2:	c30c                	sw	a1,0(a4)
80001da4:	da7d                	beqz	a2,80001d9a <_printf_i+0xcc>
80001da6:	0007d783          	lhu	a5,0(a5)
80001daa:	06f00713          	li	a4,111
80001dae:	00000617          	auipc	a2,0x0
80001db2:	7aa60613          	addi	a2,a2,1962 # 80002558 <__sf_fake_stdout+0x34>
80001db6:	0ee80463          	beq	a6,a4,80001e9e <_printf_i+0x1d0>
80001dba:	4829                	li	a6,10
80001dbc:	040401a3          	sb	zero,67(s0)
80001dc0:	4058                	lw	a4,4(s0)
80001dc2:	c418                	sw	a4,8(s0)
80001dc4:	00074563          	bltz	a4,80001dce <_printf_i+0x100>
80001dc8:	400c                	lw	a1,0(s0)
80001dca:	99ed                	andi	a1,a1,-5
80001dcc:	c00c                	sw	a1,0(s0)
80001dce:	e399                	bnez	a5,80001dd4 <_printf_i+0x106>
80001dd0:	8ab6                	mv	s5,a3
80001dd2:	cf19                	beqz	a4,80001df0 <_printf_i+0x122>
80001dd4:	8ab6                	mv	s5,a3
80001dd6:	0307f733          	remu	a4,a5,a6
80001dda:	1afd                	addi	s5,s5,-1
80001ddc:	9732                	add	a4,a4,a2
80001dde:	00074703          	lbu	a4,0(a4)
80001de2:	00ea8023          	sb	a4,0(s5)
80001de6:	873e                	mv	a4,a5
80001de8:	0307d7b3          	divu	a5,a5,a6
80001dec:	ff0775e3          	bgeu	a4,a6,80001dd6 <_printf_i+0x108>
80001df0:	47a1                	li	a5,8
80001df2:	00f81e63          	bne	a6,a5,80001e0e <_printf_i+0x140>
80001df6:	401c                	lw	a5,0(s0)
80001df8:	8b85                	andi	a5,a5,1
80001dfa:	cb91                	beqz	a5,80001e0e <_printf_i+0x140>
80001dfc:	4058                	lw	a4,4(s0)
80001dfe:	481c                	lw	a5,16(s0)
80001e00:	00e7c763          	blt	a5,a4,80001e0e <_printf_i+0x140>
80001e04:	03000793          	li	a5,48
80001e08:	fefa8fa3          	sb	a5,-1(s5)
80001e0c:	1afd                	addi	s5,s5,-1
80001e0e:	415686b3          	sub	a3,a3,s5
80001e12:	c814                	sw	a3,16(s0)
80001e14:	874e                	mv	a4,s3
80001e16:	86ca                	mv	a3,s2
80001e18:	0070                	addi	a2,sp,12
80001e1a:	85a2                	mv	a1,s0
80001e1c:	8526                	mv	a0,s1
80001e1e:	3355                	jal	80001bc2 <_printf_common>
80001e20:	5a7d                	li	s4,-1
80001e22:	0d451b63          	bne	a0,s4,80001ef8 <_printf_i+0x22a>
80001e26:	557d                	li	a0,-1
80001e28:	50b2                	lw	ra,44(sp)
80001e2a:	5422                	lw	s0,40(sp)
80001e2c:	5492                	lw	s1,36(sp)
80001e2e:	5902                	lw	s2,32(sp)
80001e30:	49f2                	lw	s3,28(sp)
80001e32:	4a62                	lw	s4,24(sp)
80001e34:	4ad2                	lw	s5,20(sp)
80001e36:	4b42                	lw	s6,16(sp)
80001e38:	6145                	addi	sp,sp,48
80001e3a:	8082                	ret
80001e3c:	050582a3          	sb	a6,69(a1)
80001e40:	00000617          	auipc	a2,0x0
80001e44:	71860613          	addi	a2,a2,1816 # 80002558 <__sf_fake_stdout+0x34>
80001e48:	400c                	lw	a1,0(s0)
80001e4a:	4308                	lw	a0,0(a4)
80001e4c:	0805f813          	andi	a6,a1,128
80001e50:	411c                	lw	a5,0(a0)
80001e52:	0511                	addi	a0,a0,4
80001e54:	02080d63          	beqz	a6,80001e8e <_printf_i+0x1c0>
80001e58:	c308                	sw	a0,0(a4)
80001e5a:	0015f713          	andi	a4,a1,1
80001e5e:	c701                	beqz	a4,80001e66 <_printf_i+0x198>
80001e60:	0205e593          	ori	a1,a1,32
80001e64:	c00c                	sw	a1,0(s0)
80001e66:	4841                	li	a6,16
80001e68:	fbb1                	bnez	a5,80001dbc <_printf_i+0xee>
80001e6a:	4018                	lw	a4,0(s0)
80001e6c:	fdf77713          	andi	a4,a4,-33
80001e70:	c018                	sw	a4,0(s0)
80001e72:	b7a9                	j	80001dbc <_printf_i+0xee>
80001e74:	419c                	lw	a5,0(a1)
80001e76:	0207e793          	ori	a5,a5,32
80001e7a:	c19c                	sw	a5,0(a1)
80001e7c:	07800793          	li	a5,120
80001e80:	04f402a3          	sb	a5,69(s0)
80001e84:	00000617          	auipc	a2,0x0
80001e88:	6e860613          	addi	a2,a2,1768 # 8000256c <__sf_fake_stdout+0x48>
80001e8c:	bf75                	j	80001e48 <_printf_i+0x17a>
80001e8e:	0405f813          	andi	a6,a1,64
80001e92:	c308                	sw	a0,0(a4)
80001e94:	fc0803e3          	beqz	a6,80001e5a <_printf_i+0x18c>
80001e98:	07c2                	slli	a5,a5,0x10
80001e9a:	83c1                	srli	a5,a5,0x10
80001e9c:	bf7d                	j	80001e5a <_printf_i+0x18c>
80001e9e:	4821                	li	a6,8
80001ea0:	bf31                	j	80001dbc <_printf_i+0xee>
80001ea2:	4190                	lw	a2,0(a1)
80001ea4:	431c                	lw	a5,0(a4)
80001ea6:	49cc                	lw	a1,20(a1)
80001ea8:	08067813          	andi	a6,a2,128
80001eac:	00478513          	addi	a0,a5,4
80001eb0:	00080663          	beqz	a6,80001ebc <_printf_i+0x1ee>
80001eb4:	c308                	sw	a0,0(a4)
80001eb6:	439c                	lw	a5,0(a5)
80001eb8:	c38c                	sw	a1,0(a5)
80001eba:	a801                	j	80001eca <_printf_i+0x1fc>
80001ebc:	c308                	sw	a0,0(a4)
80001ebe:	04067613          	andi	a2,a2,64
80001ec2:	439c                	lw	a5,0(a5)
80001ec4:	da75                	beqz	a2,80001eb8 <_printf_i+0x1ea>
80001ec6:	00b79023          	sh	a1,0(a5)
80001eca:	00042823          	sw	zero,16(s0)
80001ece:	8ab6                	mv	s5,a3
80001ed0:	b791                	j	80001e14 <_printf_i+0x146>
80001ed2:	431c                	lw	a5,0(a4)
80001ed4:	41d0                	lw	a2,4(a1)
80001ed6:	4581                	li	a1,0
80001ed8:	00478693          	addi	a3,a5,4
80001edc:	c314                	sw	a3,0(a4)
80001ede:	0007aa83          	lw	s5,0(a5)
80001ee2:	8556                	mv	a0,s5
80001ee4:	24b1                	jal	80002130 <memchr>
80001ee6:	c501                	beqz	a0,80001eee <_printf_i+0x220>
80001ee8:	41550533          	sub	a0,a0,s5
80001eec:	c048                	sw	a0,4(s0)
80001eee:	405c                	lw	a5,4(s0)
80001ef0:	c81c                	sw	a5,16(s0)
80001ef2:	040401a3          	sb	zero,67(s0)
80001ef6:	bf39                	j	80001e14 <_printf_i+0x146>
80001ef8:	4814                	lw	a3,16(s0)
80001efa:	8656                	mv	a2,s5
80001efc:	85ca                	mv	a1,s2
80001efe:	8526                	mv	a0,s1
80001f00:	9982                	jalr	s3
80001f02:	f34502e3          	beq	a0,s4,80001e26 <_printf_i+0x158>
80001f06:	401c                	lw	a5,0(s0)
80001f08:	8b89                	andi	a5,a5,2
80001f0a:	e78d                	bnez	a5,80001f34 <_printf_i+0x266>
80001f0c:	47b2                	lw	a5,12(sp)
80001f0e:	4448                	lw	a0,12(s0)
80001f10:	f0f55ce3          	bge	a0,a5,80001e28 <_printf_i+0x15a>
80001f14:	853e                	mv	a0,a5
80001f16:	bf09                	j	80001e28 <_printf_i+0x15a>
80001f18:	4685                	li	a3,1
80001f1a:	8656                	mv	a2,s5
80001f1c:	85ca                	mv	a1,s2
80001f1e:	8526                	mv	a0,s1
80001f20:	9982                	jalr	s3
80001f22:	f16502e3          	beq	a0,s6,80001e26 <_printf_i+0x158>
80001f26:	0a05                	addi	s4,s4,1
80001f28:	445c                	lw	a5,12(s0)
80001f2a:	4732                	lw	a4,12(sp)
80001f2c:	8f99                	sub	a5,a5,a4
80001f2e:	fefa45e3          	blt	s4,a5,80001f18 <_printf_i+0x24a>
80001f32:	bfe9                	j	80001f0c <_printf_i+0x23e>
80001f34:	4a01                	li	s4,0
80001f36:	01940a93          	addi	s5,s0,25
80001f3a:	5b7d                	li	s6,-1
80001f3c:	b7f5                	j	80001f28 <_printf_i+0x25a>

80001f3e <_sbrk_r>:
_sbrk_r():
80001f3e:	1141                	addi	sp,sp,-16
80001f40:	c422                	sw	s0,8(sp)
80001f42:	842a                	mv	s0,a0
80001f44:	852e                	mv	a0,a1
80001f46:	0fffe797          	auipc	a5,0xfffe
80001f4a:	1207a723          	sw	zero,302(a5) # 90000074 <errno>
80001f4e:	c606                	sw	ra,12(sp)
80001f50:	a96fe0ef          	jal	ra,800001e6 <_sbrk>
80001f54:	57fd                	li	a5,-1
80001f56:	00f51863          	bne	a0,a5,80001f66 <_sbrk_r+0x28>
80001f5a:	0fffe797          	auipc	a5,0xfffe
80001f5e:	11a7a783          	lw	a5,282(a5) # 90000074 <errno>
80001f62:	c391                	beqz	a5,80001f66 <_sbrk_r+0x28>
80001f64:	c01c                	sw	a5,0(s0)
80001f66:	40b2                	lw	ra,12(sp)
80001f68:	4422                	lw	s0,8(sp)
80001f6a:	0141                	addi	sp,sp,16
80001f6c:	8082                	ret

80001f6e <__sread>:
__sread():
80001f6e:	1141                	addi	sp,sp,-16
80001f70:	c422                	sw	s0,8(sp)
80001f72:	842e                	mv	s0,a1
80001f74:	00e59583          	lh	a1,14(a1)
80001f78:	c606                	sw	ra,12(sp)
80001f7a:	2ad1                	jal	8000214e <_read_r>
80001f7c:	00054963          	bltz	a0,80001f8e <__sread+0x20>
80001f80:	487c                	lw	a5,84(s0)
80001f82:	97aa                	add	a5,a5,a0
80001f84:	c87c                	sw	a5,84(s0)
80001f86:	40b2                	lw	ra,12(sp)
80001f88:	4422                	lw	s0,8(sp)
80001f8a:	0141                	addi	sp,sp,16
80001f8c:	8082                	ret
80001f8e:	00c45783          	lhu	a5,12(s0)
80001f92:	777d                	lui	a4,0xfffff
80001f94:	177d                	addi	a4,a4,-1
80001f96:	8ff9                	and	a5,a5,a4
80001f98:	00f41623          	sh	a5,12(s0)
80001f9c:	b7ed                	j	80001f86 <__sread+0x18>

80001f9e <__swrite>:
__swrite():
80001f9e:	00c5d783          	lhu	a5,12(a1)
80001fa2:	1101                	addi	sp,sp,-32
80001fa4:	cc22                	sw	s0,24(sp)
80001fa6:	ca26                	sw	s1,20(sp)
80001fa8:	c84a                	sw	s2,16(sp)
80001faa:	c64e                	sw	s3,12(sp)
80001fac:	ce06                	sw	ra,28(sp)
80001fae:	1007f793          	andi	a5,a5,256
80001fb2:	84aa                	mv	s1,a0
80001fb4:	842e                	mv	s0,a1
80001fb6:	8932                	mv	s2,a2
80001fb8:	89b6                	mv	s3,a3
80001fba:	c791                	beqz	a5,80001fc6 <__swrite+0x28>
80001fbc:	00e59583          	lh	a1,14(a1)
80001fc0:	4689                	li	a3,2
80001fc2:	4601                	li	a2,0
80001fc4:	2a25                	jal	800020fc <_lseek_r>
80001fc6:	00c45783          	lhu	a5,12(s0)
80001fca:	777d                	lui	a4,0xfffff
80001fcc:	177d                	addi	a4,a4,-1
80001fce:	8ff9                	and	a5,a5,a4
80001fd0:	00e41583          	lh	a1,14(s0)
80001fd4:	00f41623          	sh	a5,12(s0)
80001fd8:	4462                	lw	s0,24(sp)
80001fda:	40f2                	lw	ra,28(sp)
80001fdc:	86ce                	mv	a3,s3
80001fde:	864a                	mv	a2,s2
80001fe0:	49b2                	lw	s3,12(sp)
80001fe2:	4942                	lw	s2,16(sp)
80001fe4:	8526                	mv	a0,s1
80001fe6:	44d2                	lw	s1,20(sp)
80001fe8:	6105                	addi	sp,sp,32
80001fea:	a83d                	j	80002028 <_write_r>

80001fec <__sseek>:
__sseek():
80001fec:	1141                	addi	sp,sp,-16
80001fee:	c422                	sw	s0,8(sp)
80001ff0:	842e                	mv	s0,a1
80001ff2:	00e59583          	lh	a1,14(a1)
80001ff6:	c606                	sw	ra,12(sp)
80001ff8:	2211                	jal	800020fc <_lseek_r>
80001ffa:	57fd                	li	a5,-1
80001ffc:	00c45703          	lhu	a4,12(s0)
80002000:	00f51b63          	bne	a0,a5,80002016 <__sseek+0x2a>
80002004:	77fd                	lui	a5,0xfffff
80002006:	17fd                	addi	a5,a5,-1
80002008:	8ff9                	and	a5,a5,a4
8000200a:	00f41623          	sh	a5,12(s0)
8000200e:	40b2                	lw	ra,12(sp)
80002010:	4422                	lw	s0,8(sp)
80002012:	0141                	addi	sp,sp,16
80002014:	8082                	ret
80002016:	6785                	lui	a5,0x1
80002018:	8fd9                	or	a5,a5,a4
8000201a:	00f41623          	sh	a5,12(s0)
8000201e:	c868                	sw	a0,84(s0)
80002020:	b7fd                	j	8000200e <__sseek+0x22>

80002022 <__sclose>:
__sclose():
80002022:	00e59583          	lh	a1,14(a1)
80002026:	a091                	j	8000206a <_close_r>

80002028 <_write_r>:
_write_r():
80002028:	1141                	addi	sp,sp,-16
8000202a:	c422                	sw	s0,8(sp)
8000202c:	842a                	mv	s0,a0
8000202e:	852e                	mv	a0,a1
80002030:	85b2                	mv	a1,a2
80002032:	8636                	mv	a2,a3
80002034:	0fffe797          	auipc	a5,0xfffe
80002038:	0407a023          	sw	zero,64(a5) # 90000074 <errno>
8000203c:	c606                	sw	ra,12(sp)
8000203e:	9d4fe0ef          	jal	ra,80000212 <_write>
80002042:	57fd                	li	a5,-1
80002044:	00f51863          	bne	a0,a5,80002054 <_write_r+0x2c>
80002048:	0fffe797          	auipc	a5,0xfffe
8000204c:	02c7a783          	lw	a5,44(a5) # 90000074 <errno>
80002050:	c391                	beqz	a5,80002054 <_write_r+0x2c>
80002052:	c01c                	sw	a5,0(s0)
80002054:	40b2                	lw	ra,12(sp)
80002056:	4422                	lw	s0,8(sp)
80002058:	0141                	addi	sp,sp,16
8000205a:	8082                	ret

8000205c <abort>:
abort():
8000205c:	1141                	addi	sp,sp,-16
8000205e:	4519                	li	a0,6
80002060:	c606                	sw	ra,12(sp)
80002062:	2249                	jal	800021e4 <raise>
80002064:	4505                	li	a0,1
80002066:	920fe0ef          	jal	ra,80000186 <_exit>

8000206a <_close_r>:
_close_r():
8000206a:	1141                	addi	sp,sp,-16
8000206c:	c422                	sw	s0,8(sp)
8000206e:	842a                	mv	s0,a0
80002070:	852e                	mv	a0,a1
80002072:	0fffe797          	auipc	a5,0xfffe
80002076:	0007a123          	sw	zero,2(a5) # 90000074 <errno>
8000207a:	c606                	sw	ra,12(sp)
8000207c:	8fcfe0ef          	jal	ra,80000178 <_close>
80002080:	57fd                	li	a5,-1
80002082:	00f51863          	bne	a0,a5,80002092 <_close_r+0x28>
80002086:	0fffe797          	auipc	a5,0xfffe
8000208a:	fee7a783          	lw	a5,-18(a5) # 90000074 <errno>
8000208e:	c391                	beqz	a5,80002092 <_close_r+0x28>
80002090:	c01c                	sw	a5,0(s0)
80002092:	40b2                	lw	ra,12(sp)
80002094:	4422                	lw	s0,8(sp)
80002096:	0141                	addi	sp,sp,16
80002098:	8082                	ret

8000209a <_fstat_r>:
_fstat_r():
8000209a:	1141                	addi	sp,sp,-16
8000209c:	c422                	sw	s0,8(sp)
8000209e:	842a                	mv	s0,a0
800020a0:	852e                	mv	a0,a1
800020a2:	85b2                	mv	a1,a2
800020a4:	0fffe797          	auipc	a5,0xfffe
800020a8:	fc07a823          	sw	zero,-48(a5) # 90000074 <errno>
800020ac:	c606                	sw	ra,12(sp)
800020ae:	8defe0ef          	jal	ra,8000018c <_fstat>
800020b2:	57fd                	li	a5,-1
800020b4:	00f51863          	bne	a0,a5,800020c4 <_fstat_r+0x2a>
800020b8:	0fffe797          	auipc	a5,0xfffe
800020bc:	fbc7a783          	lw	a5,-68(a5) # 90000074 <errno>
800020c0:	c391                	beqz	a5,800020c4 <_fstat_r+0x2a>
800020c2:	c01c                	sw	a5,0(s0)
800020c4:	40b2                	lw	ra,12(sp)
800020c6:	4422                	lw	s0,8(sp)
800020c8:	0141                	addi	sp,sp,16
800020ca:	8082                	ret

800020cc <_isatty_r>:
_isatty_r():
800020cc:	1141                	addi	sp,sp,-16
800020ce:	c422                	sw	s0,8(sp)
800020d0:	842a                	mv	s0,a0
800020d2:	852e                	mv	a0,a1
800020d4:	0fffe797          	auipc	a5,0xfffe
800020d8:	fa07a023          	sw	zero,-96(a5) # 90000074 <errno>
800020dc:	c606                	sw	ra,12(sp)
800020de:	8d0fe0ef          	jal	ra,800001ae <_isatty>
800020e2:	57fd                	li	a5,-1
800020e4:	00f51863          	bne	a0,a5,800020f4 <_isatty_r+0x28>
800020e8:	0fffe797          	auipc	a5,0xfffe
800020ec:	f8c7a783          	lw	a5,-116(a5) # 90000074 <errno>
800020f0:	c391                	beqz	a5,800020f4 <_isatty_r+0x28>
800020f2:	c01c                	sw	a5,0(s0)
800020f4:	40b2                	lw	ra,12(sp)
800020f6:	4422                	lw	s0,8(sp)
800020f8:	0141                	addi	sp,sp,16
800020fa:	8082                	ret

800020fc <_lseek_r>:
_lseek_r():
800020fc:	1141                	addi	sp,sp,-16
800020fe:	c422                	sw	s0,8(sp)
80002100:	842a                	mv	s0,a0
80002102:	852e                	mv	a0,a1
80002104:	85b2                	mv	a1,a2
80002106:	8636                	mv	a2,a3
80002108:	0fffe797          	auipc	a5,0xfffe
8000210c:	f607a623          	sw	zero,-148(a5) # 90000074 <errno>
80002110:	c606                	sw	ra,12(sp)
80002112:	8aefe0ef          	jal	ra,800001c0 <_lseek>
80002116:	57fd                	li	a5,-1
80002118:	00f51863          	bne	a0,a5,80002128 <_lseek_r+0x2c>
8000211c:	0fffe797          	auipc	a5,0xfffe
80002120:	f587a783          	lw	a5,-168(a5) # 90000074 <errno>
80002124:	c391                	beqz	a5,80002128 <_lseek_r+0x2c>
80002126:	c01c                	sw	a5,0(s0)
80002128:	40b2                	lw	ra,12(sp)
8000212a:	4422                	lw	s0,8(sp)
8000212c:	0141                	addi	sp,sp,16
8000212e:	8082                	ret

80002130 <memchr>:
memchr():
80002130:	0ff5f593          	zext.b	a1,a1
80002134:	962a                	add	a2,a2,a0
80002136:	00c51463          	bne	a0,a2,8000213e <memchr+0xe>
8000213a:	4501                	li	a0,0
8000213c:	8082                	ret
8000213e:	00054783          	lbu	a5,0(a0)
80002142:	feb78de3          	beq	a5,a1,8000213c <memchr+0xc>
80002146:	0505                	addi	a0,a0,1
80002148:	b7fd                	j	80002136 <memchr+0x6>

8000214a <__malloc_lock>:
__malloc_lock():
8000214a:	8082                	ret

8000214c <__malloc_unlock>:
__malloc_unlock():
8000214c:	8082                	ret

8000214e <_read_r>:
_read_r():
8000214e:	1141                	addi	sp,sp,-16
80002150:	c422                	sw	s0,8(sp)
80002152:	842a                	mv	s0,a0
80002154:	852e                	mv	a0,a1
80002156:	85b2                	mv	a1,a2
80002158:	8636                	mv	a2,a3
8000215a:	0fffe797          	auipc	a5,0xfffe
8000215e:	f007ad23          	sw	zero,-230(a5) # 90000074 <errno>
80002162:	c606                	sw	ra,12(sp)
80002164:	860fe0ef          	jal	ra,800001c4 <_read>
80002168:	57fd                	li	a5,-1
8000216a:	00f51863          	bne	a0,a5,8000217a <_read_r+0x2c>
8000216e:	0fffe797          	auipc	a5,0xfffe
80002172:	f067a783          	lw	a5,-250(a5) # 90000074 <errno>
80002176:	c391                	beqz	a5,8000217a <_read_r+0x2c>
80002178:	c01c                	sw	a5,0(s0)
8000217a:	40b2                	lw	ra,12(sp)
8000217c:	4422                	lw	s0,8(sp)
8000217e:	0141                	addi	sp,sp,16
80002180:	8082                	ret

80002182 <_raise_r>:
_raise_r():
80002182:	1101                	addi	sp,sp,-32
80002184:	cc22                	sw	s0,24(sp)
80002186:	ce06                	sw	ra,28(sp)
80002188:	47fd                	li	a5,31
8000218a:	842a                	mv	s0,a0
8000218c:	00b7f963          	bgeu	a5,a1,8000219e <_raise_r+0x1c>
80002190:	47d9                	li	a5,22
80002192:	c11c                	sw	a5,0(a0)
80002194:	557d                	li	a0,-1
80002196:	40f2                	lw	ra,28(sp)
80002198:	4462                	lw	s0,24(sp)
8000219a:	6105                	addi	sp,sp,32
8000219c:	8082                	ret
8000219e:	417c                	lw	a5,68(a0)
800021a0:	862e                	mv	a2,a1
800021a2:	c791                	beqz	a5,800021ae <_raise_r+0x2c>
800021a4:	00259713          	slli	a4,a1,0x2
800021a8:	97ba                	add	a5,a5,a4
800021aa:	4398                	lw	a4,0(a5)
800021ac:	eb19                	bnez	a4,800021c2 <_raise_r+0x40>
800021ae:	8522                	mv	a0,s0
800021b0:	c632                	sw	a2,12(sp)
800021b2:	20b5                	jal	8000221e <_getpid_r>
800021b4:	85aa                	mv	a1,a0
800021b6:	8522                	mv	a0,s0
800021b8:	4462                	lw	s0,24(sp)
800021ba:	4632                	lw	a2,12(sp)
800021bc:	40f2                	lw	ra,28(sp)
800021be:	6105                	addi	sp,sp,32
800021c0:	a035                	j	800021ec <_kill_r>
800021c2:	4685                	li	a3,1
800021c4:	4501                	li	a0,0
800021c6:	fcd708e3          	beq	a4,a3,80002196 <_raise_r+0x14>
800021ca:	56fd                	li	a3,-1
800021cc:	00d71663          	bne	a4,a3,800021d8 <_raise_r+0x56>
800021d0:	47d9                	li	a5,22
800021d2:	c01c                	sw	a5,0(s0)
800021d4:	4505                	li	a0,1
800021d6:	b7c1                	j	80002196 <_raise_r+0x14>
800021d8:	852e                	mv	a0,a1
800021da:	0007a023          	sw	zero,0(a5)
800021de:	9702                	jalr	a4
800021e0:	4501                	li	a0,0
800021e2:	bf55                	j	80002196 <_raise_r+0x14>

800021e4 <raise>:
raise():
800021e4:	85aa                	mv	a1,a0
800021e6:	8081a503          	lw	a0,-2040(gp) # 90000068 <_impure_ptr>
800021ea:	bf61                	j	80002182 <_raise_r>

800021ec <_kill_r>:
_kill_r():
800021ec:	1141                	addi	sp,sp,-16
800021ee:	c422                	sw	s0,8(sp)
800021f0:	842a                	mv	s0,a0
800021f2:	852e                	mv	a0,a1
800021f4:	85b2                	mv	a1,a2
800021f6:	0fffe797          	auipc	a5,0xfffe
800021fa:	e607af23          	sw	zero,-386(a5) # 90000074 <errno>
800021fe:	c606                	sw	ra,12(sp)
80002200:	fb3fd0ef          	jal	ra,800001b2 <_kill>
80002204:	57fd                	li	a5,-1
80002206:	00f51863          	bne	a0,a5,80002216 <_kill_r+0x2a>
8000220a:	0fffe797          	auipc	a5,0xfffe
8000220e:	e6a7a783          	lw	a5,-406(a5) # 90000074 <errno>
80002212:	c391                	beqz	a5,80002216 <_kill_r+0x2a>
80002214:	c01c                	sw	a5,0(s0)
80002216:	40b2                	lw	ra,12(sp)
80002218:	4422                	lw	s0,8(sp)
8000221a:	0141                	addi	sp,sp,16
8000221c:	8082                	ret

8000221e <_getpid_r>:
_getpid_r():
8000221e:	f8dfd06f          	j	800001aa <_getpid>
